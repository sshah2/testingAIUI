       IDENTIFICATION DIVISION.
       PROGRAM-ID. CA0001S.
       AUTHOR. Calwin Team.
       INSTALLATION. CalWIN.
       DATE-WRITTEN. 08/11/2001.
      *
      *
      *============================================================
      ***                PROGRAM TITLE
      *============================================================
     
      * Caseload Assignment for a case program.

      *============================================================
      *                     VERSION 0.1
      *
      *============================================================
      ***                PROGRAM DESCRIPTION
      *============================================================

      * This Subroutine CA0001S does evaluation and assignment of cases
      * to caseloads and also finds the best suitable caseload
      * available for assignments.

      * This subroutine is called from various subsystem processes.

      *      1. Application Registration / Case Clearance
      *         a. Single User
      *         b. Multiple Users

      *      2. Authorization

      *      3. Case Assignment
      *         a. Override
      *         b. Suggest User Inquiry
      *         c. Suggest User Update
      *         d. Mass Transfer of Cases
      *            i)   Type 1 Mass Transfer     All Case -> Y   Auto -> N
      *            ii)  Type 2 Mass Transfer     All Case -> N   Auto -> N
      *            iii) Type 3 Mass Transfer     All Case -> Y   Auto -> Y
      *            iv)  Type 4 Mass Transfer     All Case -> N   Auto -> Y
      *         v)  Type C Mass Transfer Select Cases -> Y   Auto -> N

      *      4. Quality Control

      *      5. Alerts & Tracking
      *  6.  Undo Transfer

      *============================================================
      *
      *============================================================
      ***                SUBROUTINES CALLED
      * 1. AA0016S
      * 2. AS0200S - commented out call
      * 3. AL0001S
      * 4. CC2100S - commented out call
      * 5. INV002S
      * 6. AA0001S
      *
      *============================================================
      *
      *============================================================
      ***                 PROGRAM MAINTENANCE LOG
      *============================================================
      *DATE        | NAME      | CHANGE    |     DESCRIPTION      |
      *            |           | REQUEST # |                      |
      *============================================================
      * 11/11/2001 |Ashok Kumar|           | INITIAL VERSION      |
      *============================================================
      * 04/10/02   |MJ Parsons |           |Initial CBMS Version
      *============================================================
      * 06/12/02   |MJ Parsons |           |Update for error      |
      *            |           |           |     messaging        |
      *============================================================
      * 07/29/02   |MJ Parsons |200000135  |Corrected abend when  |
      *            |           |           |     the pgm_cd and   |
      *            |           |           |    cs_pgm_asg don't  |
      *            |           |           |  match on rt_pgm     |
      *============================================================
      * 11/07/02   |MJ Parsons |Ver.testing|Changed select in     |
      *            |           |           |  60610 to remove     |
      *            |           |           |  join to CS tbl.     |
      *============================================================
      * 11/15/02   |MJ Parsons |fix for AU |Added initialization  |
      *            |           |testing    |of return code.       |
      *============================================================
      * 12/19/02   |MJ Parsons |200000557  |Added initialization  |
      *            |           |           |of return code.       |
      *============================================================
      * 01/20/03   |MJ Parsons |200000634  |Changed error process|
      *            |           |           |for AR path to return|
      *            |           |           |a fatal error when   |
      *            |           |           |the assignment does  |
      *            |           |           |not happen.          |
      *============================================================
      * 01/27/03   |MJ Parsons |200000634  |Removed commit from  |
      *            |           |           |paragraph 70005.     |
      *============================================================
      * 01/28/03   |MJ Parsons |200000317  |Uncommented Alert    |
      *            |           |           |processing.          |
      *============================================================
      * 01/29/03   |MJ Parsons |200000255  |Uncommented CC logic |
      *            |           |           |and changed to only  |
      *            |           |           |create notice if the |
      *            |           |           |worker changes, not  |
      *            |           |           |the caseload (if to  |
      *            |           |           |diff csld same user, |
      *            |           |           |no notice created).  |
      *============================================================
      * 02/19/03   |MJ Parsons |200000311  |Implement MA Site    |
      *            |           |           |processing for AR    |
      *            |           |           |transactions only.   |
      *============================================================
      * 03/20/03   |MJ Parsons |200000311  |Remove extraneous    |
      *            |           |           |display statements.  |
      *============================================================
      * 03/26/03   |MJ Parsons |200000852  |Updated SQL in 10350 |
      *            |           |           |paragraph to have a  |
      *            |           |           |union between cs_pgm |
      *            |           |           |& cs_pgm_h to fix    |
      *            |           |           |undo transfer abend. |
      *============================================================
      * 03/31/03   |MJ Parsons |200000890  |Updated 69254 to move|
      *            |           |           |the correct csld id  |
      *            |           |           |wsd-cs-pgm for updt  |
      *============================================================
      * 04/07/03   |MJ Parsons |200000840  |Corrected 60300 to   |
      *            |           |           |count the ethnicity  |
      *            |           |           |matches (can be more |
      *            |           |           |than one) and to pull|
      *            |           |           |indv_ethn not indv.  |
      *============================================================
      * 04/14/03   |MJ Parsons |200000969  |Updated the C3 cursor|
      *            |           |           |to allow for pending |
      *            |           |           |and to only select if|
      *            |           |           |csld-id is null to   |
      *            |           |           |keep cases from being|
      *            |           |           |reassigned in error. |
      *============================================================
      * 04/16/03   |MJ Parsons |200000852  |Changed 69800 to see |
      *            |           |           |if eff-bgn-dt < curr |
      *            |           |           |date, and if so, use |
      *            |           |           |current date instead |
      *            |           |           |so that no records   |
      *            |           |           |get deleted on table |
      *            |           |           |cs_pgm_h.  Fix for   |
      *            |           |           |View Previous        |
      *            |           |           |Transfers window.    |
      *============================================================
      * 09/08/03   |MJ Parsons |200001489  |Removed hard-coded dt|
      *            |           |           |in overrides for eff |
      *            |           |           |end date.            |
      *============================================================
      * 09/08/03   |MJ Parsons |Initial    |Add MS88 trigger for |
      *            |           | release   |interfaces whenever  |
      *            |           |           |a cs/pgm typ gets    |
      *            |           |           |assigned to a        |
      *            |           |           |different worker.    |
      *============================================================
      * 10/06/03   |MJ Parsons |200001853  |Update SU path to    |
      *            |           |           |update cs_pgm        |
      *            |           |           |correctly so that the|
      *            |           |           |xfr shows up on View |
      *            |           |           |Previous Transfer.   |
      *============================================================
      * 10/28/03   |MJ Parsons |200002087  |Only create new usr  |
      *            |           |           |ltr for AR when the  |
      *            |           |           |pgm sts isn't denied.|
      *============================================================
      * 10/28/03   |MJ Parsons |200002087  |Always pass app-cwin |
      *            |           |           |to CC2100S for the   |
      *            |           |           |new usr ltr.         |
      *============================================================
      * 11/10/03   |MJ Parsons |200002132  |If called by a batch |
      *            |           |           |pgm, use the off_id  |
      *            |           |           |assoc w/the caseload |
      *            |           |           |a program is already |
      *            |           |           |assigned to.         |
      *============================================================
      * 11/10/03   |MJ Parsons |200001853  |If Mass Transfer and |
      *            |           |           |xfr by num of cases, |
      *            |           |           |make sure the user   |
      *            |           |           |has enough cases to  |
      *            |           |           |xfr up front.        |
      *============================================================
      * 12/09/03   |MJ Parsons |200002036  |Move case weight     |
      *            |           |           |determination to a   |
      *            |           |           |new program-CA0003S. |
      *============================================================
      * 12/18/03   |MJ Parsons |200002036  |Fixed 60505 to pull  |
      *            |           |           |the total intk cs cr |
      *            |           |           |from the right table.|
      *============================================================
      * 01/13/04   |MJ Parsons |200002515  |Changed 80001 so that|
      *            |           |           |new user letters are |
      *            |           |           |not created for the  |
      *            |           |           |FT program group.    |
      *============================================================
      * 01/13/04   |MJ Parsons |200002515  |Update 40050 to pick |
      *            |           |           |the closed caseload  |
      *            |           |           |from the office.  It |
      *            |           |           |was using this table |
      *            |           |           |RT_OFF_DEF_CSLD.     |
      *============================================================
      * 01/26/04   |MJ Parsons |SPT/CNV    |Fixed array process  |
      *            |           |           |in several places    |
      *            |           |           |where it wasn't      |
      *            |           |           |checking the upper   |
      *            |           |           |boundary.            |
      *============================================================
      * 01/30/04   |MJ Parsons |200002721  |Corrected 10310 to   |
      *            |           |           |not error if the user|
      *            |           |           |is end-dated on      |
      *            |           |           |se_csld_prm_usr.     |
      *============================================================
      * 02/26/04   |MJ Parsons |200002905  |Corrected alpha cur  |
      *            |           |           |to pull them in upper|
      *            |           |           |case and added csld  |
      *            |           |           |so it wouldn't go    |
      *            |           |           |entire table.        |
      *============================================================
      * 03/19/04   |MJ Parsons |200003014  |Add new path to check|
      *            |           |           |MT # of cases since  |
      *            |           |           |MT will be batch now.|
      *============================================================
      * 05/17/04   |MJ Parsons |200003260  |Added changes to     |
      *            |           |           |assign MA Site HLPGs |
      *            |           |           |to MA Site off when  |
      *            |           |           |app taken at the cnty|
      *============================================================
      * 06/01/04   |MJ Parsons |200003415  |Add additional crit. |
      *            |           |           |to scoring for auto  |
      *            |           |           |assgn & for AU try to|
      *            |           |           |assgn to same usr as |
      *            |           |           |intk if possible 1st.|
      *============================================================
      * 06/22/04   |MJ Parsons |200000000  |Change the CL path so|
      *            |           |           |it will use the right|
      *            |           |           |off for ea. HLPG on  |
      *            |           |           |the case.            |
      *============================================================
      * 08/06/04   |MJ Parsons |200003944  |Change the MT path to|
      *            |           |           |commit after each    |
      *            |           |           |logical transaction. |
      *            |           |           |Also change AU path  |
      *            |           |           |to verify if same usr|
      *            |           |           |can take ON with the |
      *            |           |           |alpha bkdn assgnd.   |
      *            |           |           |Corrected error msg  |
      *            |           |           |when suprvsr has no  |
      *            |           |           |caseload.            |
      *============================================================
      * 09/08/04   |MJ Parsons |Prod Fix   |Do a count on        |
      *            |           |           |se_csld_alpha to see |
      *            |           |           |if we need to use cur|
      *            |           |           |8 or not.  Results   |
      *            |           |           |where cur used and no|
      *            |           |           |alpha bkdn were not  |
      *            |           |           |consistent.          |
      *============================================================
      * 09/28/04   |MJ Parsons |200004149  |update error messges |
      *            |           |           |for csld not found   |
      *            |           |           |conditions.          |
      *============================================================
      * 10/05/04   |MJ Parsons |200004188  |Update to closed case|
      *            |           |           |processing for when  |
      *            |           |           |there isn't a csld.  |
      *============================================================
      * 02/14/05   |MJ Parsons |200004439  |Change to MT2 & MT4  |
      *            |           |           |processing. Was using|
      *            |           |           |a blank sts cd when  |
      *            |           |           |it should've used the|
      *            |           |           |one passed in.  Also |
      *            |           |           |corrected cursor 5&6 |
      *            |           |           |that were using the  |
      *            |           |           |cs_pgm sts insted of |
      *            |           |           |cs sts passed from   |
      *            |           |           |CA0030N.             |
      *============================================================
      * 04/13/05   |MJ Parsons |200004501  |Comment out check for|
      *            |           |           |max cs wght.  Chg    |
      *            |           |           |10315 to not give    |
      *            |           |           |fatal error if off nm|
      *            |           |           |not found.  Also add |
      *            |           |           |code to para 20350 to|
      *            |           |           |call 60510 to chk max|
      *            |           |           |crdt lmt when assgng |
      *            |           |           |to same wrkr for AU. |
      *============================================================
      * 08/05/05   |MJ Parsons |200004676  |Chg code to put HLPGs|
      *            |           |           |that can't be assgnd |
      *            |           |           |to supervisors into  |
      *            |           |           |XF csld in same off. |
      *            |           |           |if there is one or   |
      *            |           |           |any XF csld in cnty. |
      *============================================================
      * 08/11/05   |MJ Parsons |DACR0      |Add check to see if  |
      *            |           |           |closed csld end dated|
      *============================================================
      * 10/12/05   |R Chersin  |200004623  |CC Trigger Changes   |
      *============================================================
      * 02/13/06   |MJ Parsons |200004882  |Comment out call for |
      *            |           |           |new user letter.     |
      *============================================================
      * 02/15/06   |MJ Parsons |200004928  |Reset off_id in the  |
      *            |           |           |MT paths for auto.   |
      *            |           |           |assignment.          |
      *============================================================
      * 04/04/06   |MJ Parsons |200004993  |Don't assign MT's to |
      *            |           |           |xfr csld in other    |
      *            |           |           |counties keep with   |
      *            |           |           |original usr.        |
      *============================================================
      * 04/14/06   |MJ Parsons |200005001  |Put RTRIM back on usr|
      *            |           |           |id when summing for  |
      *            |           |           |cs wghts.            |
      *============================================================
      * 04/19/06   |MJ Parsons |200004974  |Spl Indicators updt  |
      *            |           |  CR 1527  |for auto assignment. |
      *============================================================
      * 05/08/06   |MJ Parsons |200005003  |Correct Closed Case  |
      *            |           |           |path for cases in    |
      *            |           |           |multiple offices.    |
      *============================================================
      * 06/30/06   |MJ Parsons |200005076  |Get fetch dtm in para|
      *            |           |           |69800 to correct a da|
      *            |           |           |softlock issue.      |
      *============================================================
      * 03/07/07   |MJ Parsons |200005277  |End dt spl inds after|
      *            |           |           |closed case process. |
      *============================================================
      * 04/20/07   |MJ Parsons |200005338  |Strip out binary 0s  |
      *            |           |HDT 742226 |being passed in from |
      *            |           |           |AU0010S in usr_id    |
      *============================================================
      * 08/31/07   |MJ Parsons |200005380  |Chg 69275 to use the |
      *            |           |           |correct usr_id/cnty  |
      *            |           |           |for selecting csld.  |
      *============================================================
      * 11/02/07   |MJ Parsons |200005380  |When saving off data |
      *            |           |           |for in 69252 when it |
      *            |           |           |is a masite hlpg, use|
      *            |           |           |cur off not save app |
      *            |           |           |off from cnty.       |
      *============================================================
      * 11/27/07   |MJ Parsons |200005445  |PE specific coding.  |
      *============================================================
      * 12/05/07   |MJ Parsons |200005445A |Correct PE coding to |
      *            |           |           |match DDA.           |
      *============================================================
      * 12/10/07   |MJ Parsons |200005445B |For PE, if it can't  |
      *            |           |           |assign to logged in  |
      *            |           |           |user, try to assign  |
      *            |           |           |to other users in off|
      *            |           |           |B4 super. or xfer    |
      *============================================================
      * 02/01/08   |MJ Parsons |200005550  |Explicitly declare   |
      *            |           | (5445C)   |new PE switch.       |
      *============================================================
      * 12/27/07   |MJ Parsons |200005372  |Pass HLPG in call to |
      *            |           |           |AL0001S.             |
      *============================================================
      * 03/10/08   |MJ Parsons |200005571  |Up the array boundary|
      *            |           |           |on csld array.       |
      *            |           |           |Also fix C10 cursor  |
      *============================================================
      * 7/28/08    |MJ Parsons |200005707  |Fix MT to get fetch  |
      *            |           |           |dtm before updts     |
      *            |           |           |and log errors but   |
      *            |           |           |don't stop processing|
      *            |           |           |if issues.           |
      *============================================================
      * 9/15/08    |MJ Parsons |200005707A |Add commit at end of |
      *            |           |           |loops for MT to make |
      *            |           |           |sure last upd is done|
      *============================================================|
      *10/15/11    |Vijay Kalya|CR2349     |Code change to add   |
      *            |n          |           |new logic for CHP+   |
      *            |           |           |case assignment      |
      *            |           |           |for case creation,   |
      *            |           |           |intake authorization,|
      *            |           |           |pending enrollment   |
      *            |           |           |fee batch program    |
      *============================================================|
      *06/25/12    |Vijay Kalya|CR3212     |Code changes to fix  |
      *            |n          |           |case assignment issue|
      *            |           |           |s                    |
      *            |           |           |                     |
      *=============================================================
      *02/05/13    |Vijay Kalya|Proj4004   |Allow multiple cases |
      *            |n          |           |to be transferred in |
      *            |           |           |case assignment      |
      *=============================================================
      *02/09/13    |Vijay Kalya|Proj4012   |Allow multiple hlpgs |
      *            |n          |           |on one case to xfer  |
      *            |           |           |in Manage Case Assign|
      *            |           |           |ment                 |
      *=============================================================
      *08/12/13    |Vijay Kalya|Proj 2609  |MA hlpg case assign- |
      *            |n          |           |ment changes         |
      *=============================================================
      *09/03/13    |Vijay Kalya|Proj 2609  |MA hlpg RTE for Peak |
      *            |n          |Chg 331    |changes              |
      *=============================================================
      *09/20/13    |Vijay Kalya|CBMSUAT6722|change in RTE userid |
      *            |n          |           |                     |
      *=============================================================
      *11/26/13    |Vijay Kalya|HDT-11114  |Peak MA only exception
      *            |n          |           |handling             |
      *=============================================================
      *03/14/14    |Vijay Kalya|Proj 7043  |MA program transfer  |
      *            |n          |           |                     |
      *=============================================================
      *08/08/14    |Venkatesh  |Proj 7391  |Added APTC check     |
      *            |Bejgum     |           |                     |
      *=============================================================      

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.

       DATA DIVISION.
       WORKING-STORAGE SECTION.

           EXEC SQL BEGIN DECLARE SECTION END-EXEC.

      **********************************************************
      *** ACCUMULATORS - WSA
      *** These variables are numeric fields used to keep track of
      *** of rolling totals, numbers of records, lines printed,
      *** pages printed, etc.
      ****************************************************************
       01  WSA-ACCUMULATORS.
        05 WSA-TYPE2-FTCH-CNT          PIC S9(05) COMP-5.
        05 WSA-TYPE4-FTCH-CNT          PIC S9(05) COMP-5.
        05 WSA-ERROR-CNT               PIC S9(05) COMP-5.
        05 WSA-STRING-POINTER          PIC S9(05) COMP-5.
        05 WSA-NONMA-CNT               PIC S9(09) COMP-5.


      ****************************************************************
      *** CONSTANTS - WSC
      *** Data elements whose values do not change during program
      *** execution.
      ****************************************************************
       01  WSC-CONSTANTS.
        05 WSC-CA0001S                 PIC X(7) VALUE 'CA0001S'.

      * Error Log Subroutine
        05 WSC-AA0016S                 PIC X(7) VALUE 'AA0016S'.

      * ALPHA HIGH VALUE
        05 WSC-ALPHA-HIGH-VAL          PIC X(5) VALUE 'ZZZZZ'.

      * Case Weights Determination
        05 WSC-CA0003S                 PIC X(7) VALUE 'CA0003S'.        
         
      * Alert Subroutine
        05 WSC-AL0001S                 PIC X(7) VALUE 'AL0001S'.

      * Interface Subroutine
        05 WSC-INV002S                 PIC X(7) VALUE 'INV002S'.

      * Client Correspondence Subroutine
        05 WSC-CC2100S                 PIC X(7) VALUE 'CC2100S'.
           05 WSC-YES                      PIC X(1) VALUE 'Y'.
        05 WSC-NO                      PIC X(1) VALUE 'N'.
        05 WSC-ONE                     PIC S9(4) COMP-5
                                       VALUE 1.
        05 WSC-PENDING                 PIC X(2) VALUE 'PE'.

      * Variable to check the Case Mode and Caseload Mode
        05 WSC-INTAKE                  PIC X(02) VALUE 'IN'.
        05 WSC-ONGOING                 PIC X(02) VALUE 'ON'.

      * QC Reviewer User Type to find the QC Reviewer
        05 WSC-QC-RVWR                 PIC X(02) VALUE 'QR'.

      * Variable to check for the Program Status, and Review Approved
        05 WSC-APPROVED                PIC X(02) VALUE 'AP'.

      * Dummy User Variable
        05 WSC-DUMMY-USER              PIC X(15) VALUE '@ # $'.

      * Alert Code to generate alert to the worker
        05 WSC-ALRT-124                PIC X(03) VALUE '124'.

      * Medical Program Constant
        05 WSC-MEDICAL                 PIC X(02) VALUE 'MC'.

      * Data Access Table Constant Variables

        05 WSC-AA-DA-UPDATE-CS-PGM     PIC X(19) VALUE
              'aa_da_update_cs_pgm'.

        05 WSC-AA-DA-CS-PGM-INIT       PIC X(17) VALUE
           'aa_da_cs_pgm_init'.

        05 WSC-AA-DA-INSERT-USR-IN-CS-CR PIC X(30) VALUE
           'aa_da_insert_ca_usr_intk_cs_cr'.

        05 WSC-AA-DA-UPDATE-USR-IN-CS-CR PIC X(30) VALUE
           'aa_da_update_ca_usr_intk_cs_cr'.

        05 WSC-AA-DA-INSERT-USR-IN-CR  PIC X(27) VALUE
           'aa_da_insert_ca_usr_intk_cr'.

        05 WSC-AA-DA-UPDATE-USR-IN-CR  PIC X(27) VALUE
           'aa_da_update_ca_usr_intk_cr'.

      * High Date Constant Variable
        05 WSC-HIGH-DT                 PIC X(10) VALUE
                                '9999-12-31'.
      * Last End Date in Oracle Format
        05 WSC-LAST-END-DT             PIC X(26) VALUE
                                '31-DEC-9999'.
      * Zero Time Field
        05 WSC-DFLT-TIME               PIC X(08) VALUE
                                '00:00:00'.

      * English Language Code
        05 WSC-ENGLISH-LANG-CD         PIC X(02) VALUE 'EN'.

      * County Process Control Constant Variables
      * Match Special Indicators
        05 WSC-MATSPIN                 PIC X(07) VALUE 'MATSPIN'.

      * Match Culture
        05 WSC-MATCULT                 PIC X(07) VALUE 'MATCULT'.

      * Match Labor Agreement
        05 WSC-MATLABR                 PIC X(07) VALUE 'MATLABR'.

      * Match Language
        05 WSC-MATLANG                 PIC X(07) VALUE 'MATLANG'.

      * Generic Case Assignment
        05 WSC-GNRCSAS                 PIC X(07) VALUE 'GNRCSAS'.

      * Auto Case Assignment
        05 WSC-AUTCSAS                 PIC X(07) VALUE 'AUTCSAS'.

      * No Caseload Match
        05 WSC-NOCLMAT                 PIC X(07) VALUE 'NOCLMAT'.

      * Match QC Reviewer Quota
        05 WSC-MATQMAX                 PIC X(07) VALUE 'MATQMAX'.

      * Match QC Reviewer Office with Case Workers Office
        05 WSC-MATQOFF                 PIC X(07) VALUE 'MATQOFF'.

      ** Apply Alpha Breakdown for case assignment
        05 WSC-ALBRKDN                 PIC X(07) VALUE 'ALBRKDN'.

      * Labor agreement Codes
        05 WSC-MAX-IN-WRKLOAD          PIC X(02) VALUE 'IW'.

      * Maximum Ongoing Workload for a Ongoing User
        05 WSC-MAX-ON-WRKLOAD          PIC X(02) VALUE 'OW'.

      * Maximum QC Reviewer Quota
        05 WSC-MAX-QC-CS-REVW          PIC X(02) VALUE 'QC'.

      * Biligual Credit Factor Code
        05 WSC-BILNGL-CRDT-CD          PIC X(02) VALUE 'BL'.

      * Non English Credit Factor Code
        05 WSC-NON-ENG-CRDT-CD         PIC X(02) VALUE 'NE'.

      * Cwin for Client Correspondense Trigger
        05 WSH-CC-TRGR-CWIN            PIC S9(09) COMP-5.

      ** Used to pad variables for Alpha Breakdown comparisons
        05 WSC-Z                       PIC X(01) VALUE 'Z'.
        05 WSC-ZZZZZ                   PIC X(05) VALUE 'ZZZZZ'.

      * Constants used for the Call From Code
        05 WSC-MT                      PIC  X(02) VALUE 'MT'.
        05 WSC-MX                      PIC  X(02) VALUE 'MX'.
        05 WSC-SU                      PIC  X(02) VALUE 'SU'.
        05 WSC-OR                      PIC  X(02) VALUE 'OR'.
        05 WSC-QC                      PIC  X(02) VALUE 'QC'.
        05 WSC-ES                      PIC  X(02) VALUE 'ES'.
        05 WSC-SI                      PIC  X(02) VALUE 'SI'.
        05 WSC-AR                      PIC  X(02) VALUE 'AR'.
        05 WSC-AU                      PIC  X(02) VALUE 'AU'.
        05 WSC-CL                      PIC  X(02) VALUE 'CL'.
        05 WSC-UT                      PIC  X(02) VALUE 'UT'.
2349    05 WSC-PE                      PIC  X(02) VALUE 'PE'.
        05 WSC-B2                      PIC  X(02) VALUE 'B2'.
4004    05 WSC-MC                      PIC  X(02) VALUE 'MC'.
7043    05 WSC-MA                      PIC  X(02) VALUE 'MA'.
4012    05 WSC-20                      PIC  9(02) VALUE 20.
4012    05 WSC-100                     PIC  9(03) VALUE 100.

      * Other constant variables
        05 WSC-ZERO                    PIC  9(01) VALUE 0.
        05 WSC-9                       PIC  9(01) VALUE 9.
4012    05 WSC-4                       PIC  9(01) VALUE 4.
        05 WSC-5                       PIC  9(01) VALUE 5.
        05 WSC-12                      PIC  9(02) VALUE 12.
        05 WSC-26                      PIC  9(02) VALUE 25.
        05 WSC-50                      PIC  9(02) VALUE 50.
        05 WSC-51                      PIC  9(02) VALUE 51.

        05 WSC-C                       PIC  X(01) VALUE 'C'.
        05 WSC-D                       PIC  X(01) VALUE 'D'.
        05 WSC-E                       PIC  X(01) VALUE 'E'.
        05 WSC-N                       PIC  X(01) VALUE 'N'.

        05 WSC-DENIED                  PIC  X(02) VALUE 'DE'.
        05 WSC-00                      PIC  X(02) VALUE '00'.
2609    05 WSC-RTE001N                 PIC  X(07) VALUE 'RTE001N'.
2609    05 WSC-RTE001B                 PIC  X(07) VALUE 'RTE001B'.

      * Error Value Constants
        05 WSC-101                     PIC  9(03) VALUE 101.

      * Invalid Column
        05 WSC-500                     PIC  9(03) VALUE 500.

      * Error Calling process
        05 WSC-501                     PIC  9(03) VALUE 501.

      * Invalid Status
        05 WSC-503                     PIC  9(03) VALUE 503.

      * Error During Open
        05 WSC-510                     PIC  9(03) VALUE 510.

      * Error During Fetch
        05 WSC-511                     PIC  9(03) VALUE 511.

      * Error During Close
        05 WSC-512                     PIC  9(03) VALUE 512.

      * Error During Select
           05 WSC-513                  PIC  9(03) VALUE 513.

      * Error During Insert
        05 WSC-514                     PIC  9(03) VALUE 514.

      * Error During Update
        05 WSC-515                     PIC  9(03) VALUE 515.

      * Error During Delete
        05 WSC-516                     PIC  9(03) VALUE 516.

      * Constant for Delimiter
        05 WSC-ASTERISK                PIC  X(01) VALUE '*'.

      * Constants for Notice/Form Reason Code
        05 WSC-CA0001                  PIC  X(06) VALUE 'CA0001'.
        05 WSC-ZCA1S1                  PIC  X(06) VALUE 'ZCA1S1'.
        05 WSC-ZCA1S3                  PIC  X(06) VALUE 'ZCA1S3'.
        05 WSC-T28PIPE                 PIC  X(04) VALUE "T28|".

      * Constant for Caseload Modes
        05 WSC-CLSD-CSLD-MOD-CD        PIC  X(02) VALUE 'CC'.
4676    05 WSC-XFR-CSLD-MODE           PIC  X(02) VALUE 'XF'.

      * Constant for Closed Caseload Indicator
        05 WSC-CLOSE-CSLD-IND          PIC  X(02) VALUE 'CC'.

2349  * Constant for Inter County Transfer Reason Code
2349    05 WSC-INTER-CNTY-XFR-RSN      PIC  X(02) VALUE 'IT'.

7043  * Constant for MA Transfer Reason Code
7043    05 WSC-MA-XFR-RSN              PIC  X(02) VALUE 'MA'.

      * Constant for Closed Caseload Transfer Reason Code
        05 WSC-CLOSED-CS-XFR-RSN       PIC  X(02) VALUE 'CL'.

      * Constant for Mass Transfer Override Reason Code
        05 WSC-MASS-XFER-OVR-RSN       PIC  X(02) VALUE 'MT'.

      * Constant for Suggest User Override Reason Code
        05 WSC-SUG-USR-OVR-RSN         PIC  X(02) VALUE 'CA'.

      * Constant for Program type code, if it is null
        05 WSC-CS-PGM-TYP-SPACE        PIC  X(02) VALUE '      '.
        05 WSC-MAX-51-CNT              PIC  9(02) VALUE 51.

      * Constant for MA Site county code
        05 WSC-MASITE-CNTY-CD          PIC  X(02) VALUE '64'.

      * Constant values for address type code used to query INDV tbl
        05 WSC-MAIL-ADR                PIC  X(02) VALUE 'ML'.
        05 WSC-HOME-ADR                PIC  X(02) VALUE 'HA'.

      * Interface Trigger Variables
        05 WSC-MS88-TRAN-TYPE          PIC X(04) VALUE 'MS88'.
           05 WSC-CASE-TYPE            PIC X(02) VALUE 'A'.
           05 WSC-KEY-FIELD-C          PIC X(01) VALUE 'C'.

      * Constants for program type code
        05 WSC-FS-TYP-CD               PIC X(02) VALUE 'FS'.
        05 WSC-FT-TYP-CD               PIC X(02) VALUE 'FT'.
        05 WSC-EX-TYP-CD               PIC X(02) VALUE 'EX'.
        05 WSC-DF-TYP-CD               PIC X(02) VALUE 'DF'.
        05 WSC-CW-TYP-CD               PIC X(02) VALUE 'CW'.
        05 WSC-WW-TYP-CD               PIC X(02) VALUE 'WW'.
        05 WSC-CD-TYP-CD               PIC X(02) VALUE 'CD'.
5445    05 WSC-PE-TYP-CD               PIC X(02) VALUE 'PE'.
2349    05 WSC-CH-TYP-CD               PIC X(02) VALUE 'CH'.
2349    05 WSC-FM-TYP-CD               PIC X(02) VALUE 'FM'.
1815    05 WSC-AM-TYP-CD               PIC X(02) VALUE 'AM'.
3212    05 WSC-LT-TYP-CD               PIC X(02) VALUE 'LT'.
3212    05 WSC-LS-TYP-CD               PIC X(02) VALUE 'LS'.
3212    05 WSC-MS-TYP-CD               PIC X(02) VALUE 'MS'.
2609    05 WSC-MA-TYP-CD               PIC X(02) VALUE 'MA'.

      * Constant for 2 spaces for delimiting concatenated names
        05 WSC-2-SPACES                PIC X(02) VALUE '  '.

      * Numeric constant values
        05 WSC-01                      PIC 9 VALUE 1.
        05 WSC-02                      PIC 9 VALUE 2.

CR3212  05 WSC-PEAK                    PIC X(02) VALUE 'PK'.
2609    05 WSC-C4HCO                   PIC X(02) VALUE 'C4'.

      * Copybook for SQL status, Data Access and File Status values 
       01  FILLER.
       COPY AA0033C.

      *
      **********************************************************
      *** HOLD VARIABLES - WSH
      *** These variables are used as storage fields for the
      *** manipulation of data or as holding fields for control
      *** field comparison.
      ****************************************************************
       01  WSH-HOLD-VARIABLES.

      * Current Date variable
        05 WSH-CURRENT-DT              PIC X(10).
           05 WSH-CURRENT-DT-H         PIC X(10) VALUE '2002-04-30'.

      * Temporary variable to store the Current Date
        05 WSH-TEMP-DT.
           10 WSH-TEMP-DT-YYYY         PIC X(04).
           10 FILLER                   PIC X(01).
           10 WSH-TEMP-DT-MM           PIC X(02).
           10 FILLER                   PIC X(01).
           10 WSH-TEMP-DT-DD           PIC X(02).

      * Current Date/Time
        05  WSH-CURRENT-DTM            PIC X(19).

      * Current Year and Month
        05 WSH-CUR-YYYYMM              PIC 9(06).

      * Temporary Year and Month
        05 WSH-TEMP-YYYYMM.
           10 WSH-TEMP-YYYY            PIC 9(04).
           10 WSH-TEMP-MM              PIC 9(02).

      * Variable to store the Intake and Ongoing User Credit
        05 WSH-INTAKE-USR-CR           USAGE IS      COMP-1.
        05 WSH-ONGOING-USR-CR          USAGE IS      COMP-1.

      * Variable to store the final Case Combination Code
        05 WSH-FINAL-CS-TYP-CD         PIC  X(02).

      * Case Program Count
        05 WSH-CS-PGM-COUNT            PIC S9(04) COMP-5.

      * Case Weight Program Count
        05 WSH-CS-WGHT-PGM-CNT         PIC S9(04) COMP-5.

      * Case Special Indicator Count
        05 WSH-CS-SPL-SITN-COUNT       PIC S9(04) COMP-5.

2349  * Office Count for vendor
2349       05 WSH-VENDOR-OFF-COUNT     PIC S9(04) COMP-5.

2349  * Vendor caseload id
2349       05 WSH-VENDOR-XFER-CSLD     PIC S9(09) COMP-5.
2609       05 WSH-DENHLTH-XFER-CSLD    PIC S9(09) COMP-5.
2609       05 WSH-VENDOR-OFF-ID        PIC S9(09) COMP-5.
2609       05 WSH-DENHLTH-OFF-ID       PIC S9(09) COMP-5.
2609       05 WSH-VENDOR-CNTY-CD       PIC X(02).
3212       05 WSH-CUR-XFER-CSLD        PIC S9(09) COMP-5.
2609       05 WSH-MA-FINAL-CSLD        PIC S9(09) COMP-5.
2609       05 WSH-CNTYRES-XFER-CSLD    PIC S9(09) COMP-5.
7391       05 WSH-APTC-C4HCO-CSLD      PIC S9(09) COMP-5.
2609       05 WSH-RES-CNTY-CD          PIC X(02).

1815  * AwDC count
           05 WSH-INDV-ASST-COUNT      PIC S9(09) COMP-5.
           
7391  * APTC count
           05 WSH-APTC-COUNT           PIC S9(09) COMP-5.           

      * Variable used in QC Reviewer Assignment
        05 WSH-QC-USR-CNT              PIC  S9(09) COMP-5.
        05 WSH-QC-USR-ID               PIC  X(15).
        05 WSH-QC-USR-OFF-ID           PIC  S9(09) COMP-5.

      * Variable used for the every iteration of the Case
        05 WSH-CUR-USR-ID              PIC  X(15).
        05 WSH-HOLD-USR-ID             PIC  X(15).
        05 WSH-HOLD-OFF-ID             PIC  S9(09) COMP-5.
        05 WSH-CUR-OFF-ID              PIC  S9(09) COMP-5.
           05 WSH-CUR-OFF-ID-N REDEFINES
           WSH-CUR-OFF-ID              PIC  Z(09).
        05 WSH-CUR-OFF-ID-X REDEFINES 
          WSH-CUR-OFF-ID-N             PIC  X(09).
        05 WSH-CUR-CS-ID               PIC  X(07).
        05 WSH-CUR-PGM-TYP-CD          PIC  X(02).
cr3212     05 WSH-CUR-PK-PGM-TYP-CD    PIC  X(02).
        05 WSH-CUR-PGM-TYP-CD-TBL      PIC  X(02).
           05 WSH-PGM-TYP-CD-FETCH     PIC  X(02).
        05 WSH-HOLD-PGM-TYP-CD         PIC  X(02).
        05 WSH-OFF-PGM-TYP-CD          PIC  X(02).
        05 WSH-CUR-CS-ASG-PGM          PIC  X(02).
        05 WSH-CUR-PGM-STS-CD          PIC  X(02).
4439        05 WSH-CUR-CS-STS-CD       PIC  X(02).
        05 WSH-CUR-PRM-LANG-CD         PIC  X(02).
        05 WSH-CUR-SPL-IND             PIC  X(02).
        05 WSH-CUR-CWIN-ID             PIC  S9(09) COMP-5.
        05 WSH-CWIN                    PIC  S9(09) COMP-5.
        05 WSH-APP-CWIN                PIC  S9(09) COMP-5.
        05 WSH-CUR-EFF-BGN-DT          PIC  X(10).
        05 WSH-CUR-EFF-END-DT          PIC  X(10).
        05 WSH-CUR-UPD-DTM             PIC  X(19).
cr3212  05 WSH-CUR-PK-CS-ID            PIC  X(07).
cr3212  05 WSH-CUR-PK-APP-ID           PIC  S9(09) COMP-5.
cr3212  05 WSH-CNTY-CD                 PIC  X(02).
cr3212  05 WSH-MA-OFF-ID               PIC  S9(09) COMP-5.
2609    05 WSH-CUR-MA-APP-ID           PIC  S9(09) COMP-5.
2609    05 WSH-CUR-MA-APP-SRC-CD       PIC  X(02).
        05 WSH-CUR-PEAK-RTE-STS-CD     pic  X(02).

      * Variable used to store current and orig worker user id 
        05 WSH-CASELOAD-WRKR.
           10 WSH-ORIG-CSLD-WRKR       PIC X(15).
           10 WSH-CUR-CSLD-WRKR        PIC X(15).
           10 WSH-CSLD-WRKR            PIC X(15).

      * Variable to send the current time to the appointment scheduling
        05 WSH-SCHD-CUR-DTM.
           10 WSH-SCHD-CUR-DT          PIC  X(10).
           10 FILLER                   PIC  X(01).
           10 WSH-SCHD-CUR-TM          PIC  X(08).

      * Variable for the Case Mode as Intake Or Ongoing
        05 WSH-CUR-CS-MODE-CD          PIC  X(02).

      * Variable for the Caseload ID
        05 WSH-CUR-CSLD-ID             PIC  S9(09) COMP-5.
        05 WSH-CSLD-ID-NUM             PIC  9(09).
        05 WSH-ORIG-CSLD-ID            PIC  S9(09) COMP-5.

      * Variable for caseload mode code
        05 WSH-TEMP-CSLD-MODE-CD       PIC  X(02).


      * Variable to find the user other than this user
        05 WSH-NOT-THIS-USR-ID         PIC  X(15).

        05 WSH-PREV-CS-ID              PIC  X(07).
        05 WSH-PREV-PGM-TYP-CD         PIC  X(02).
        05 WSH-PREV-CSLD-ID            PIC  S9(09) COMP-5.

      * Variable for the Hold Closed Caseload Value
        05 WSH-CLOSED-CSLD-ID          PIC  S9(09) COMP-5.

      * Number of cases used for the Mass Transfer
        05 WSH-CS-COUNT                PIC  S9(09) COMP-5.
        05 WSH-CS-XFER-PCT-COUNT       PIC  S9(09) COMP-5.

        05 WSH-DUMMY                   PIC  X(01).

      * Variable to store the difference between the eff_bgn and cur dt
        05 WSH-DIFF-IN-DT-NUM          PIC  S9(09) COMP-5.

      * Temporary variable to store the Case id, user ids
        05 WSH-TEMP-CS-ID              PIC  X(07).
        05 WSH-TEMP-USR-ID             PIC  X(15).
        05 WSH-TEMP-OFF-NAM            PIC  X(20).
        05 WSH-TEMP-CSLD-NAM           PIC  X(20).
        05 WSH-TEMP-CSLD-ID            PIC  S9(09) COMP-5.
        05 WSH-TEMP-PGM-TYP-CD         PIC  X(02).

      * Variable includes Last, First, MI and Suffix Name.
        05 WSH-XFR-USR-FUL-NM          PIC  X(55).
        05 WSH-XFR-CS-FUL-NM           PIC  X(55).
        05 WSH-TEMP-FULL-NAM           PIC  X(55).

      * Case Program for which the alert is created.
        05 WSH-ALRT-PGM-TYP-CD         PIC  X(02).

      * Variable to get the case user language and bilingual switch
        05 WSH-CR-USR-LANG-CD          PIC X(02).
        05 WSH-BILNGL-LANG-SW          PIC X(01).

      * Labor Agreement Values
        05 WSH-MAX-INTAKE-CR           USAGE IS      COMP-1.
        05 WSH-MAX-ONGOING-CR          USAGE IS      COMP-1.
        05 WSH-MAX-QC-REVW-CNT         USAGE IS      COMP-1.
        05 WSH-BILNGL-CRDT-FCTR        USAGE IS      COMP-1.
        05 WSH-NON-ENG-CRDT-FCTR       USAGE IS      COMP-1.

      * Temporary variable to store the Intk/ongoing Case Credit
        05 WSH-TEMP-INTK-CR-VAL        USAGE IS      COMP-1.
        05 WSH-ADD-INTK-PGM-WGHT-FCTR  USAGE IS      COMP-1.
        05 WSH-TEMP-INTK-UPD-DTM       PIC X(19).

        05 WSH-TEMP-ONGNG-CR-VAL       USAGE IS      COMP-1.
        05 WSH-ADD-ONGNG-PGM-WGHT-FCTR USAGE IS      COMP-1.
        05 WSH-TEMP-ONGNG-UPD-DTM      PIC X(19).

        05 WSH-FINAL-CSLD-ID           PIC S9(09) COMP-5.

      * Variable for the Alert Date
        05 WSH-ALRT-DT                 PIC X(10).

      * Variable for the Speed Letter form
        05 WSH-SPD-LTR-CUR-CS-ID       PIC X(07).
        05 WSH-SPD-LTR-PRE-CS-ID       PIC X(07).

5380  * Variable to store the current caseload county
5380        05 WSH-CSLD-CNTY-CD        PIC X(02).

5380  * Variables to get the correct caseload from supervisor
5380       05 WSH-GET-SUPER-CNTY-CD    PIC X(02).
5380        05 WSH-GET-SUPER-USR-ID    PIC X(15).


5571  * Up the array size to 51 in case they max out on cslds
5571  * and there isn't a match on alpha to correct array out
5571  * of bounds error.
      * Final Match Caseload Array
        05 WSH-CSLD-TBL-ARRAY.
          10 WSH-CSLD-ARRAY OCCURS 51 TIMES INDEXED BY WSC-IX.
            15 WSH-CSLD-ID-MTCH         PIC S9(09) COMP-5.
            15 WSH-USR-ID-MTCH          PIC     X(15).
            15 WSH-CS-ID-MTCH           PIC     X(07).
            15 WSH-PGM-TYP-CD-MTCH      PIC     X(02).
            15 WSH-LANG-MTCH            PIC     X(01).
            15 WSH-SPL-IND-MTCH         PIC  X(01).
            15 WSH-ETHN-MTCH            PIC     X(01).
            15 WSH-NUM-ETHN-MTCHS       PIC S9(04) COMP-5.
            15 WSH-USR-SCH-MTCH         PIC     X(01).
            15 WSH-MAX-CRD-CNT-RCH      PIC     X(01).
            15 WSH-LANG-CNT-RCH         PIC     X(01).
            15 WSH-CSLD-CRDT-MAX-RCH    PIC     X(01).
            15 WSH-CSLD-USR-ENG-MTCH    PIC     X(01).
            15 WSH-HLPG-CNT-MTCH        PIC  X(01).
            15 WSH-NUM-HLPG-MTCH        PIC S9(04) COMP-5.
            15 WSH-CSLD-SLCT-IND        PIC S9(04) COMP-5.
            15 WSH-CSLD-CRDT-VAL        USAGE IS  COMP-1.

      * Indicator Variables
        05 WSH-PGM-STS-I                PIC S9(04) COMP-5.
        05 WSH-PGM-TYP-I                PIC S9(04) COMP-5.
        05 WSH-PRM-LANG-I               PIC S9(04) COMP-5.
        05 WSH-USR-ID-I                 PIC S9(04) COMP-5.
        05 WSH-OFF-ID-I                 PIC S9(04) COMP-5.

      * Stores the alpha breakdown values for a caseload 

        05 WSH-CSLD-ALPHA-BGN           PIC X(05).
        05 WSH-CSLD-ALPHA-END           PIC X(05).
        05 WSH-CSLD-ALPHA-CSLDID        PIC 9(06).

      * Stores the last name on the case id for comparison on alpha
      * breakdown assignment
        05 WSH-CS-LAST-NAME             PIC X(40).
        05 WSH-CS-LAST-NAME-R REDEFINES WSH-CS-LAST-NAME.
           10     WSH-COMPARE-LAST-NAME   PIC X(05).
           10     WSH-REMAINING-LAST-NAME PIC X(35).

      ** Stores the user id and index for Automatic Case Assignment
        05 WSH-AUTO-ASGN-USR-ID         PIC X(15).
        05 WSH-AUTO-ASGN-INDEX          PIC S9(09) COMP-5.

      * Stores address indcator, county and office for MASite 
        05     WSH-SAVE-APP-INFO.
          10   WSH-SAVE-APP-HOMLS-SW    PIC X(01).
          10   WSH-SAVE-APP-CNTY        PIC X(02).
          10   WSH-SAVE-APP-OFF         PIC S9(05) COMP-5.
          10   WSH-SAVE-MASITE-CNTY-CD  PIC X(02).
          10   WSH-SAVE-MASITE-CNTY-SW  PIC X(01).

      * Stores the number of ethnicity matches between app and csld

        05   WSH-NO-OF-ETHN-MTCHS       PIC S9(04) COMP-5.

      * The number of cases that a user has assigned to them

        05   WSH-CASE-COUNT             PIC S9(04) COMP-5.

      * Program type codes that suppress new user letter.
        05   WSH-SUPPRESS-NEW-USR-LTR   PIC X(02).
          88  WSH-SUPPRESS-PGM-TYP VALUE 'FT'.

      * Variable for the HLPG switch
        05   WSH-HLPG-SW                PIC X(01).

      * Variables for MA Site processing
        05   WSH-MASITE-CNTY-CD         PIC X(02).
        05   WSH-MASITE-OFF             PIC S9(05) COMP-5.

      * Variable for the CA priority code
        05     WSH-CA-PRRTY-CD          PIC S9(03) COMP-5.

      * Variable for the number of HLPG's assgnd to the cur csld
        05   WSH-HLPG-CNT               PIC S9(09) COMP-5.

      * Variable for the number of ongoing csld's assgnd to cur usr
      * for the current HLPG - basically CUR 2 + usr_id count
        05     WSH-AU-CSLD-CNT          PIC S9(09) COMP-5.

      * Variable for caseload id when called from AU
        05 WSH-AU-CSLD-ID               PIC  S9(09) COMP-5.

      * Variable to hold the number of alpha breakdown entries
        05 WSH-ALPHA-BKDN-CNT           PIC  S9(09) COMP-5.

      * Variable to hold the program group name for error messaging
        05 WSH-HLPG-NM                  PIC  X(30).

      * Variable to hold the office name for error messaging
        05 WSH-OFF-NM                   PIC  X(32).
  
      * Variable to hold the county name for error messaging
        05 WSH-CNTY-NM                  PIC  X(25).

      * Temp variable to get the office name
        05 WSH-OFF-ID-TO-GET-NM         PIC S9(09) COMP-5.

      * Temp variable to get the county name
        05 WSH-CNTY-CD-TO-GET-NM        PIC  X(02).

4676  * Variables used to determine transfer csld information
4676        05 WSH-XFR-CSLD-ID          PIC S9(09) COMP-5.
4676        05 WSH-XFR-USR-ID           PIC  X(15).
4676        05 WSH-XFR-CNTY-CD          PIC  X(02).

4676        05 WSH-DISPLAY-OFF-ID       PIC  9(04).

        05 WSH-ACTIVE-CSLD-CNT          PIC S9(05) COMP-5.

4974  * Stores count of special indicator matches on the caseload
4974        05 WSH-CSLD-SPL-IND-COUNT   PIC S9(09) COMP-5.

5707  * Stores count of Mass Transfer errors
5707        05 WSH-MT-ERR-COUNT         PIC S9(09) COMP-5.

5707  * Used to hold the MT pgm typ & sts cd's passed into pgm as 
5707  * the linkage variables were overwritten in later processing
5707        05 WSH-MT-PGM-TYP-CD        PIC X(02).
5707        05 WSH-MT-PGM-STS-CD        PIC X(02).


      **********************************************************
      *** INDEX VARIABLES - WSI
      *** These variables are used as storage fields for table
      *** indices and subscripts
      ****************************************************************
       01 WSI-INDICES.
       05 WSI-CSLD                     PIC S9(09) COMP-5.
       05 WSI-FIN-CNT                  PIC S9(09) COMP-5.
       05 WSI-XFR-IX                   PIC S9(09) COMP-5.
       05 WSI-POP-TBL                  PIC S9(09) COMP-5.
       05 WSI-I                        PIC S9(09) COMP-5.
       05 WSI-CLOSD-CNT                PIC S9(09) COMP-5.
          05 WSI-MULT-XFR-IX           PIC S9(09) COMP-5.
       05 WSI-NONMA-IDX                PIC S9(09) COMP-5.
       05 WSI-NUM-CASES-IX             PIC S9(09) COMP-5.
       05 WSI-NUM-ERRORS-IX            PIC S9(09) COMP-5.
       05 WSI-AU-IDX                   PIC S9(09) COMP-5.
4004      05 WSI-MC-IDX                PIC S9(09) COMP-5.
4012      05 WSI-SI-PGM-IDX            PIC S9(09) COMP-5.
4012      05 WSI-SI-MAIN-IDX           PIC S9(09) COMP-5.
4012      05 WSI-SI-1STPGM-IDX         PIC S9(09) COMP-5.
4012      05 WSI-SI-FINAL-IDX          PIC S9(09) COMP-5.
4012      05 WSI-SI-FETCH-IDX          PIC S9(09) COMP-5.
4012      05 WSI-SI-LAST-MAIN-IDX      PIC S9(09) COMP-5.
4012      05 WSI-SU-OR-PGM-IDX         PIC S9(09) COMP-5.

      **********************************************************
      *** SWITCHES - WSS
      *** These variables are used to control program flow and logic
      ****************************************************************
       01  WSS-SWITCHES.
        05 WSS-SKIP-SW                 PIC X(1) VALUE 'N'.
            88 WSS-SKIP                VALUE 'Y'.
            88 WSS-NO-SKIP             VALUE 'N'.

        05 WSS-AR-PROCESS-SW           PIC X(1) VALUE 'N'.
           88 WSS-AR-PROCESS-ALL-CS-PGM    VALUE 'A'.
           88 WSS-AR-PROCESS-SINGLE-CS-PGM VALUE 'S'.

        05 WSS-MT-TYPE-XFER            PIC X(1) VALUE 'N'.
           88 WSS-TYPE1-MASS-XFER           VALUE '1'.
           88 WSS-TYPE2-MASS-XFER           VALUE '2'.
           88 WSS-TYPE3-MASS-XFER           VALUE '3'.
           88 WSS-TYPE4-MASS-XFER           VALUE '4'.
4004       88 WSS-TYPEC-MASS-XFER           VALUE 'C'.

        05 WSS-ASSGN-CSLD-SW           PIC X(1) VALUE 'X'.
           88 WSS-ASSGN-CSLD                VALUE 'Y'.
           88 WSS-NOT-ASSGN-CSLD            VALUE 'N'.

        05 WSS-CASELOAD-EXISTS-SW      PIC X(1) VALUE 'N'.
           88 WSS-CASELOAD-EXISTS           VALUE 'Y'.
           88 WSS-CASELOAD-NOT-EXISTS       VALUE 'N'.

        05 WSS-CASE-EXISTS-SW          PIC X(1) VALUE 'N'.
           88 WSS-CASE-EXISTS               VALUE 'Y'.
           88 WSS-CASE-NOT-EXISTS           VALUE 'N'.

        05 WSS-CS-PGM-EXISTS-SW        PIC X(1) VALUE 'N'.
           88 WSS-CS-PGM-EXISTS             VALUE 'Y'.
           88 WSS-CS-PGM-NOT-EXISTS         VALUE 'N'.

        05 WSS-CS-SPL-IND-EXISTS-SW    PIC X(1) VALUE 'N'.
           88 WSS-CS-SPL-IND-EXISTS         VALUE 'Y'.
           88 WSS-CS-SPL-IND-NOT-EXISTS     VALUE 'N'.

        05 WSS-USR-ENG-LANG-MTCH-SW    PIC X(1) VALUE 'N'.
           88 WSS-USR-ENG-LANG-MTCH         VALUE 'Y'.
           88 WSS-USR-ENG-LANG-NOT-MTCH     VALUE 'N'.

        05 WSS-CS-PGM-CNT-EXISTS-SW    PIC X(1) VALUE 'N'.
           88 WSS-CS-PGM-CNT-EXISTS         VALUE 'Y'.
           88 WSS-CS-PGM-CNT-NOT-EXISTS     VALUE 'N'.

        05 WSS-CS-ETHN-USR-MATCH-SW    PIC X(1) VALUE 'X'.
           88 WSS-CS-ETHN-USR-MATCH         VALUE 'Y'.
           88 WSS-CS-ETHN-USR-NOT-MATCH     VALUE 'N'.

        05 WSS-CS-SPL-IND-MATCH-SW     PIC X(1) VALUE 'X'.
           88 WSS-CS-SPL-IND-MATCH          VALUE 'Y'.
           88 WSS-CS-SPL-IND-NOT-MATCH      VALUE 'N'.

        05 WSS-USR-LANG-MATCH-SW       PIC X(1) VALUE 'X'.
           88 WSS-USR-LANG-MATCH             VALUE 'Y'.
           88 WSS-USR-LANG-NOT-MATCH         VALUE 'N'.

        05 WSS-END-C1-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C1-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C1-CURSOR          VALUE 'N'.

        05 WSS-END-C2-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C2-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C2-CURSOR          VALUE 'N'.

        05 WSS-END-C3-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C3-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C3-CURSOR          VALUE 'N'.

        05 WSS-END-C4-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C4-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C4-CURSOR          VALUE 'N'.

        05 WSS-END-C5-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C5-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C5-CURSOR          VALUE 'N'.

        05 WSS-END-C6-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C6-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C6-CURSOR          VALUE 'N'.

        05 WSS-END-C7-CURSOR-SW        PIC X(1) VALUE 'N'.
           88 WSS-END-C7-CURSOR              VALUE 'Y'.
           88 WSS-NOT-END-C7-CURSOR          VALUE 'N'.

           05 WSS-END-C8-CURSOR-SW     PIC X(01) VALUE 'N'.
          88 WSS-END-C8-CURSOR               VALUE 'Y'.
          88 WSS-NOT-END-C8-CURSOR           VALUE 'N'.

           05 WSS-END-C9-CURSOR-SW     PIC X(01) VALUE 'N'.
          88 WSS-END-C9-CURSOR               VALUE 'Y'.
          88 WSS-NOT-END-C9-CURSOR           VALUE 'N'.

4974       05 WSS-END-C10-CURSOR-SW    PIC X(01) VALUE 'N'.
4974          88 WSS-END-C10-CURSOR          VALUE 'Y'.
4974          88 WSS-NOT-END-C10-CURSOR      VALUE 'N'.

3212       05 WSS-END-PK-CURSOR-SW     PIC X(01) VALUE 'N'.
3212            88 WSS-END-PK-CURSOR         VALUE 'Y'.
3212            88 WSS-NOT-END-PK-CURSOR     VALUE 'N'.

4004       05 WSS-END-MC-CURSOR-SW     PIC X(1) VALUE 'N'.
4004          88 WSS-END-MC-CURSOR           VALUE 'Y'.
4004          88 WSS-NOT-END-MC-CURSOR       VALUE 'N'.

        05 WSS-PROCESS-TYPE-SW         PIC X(02) VALUE 'NN'.
           88 WSS-PROCESS-AR-ASSGN           VALUE 'AR'.
           88 WSS-PROCESS-AU-ASSGN           VALUE 'AU'.
           88 WSS-PROCESS-ES-ASSGN           VALUE 'ES'.
           88 WSS-PROCESS-QC-ASSGN           VALUE 'QC'.
           88 WSS-PROCESS-SUGST-INQ          VALUE 'SI'.
           88 WSS-PROCESS-SUGST-UPD          VALUE 'SU'.
           88 WSS-MT-TYPES-ASGN              VALUE 'MT'.
           88 WSS-PROCESS-OR-ASSGN           VALUE 'OR'.
           88 WSS-PROCESS-CL-ASSGN           VALUE 'CL'.
           88 WSS-PROCESS-UNDO-XFER          VALUE 'UT'.
 
        05 WSS-PROCESS-SNGL-CS-PGM       PIC X(02) VALUE 'NN'.
           88 WSS-SU-PROCESS-SINGLE-CS-PGM VALUE 'SU'.
           88 WSS-SI-PROCESS-SINGLE-CS-PGM VALUE 'SI'.
           88 WSS-ES-PROCESS-SINGLE-CS-PGM VALUE 'ES'.
           88 WSS-QC-PROCESS-SINGLE-CS-PGM VALUE 'QC'.
           88 WSS-OR-PROCESS-SINGLE-CS-PGM VALUE 'OR'.
           88 WSS-MT-PROCESS-SINGLE-CS-PGM VALUE 'MT'.
2349       88 WSS-PE-PROCESS-SINGLE-CS-PGM VALUE 'PE'.
7043       88 WSS-MA-PROCESS-SINGLE-CS-PGM VALUE 'MA'.


        05 WSS-CNTY-GNR-CS-ASG-SW         PIC X(01) VALUE 'N'.
           88 WSS-CNTY-GNR-CS-ASG           VALUE 'Y'.

           05 WSS-ALBRKDN-SW          PIC X(01) VALUE 'N'.
             88 WSS-ALBRKDN          VALUE 'Y'.
 
        05 WSS-CNTY-AUTO-ASGN-SW            PIC X(01) VALUE 'N'.
           88 WSS-CNTY-AUTO-ASGN           VALUE 'Y'.

        05 WSS-CNTY-PROC-CULT-MTCH-SW       PIC X(01) VALUE 'N'.
           88 WSS-CNTY-PROC-CULT-MTCH      VALUE 'Y'.

        05 WSS-CNTY-PROC-LABOR-MTCH-SW      PIC X(01) VALUE 'N'.
           88 WSS-CNTY-PROC-LABOR-MTCH     VALUE 'Y'.

        05 WSS-CNTY-PROC-LANG-MTCH-SW       PIC X(01) VALUE 'N'.
           88 WSS-CNTY-PROC-LANG-MTCH      VALUE 'Y'.

        05 WSS-CNTY-PROC-SPL-IND-MTCH-SW    PIC X(01) VALUE 'N'.
           88 WSS-CNTY-PROC-SPL-IND-MTCH   VALUE 'Y'.

        05 WSS-USR-SCH-MATCH-SW          PIC X(01) VALUE 'N'.
           88 WSS-USR-SCH-MATCH           VALUE 'Y'.
           88 WSS-USR-SCH-NOT-MATCH           VALUE 'N'.

        05 WSS-MAX-CRDT-NOT-RCH-SW          PIC X(01) VALUE 'N'.
           88 WSS-MAX-CRDT-RCH            VALUE 'Y'.
           88 WSS-MAX-CRDT-NOT-RCH            VALUE 'N'.

        05 WSS-CS-MODE-SW               PIC X(02) VALUE 'NN'.
           88 WSS-INTAKE                VALUE 'PE'.
           88 WSS-ONGOING                VALUES 'OP' 'CL'.

        05 WSS-NOCLMAT-SW                 PIC X(01) VALUE 'N'.
           88 WSS-NOCLMAT-CONTINUE           VALUE 'C'.
           88 WSS-NOCLMAT-DUMMY           VALUE 'D'.
           88 WSS-NOCLMAT-ERROR           VALUE 'E'.

        05 WSS-MATQMAX-SW                 PIC X(01) VALUE 'N'.
           88 WSS-MATQMAX                VALUE 'Y'.

        05 WSS-MATQOFF-SW                 PIC X(01) VALUE 'N'.
           88 WSS-MATQOFF                VALUE 'Y'.

        05 WSS-CS-LNG-USR-LNG-SW            PIC X(01) VALUE 'N'.
           88 WSS-SAME-CS-LNG-USR-LNG      VALUE 'S'.
           88 WSS-EN-USR-LNG-DIF-CS-LNG    VALUE 'E'.

        05 WSS-GIVE-WHAT-LNG-CR-SW          PIC X(02) VALUE 'CC'.
           88 WSS-GIVE-BILNGL-CRDT          VALUE 'BL'.
           88 WSS-GIVE-NON-ENGL-CRDT        VALUE 'NE'.

        05 WSS-FIRST-TIME-SU-ASGN-SW      PIC X(01) VALUE 'Y'.
           88 WSS-FIRST-TIME-SU-ASGN        VALUE 'Y'.
           88 WSS-NOT-FIRST-TIME-SU-ASGN    VALUE 'N'.

        05 WSS-TRIGGER-NOTICE-SW          PIC X(01) VALUE 'N'.
           88 WSS-TRIGGER-NOTICE            VALUE 'Y'.
           88 WSS-DONT-TRIGGER-NOTICE       VALUE 'N'.

        05 WSS-CHK-INTK-COMBN-SW          PIC X(01) VALUE 'N'.
           88 WSS-CHK-INTK-COMBN           VALUE 'Y'.
           88 WSS-NO-CHK-INTK-COMBN        VALUE 'N'.

        05 WSS-CHK-ONGNG-COMBN-SW          PIC X(01) VALUE 'N'.
           88 WSS-CHK-ONGNG-COMBN          VALUE 'Y'.
           88 WSS-NO-CHK-ONGNG-COMBN       VALUE 'N'.

        05 WSS-DELETE-ALRT-SW             PIC X(01) VALUE 'N'.
           88 WSS-DELETE-ALRT              VALUE 'Y'.
           88 WSS-DONT-DELETE-ALRT         VALUE 'N'.

        05 WSS-CHK-NXT-FTCH-END-SW          PIC X(01) VALUE 'N'.
           88 WSS-CHK-NXT-FTCH-END          VALUE 'Y'.
           88 WSS-CHK-NXT-FTCH-NOT-END      VALUE 'N'.

        05 WSS-POPULATE-XFR-ARRAY-SW      PIC X(01) VALUE 'N'.
           88 WSS-POPULATE-XFR-ARRAY        VALUE 'Y'.
           88 WSS-NO-POPULATE-XFR-ARRAY     VALUE 'N'.

        05 WSS-PROCESS-CLOSED-CS-SW       PIC X(01) VALUE 'N'.
           88 WSS-PROCESS-CLOSED-CS            VALUE 'Y'.
           88 WSS-PROCESS-NO-CLOSED-CS      VALUE 'N'.

        05 WSS-OFF-ID-FOUND-SW            PIC X(01) VALUE 'N'.
           88 WSS-OFF-ID-FOUND            VALUE 'Y'.
           88 WSS-OFF-ID-NOT-FOUND            VALUE 'N'.

        05 WSS-CLOSED-CSLD-FOUND-SW       PIC X(01) VALUE 'N'.
           88 WSS-CLOSED-CSLD-FOUND            VALUE 'Y'.
           88 WSS-CLOSED-CSLD-NOT-FOUND        VALUE 'N'.

        05 WSS-DELETE-ONGNG-CR-SW         PIC X(01) VALUE 'N'.
           88 WSS-DELETE-ONGNG-CR            VALUE 'Y'.
           88 WSS-NO-DELETE-ONGNG-CR         VALUE 'N'.
           
           05 WSS-MASS-XFER-SW            PIC X(01) VALUE 'N'.
           88 WSS-MASS-XFER-FOUND           VALUE 'Y'.
           88 WSS-MASS-XFER-NOT-FOUND       VALUE 'N'.

           
           05 WSS-ALPHA-MTCH-SW               PIC X(01) VALUE 'N'.
              88 WSS-ALPHA-MTCH               VALUE 'Y'.
              88 WSS-NOT-ALPHA-MTCH           VALUE 'N'.

           05 WSS-FIRST-LNG-MTCH-SW           PIC X(01) VALUE 'N'.
              88 WSS-FIRST-LNG-MTCH           VALUE 'Y'.
              88 WSS-NOT-FIRST-LNG-MTCH       VALUE 'N'.

           05 WSS-DELETE-XFER-SW              PIC X(01) VALUE 'N'.
              88 WSS-DELETE-XFER-INFO         VALUE 'Y'.
              88 WSS-NO-DELETE-XFER-INFO      VALUE 'N'.
 
           05 WSS-AR-STATUS-SW                PIC X(01) VALUE 'N'.
              88 WSS-AR-ASSGND                VALUE 'Y'.
              88 WSS-AR-NOT-ASSGND            VALUE 'N'.
              88 WSS-AR-COULD-NOT-ASSGN       VALUE 'C'.

           05 WSS-NO-OF-OFFICES-SW            PIC X(01) VALUE 'N'.
              88 WSS-ONE-OFFICE               VALUE 'Y'.
              88 WSS-MORE-THAN-ONE-OFFICE     VALUE 'N'.

           05 WSS-MASITE-SW                   PIC X(01) VALUE 'N'.
              88 WSS-MASITE-OFFICE            VALUE 'Y'.
              88 WSS-NOT-MASITE-OFFICE        VALUE 'N'.

           05 WSS-CORSPD-SW                   PIC X(01) VALUE 'N'.
              88 WSS-CORSPD                   VALUE 'Y'.
              88 WSS-NO-CORSPD                VALUE 'N'.

           05 WSS-PERFORM-ASSIGNMENT-SW       PIC X(01) VALUE 'N'.
              88 WSS-ASSGN                    VALUE 'Y'.
              88 WSS-SKIP-ASSGN               VALUE 'N'.

           05 WSS-INTERFACE-TRIGGER-SW        PIC X(01) VALUE 'N'.
              88 WSS-INTERFACE-TRIGGER        VALUE 'Y'.
              88 WSS-NO-INTERFACE-TRIGGER     VALUE 'N'.

           05 WSS-UPDATE-CS-PGM-SW            PIC X(01) VALUE 'N'.
              88 WSS-1ST-UPDATE-CS-PGM        VALUE '1'.
              88 WSS-2ND-UPDATE-CS-PGM        VALUE '2'.

           05 WSS-WRKR-REASSGND-SW            PIC X(01) VALUE 'N'.
              88 WSS-WRKR-REASSGND            VALUE 'Y'.
              88 WSS-WRKR-NOT-REASSGND        VALUE 'N'.

           05 WSS-CHECK-MASITE-SW             PIC X(01) VALUE 'N'.
              88 WSS-CHECK-MASITE             VALUE 'Y'.
              88 WSS-NO-CHECK-MASITE          VALUE 'N'.

           05 WSS-PROCESS-COMPLETE-SW         PIC X(01) VALUE 'N'.
              88 WSS-PROCESS-COMPLETE         VALUE 'Y'.
              88 WSS-PROCESS-NOT-COMPLETE     VALUE 'N'.

           05 WSS-TEST-CSLD-PRM-USR-SW        PIC X(01) VALUE 'N'.
              88 WSS-TEST-CSLD-PRM-USR        VALUE 'Y'.
              88 WSS-TEST-CSLD-PRM-USR-NO     VALUE 'N'.

           05 WSS-ALPHA-FOUND-SW              PIC X(01) VALUE 'N'.
              88 WSS-ALPHA-FOUND              VALUE 'Y'.
              88 WSS-ALPHA-NOT-FOUND          VALUE 'N'.

           05 WSS-MULT-MASITE-OFF-SW          PIC X(01) VALUE 'N'.
              88 WSS-MULT-MASITE-OFFS         VALUE 'Y'.
              88 WSS-ONE-MASITE-OFF           VALUE 'N'.

           05 WSS-MASITE-HLPG-SW              PIC X(01) VALUE 'N'.
              88 WSS-MASITE-HLPG              VALUE 'Y'.
              88 WSS-NOT-MASITE-HLPG          VALUE 'N'.

           05 WSS-SAME-WRKR-AU-SW             PIC X(01) VALUE 'N'.
              88 WSS-SAME-WRKR-ASSGND         VALUE 'Y'.
              88 WSS-SAME-WRKR-NOT-ASSGND     VALUE 'N'.

           05 WSS-AU-CLSD-MTCH-SW             PIC X(01) VALUE 'N'.
              88 WSS-AU-MTCH-FND              VALUE 'Y'.
              88 WSS-NO-AU-MTCH               VALUE 'N'.

           05 WSS-CHK-AU-MAX-CRDT-SW          PIC X(01) VALUE 'N'.
              88 WSS-CHK-AU-MAX-CRDT          VALUE 'Y'.
              88 WSS-NO-CHK-AU-MAX-CRDT       VALUE 'N'.

4676       05 WSS-XF-CSLD-SW                  PIC X(01) VALUE 'N'.
4676          88 WSS-XF-CSLD-FOUND            VALUE 'Y'.
4676          88 WSS-XF-CSLD-NOT-FOUND        VALUE 'N'.

           05 WSS-CLOSED-CSLD-IND             PIC X(01) VALUE 'B'.
              88 WSS-BAD-CLOSED-CSLD          VALUE 'B'.
              88 WSS-GOOD-CLOSED-CSLD         VALUE 'G'.
              88 WSS-OK-CLOSED-CSLD           VALUE 'K'.

4993       05 WSS-MT-SUCCESS-FAIL-SW          PIC X(01) VALUE 'Y'.
4993          88 WSS-MT-SUCCESS               VALUE 'Y'.
4993          88 WSS-MT-FAILURE               VALUE 'N'.

4993       05 WSS-NEW-CS-SW                   PIC X(01) VALUE 'N'.
4993          88 WSS-NEW-CS-ID                VALUE 'Y'.
4993          88 WSS-SAME-CS-ID               VALUE 'N'.

4993       05 WSS-CHECK-HLPG-SW               PIC X(01) VALUE 'N'.
4993          88 WSS-CHECK-HLPG               VALUE 'Y'.
4993          88 WSS-NO-CHECK-HLPG            VALUE 'N'.

4974  * Used to determine which cursor was used for processing
4974       05 WSS-USED-SPL-IND-CUR-SW         PIC X(01) VALUE 'N'.
4974          88 WSS-USED-SPL-IND-CUR         VALUE 'Y'.
4974          88 WSS-NOT-USED-SPL-IND-CUR     VALUE 'N'.

5445A * Used to flag if PE can be assigned to current user
5445A      05 WSS-PE-CSLD-FOUND-SW            PIC X(01) VALUE 'N'.
5445A         88 WSS-PE-CSLD-FOUND            VALUE 'Y'.
5445A         88 WSS-PE-CSLD-NOT-FOUND        VALUE 'N'.

5707  * Used to control MT flow if there was a DB updt error
5707       05 WSS-MT-ERR-SW                   PIC X(01) VALUE 'N'.
5707          88 WSS-MT-ERR                   VALUE 'Y'.
5707          88 WSS-NO-MT-ERR                VALUE 'N'.

2349  * Used to control AU for CHP+,AwDC Vendor program
2349       05 WSS-XFR-CSLD-SW                 PIC X(01) VALUE 'N'.
2349          88 WSS-XFR-CSLD                 VALUE 'Y'.
2349          88 WSS-NO-XFR-CSLD              VALUE 'N'.

2349  * Used to check if caseload is assigned to CHP+/AwDC vendor office
2349       05 WSS-MA-VENDOR-OFF-SW            PIC X(01) VALUE 'N'.
2349          88 WSS-MA-VENDOR-OFF            VALUE 'Y'.
2349          88 WSS-NOT-MA-VENDOR-OFF        VALUE 'N'.

1815  * Used to check if caseload is assigned to CHP+/AwDC vendor office
1815       05 WSS-AWDC-SW                     PIC X(01) VALUE 'N'.
1815          88 WSS-AWDC                     VALUE 'Y'.
1815          88 WSS-NOT-AWDC                 VALUE 'N'.


4012  * Used to skip or accept a usr/csld for a program
4012       05 WSS-SKIP-PGM-SW                 PIC X(01) VALUE 'N'.
4012          88 WSS-SKIP-PGM-LOOP            VALUE 'Y'.
4012          88 WSS-NO-SKIP-PGM-LOOP         VALUE 'N'.

4012  * Used to skip further FS updated during SU
           05 WSS-FS-PROCESSED-SW             PIC X(01) VALUE 'N'.
              88 WSS-FS-PROCESSED             VALUE 'Y'.
              88 WSS-FS-NOT-PROCESSED         VALUE 'N'.

4012  * Used to skip further CW updated during SU
           05 WSS-CW-PROCESSED-SW             PIC X(01) VALUE 'N'.
              88 WSS-CW-PROCESSED             VALUE 'Y'.
              88 WSS-CW-NOT-PROCESSED         VALUE 'N'.

2609  * Used to determine MAGI Non-MAGI aid code
           05 WSS-MA-MAGINONMAGI-SW           PIC X(01) VALUE 'N'.
              88 WSS-MAGI                     VALUE 'Y'.
              88 WSS-NON-MAGI                 VALUE 'N'.


2609  * Used to determine combo peak application
           05 WSS-MA-COMBO-SW                 PIC X(01) VALUE 'N'.
              88 WSS-COMBO                    VALUE 'Y'.
              88 WSS-NON-COMBO                VALUE 'N'.
              
7391  * Used to determine APTC or not
	   05 WSS-MA-APTC-SW                  PIC X(01) VALUE 'N'.
	      88 WSS-APTC                     VALUE 'Y'.
	      88 WSS-NON-APTC                 VALUE 'N'.


5277  ********************************************************
5277  *** Shared variables and switches
5277  ********************************************************
       01  WSH-SHARED-VARIABLES.
       COPY CA0007C.

      **********************************************************
      *** TABLE VARIABLES - WST
      *** The variables of arrays of data items used by the program
      ****************************************************************

      * Array to store the Case Program Data for a Case

       01  WST-TABLES.
        05 WST-CS-PGM-UPD-DATA OCCURS 25 TIMES.
           10 WST-CS-ID             PIC X(07).
           10 WST-PGM-TYP-CD        PIC X(02).
           10 WST-EFF-BGN-DT        PIC X(10).
           10 WST-EFF-END-DT        PIC X(10).
           10 WST-UPD-DTM           PIC X(19).
           10 WST-FETCH-DTM         PIC X(19).
           10 WST-CSLD-ID           PIC S9(09) COMP-5.
           10 WST-PGM-STS-CD        PIC X(02).

        05 WST-ERROR-ID-DATA OCCURS 50 TIMES.
           10 WST-USER-ID       PIC X(15).
           10 WST-USER-NAME     PIC X(55).

      * Array to store the Case Program Data for a non-MA Site pgms

       01  WST-NONMA-TABLES.
        05 WST-NONMA-UPDATE-DATA OCCURS 25 TIMES.
           10 WST-NONMA-CS-ID        PIC X(07).
           10 WST-NONMA-PGM-TYP-CD   PIC X(02).
           10 WST-NONMA-EFF-BGN-DT   PIC X(10).
           10 WST-NONMA-EFF-END-DT   PIC X(10).
           10 WST-NONMA-UPD-DTM      PIC X(19).
           10 WST-NONMA-FETCH-DTM    PIC X(19).
           10 WST-NONMA-CSLD-ID      PIC S9(09) COMP-5.
           10 WST-NONMA-PGM-STS-CD   PIC X(02).
           10 WST-NONMA-OFF-ID       PIC S9(09) COMP-5.
           10 WST-NONMA-HLPG-NM      PIC X(30).

      * Array to store the County Process Control Data

       01  WST-RT-CNTY-PRC-CTL.
        05 WST-CNTY-PRC-CTL     OCCURS 13 TIMES.
           10 WST-CTL-CD             PIC X(07).
           10 WST-CTL-VAL            PIC X(01).


      * Array to store the Labor Agreement Values

       01  WST-SE-LBR-AGMT-DTL.
        05 WST-LBR-AGMT-DTL OCCURS 5 TIMES.
           10 WST-CNSTRNT-CD         PIC X(02).
           10 WST-CNSTRNT-VAL   USAGE IS COMP-1.


      * Array to store the User Ongoing Case Credit

       01 WST-USR-ONGNG-CS-CR-DATA.
        05 WST-USR-ONGNG-CS-CR OCCURS 10 TIMES.
           10 WST-ONGNG-CR-USR-ID     PIC X(15).
           10 WST-ONGNG-CR-CS-ID      PIC X(07).
           10 WST-ONGNG-CR-UPD-USR-ID PIC X(15).
           10 WST-ONGNG-CR-UPD-DTM    PIC X(19).

      * Array to store potential ongoing caseloads for AU
      * Did this instead of cursor because user would not
      * normally have more than 25 ongoing caseloads for
      * the same office assigned to them.

       01 WST-AU-CSLD-ARRAY.
       05  WST-AU-CSLDS OCCURS 25 TIMES.
           10  WST-AU-CSLD-ID         PIC S9(09) COMP-5.

4004  * Array to store selected potential cases for mass transfer
4004   01 WST-CS-ID-ARRAY.
4004      05  WST-CASES OCCURS 100 TIMES PIC X(07).
4004  *       10  WST-CASES-ID            PIC X(07).
4004
4004   01 WST-CASE-LIST REDEFINES WST-CS-ID-ARRAY.
          05  WST-CASE-001                PIC X(07).
          05  WST-CASE-002                PIC X(07).
          05  WST-CASE-003                PIC X(07).
          05  WST-CASE-004                PIC X(07).
          05  WST-CASE-005                PIC X(07).
          05  WST-CASE-006                PIC X(07).
          05  WST-CASE-007                PIC X(07).
          05  WST-CASE-008                PIC X(07).
          05  WST-CASE-009                PIC X(07).
          05  WST-CASE-010                PIC X(07).
          05  WST-CASE-011                PIC X(07).
          05  WST-CASE-012                PIC X(07).
          05  WST-CASE-013                PIC X(07).
          05  WST-CASE-014                PIC X(07).
          05  WST-CASE-015                PIC X(07).
          05  WST-CASE-016                PIC X(07).
          05  WST-CASE-017                PIC X(07).
          05  WST-CASE-018                PIC X(07).
          05  WST-CASE-019                PIC X(07).
          05  WST-CASE-020                PIC X(07).
          05  WST-CASE-021                PIC X(07).
          05  WST-CASE-022                PIC X(07).
          05  WST-CASE-023                PIC X(07).
          05  WST-CASE-024                PIC X(07).
          05  WST-CASE-025                PIC X(07).
          05  WST-CASE-026                PIC X(07).
          05  WST-CASE-027                PIC X(07).
          05  WST-CASE-028                PIC X(07).
          05  WST-CASE-029                PIC X(07).
          05  WST-CASE-030                PIC X(07).
          05  WST-CASE-031                PIC X(07).
          05  WST-CASE-032                PIC X(07).
          05  WST-CASE-033                PIC X(07).
          05  WST-CASE-034                PIC X(07).
          05  WST-CASE-035                PIC X(07).
          05  WST-CASE-036                PIC X(07).
          05  WST-CASE-037                PIC X(07).
          05  WST-CASE-038                PIC X(07).
          05  WST-CASE-039                PIC X(07).
          05  WST-CASE-040                PIC X(07).
          05  WST-CASE-041                PIC X(07).
          05  WST-CASE-042                PIC X(07).
          05  WST-CASE-043                PIC X(07).
          05  WST-CASE-044                PIC X(07).
          05  WST-CASE-045                PIC X(07).
          05  WST-CASE-046                PIC X(07).
          05  WST-CASE-047                PIC X(07).
          05  WST-CASE-048                PIC X(07).
          05  WST-CASE-049                PIC X(07).
          05  WST-CASE-050                PIC X(07).
          05  WST-CASE-051                PIC X(07).
          05  WST-CASE-052                PIC X(07).
          05  WST-CASE-053                PIC X(07).
          05  WST-CASE-054                PIC X(07).
          05  WST-CASE-055                PIC X(07).
          05  WST-CASE-056                PIC X(07).
          05  WST-CASE-057                PIC X(07).
          05  WST-CASE-058                PIC X(07).
          05  WST-CASE-059                PIC X(07).
          05  WST-CASE-060                PIC X(07).
          05  WST-CASE-061                PIC X(07).
          05  WST-CASE-062                PIC X(07).
          05  WST-CASE-063                PIC X(07).
          05  WST-CASE-064                PIC X(07).
          05  WST-CASE-065                PIC X(07).
          05  WST-CASE-066                PIC X(07).
          05  WST-CASE-067                PIC X(07).
          05  WST-CASE-068                PIC X(07).
          05  WST-CASE-069                PIC X(07).
          05  WST-CASE-070                PIC X(07).
          05  WST-CASE-071                PIC X(07).
          05  WST-CASE-072                PIC X(07).
          05  WST-CASE-073                PIC X(07).
          05  WST-CASE-074                PIC X(07).
          05  WST-CASE-075                PIC X(07).
          05  WST-CASE-076                PIC X(07).
          05  WST-CASE-077                PIC X(07).
          05  WST-CASE-078                PIC X(07).
          05  WST-CASE-079                PIC X(07).
          05  WST-CASE-080                PIC X(07).
          05  WST-CASE-081                PIC X(07).
          05  WST-CASE-082                PIC X(07).
          05  WST-CASE-083                PIC X(07).
          05  WST-CASE-084                PIC X(07).
          05  WST-CASE-085                PIC X(07).
          05  WST-CASE-086                PIC X(07).
          05  WST-CASE-087                PIC X(07).
          05  WST-CASE-088                PIC X(07).
          05  WST-CASE-089                PIC X(07).
          05  WST-CASE-090                PIC X(07).
          05  WST-CASE-091                PIC X(07).
          05  WST-CASE-092                PIC X(07).
          05  WST-CASE-093                PIC X(07).
          05  WST-CASE-094                PIC X(07).
          05  WST-CASE-095                PIC X(07).
          05  WST-CASE-096                PIC X(07).
          05  WST-CASE-097                PIC X(07).
          05  WST-CASE-098                PIC X(07).
          05  WST-CASE-099                PIC X(07).
4004      05  WST-CASE-100                PIC X(07).
4004
4012  * Suggest inquiry tables
4012
       01  WST-SI-MAIN-TABLE.
           05 WST-SI-MAIN-DATA OCCURS 500 TIMES
                              INDEXED BY WSI-MAIN-TBL-IDX.
              10 WST-SI-MAIN-PGM-TYP-CD         PIC X(02).
              10 WST-SI-MAIN-USR-ID             PIC X(15).
              10 WST-SI-MAIN-CSLD-ID            PIC S9(09) COMP-5.

4012   01  WST-SI-1STPGM-TABLE.
           05 WST-SI-1STPGM-DATA OCCURS 100 TIMES.
              10 WST-SI-1STPGM-PGM-TYP-CD       PIC X(02).
              10 WST-SI-1STPGM-USR-ID           PIC X(15).
              10 WST-SI-1STPGM-CSLD-ID          PIC S9(09) COMP-5.

4012   01  WST-SI-FETCH-TABLE.
           05 WST-SI-FETCH-DATA OCCURS 100 TIMES.
              10 WST-SI-FETCH-PGM-TYP-CD       PIC X(02).
              10 WST-SI-FETCH-USR-ID           PIC X(15).
              10 WST-SI-FETCH-CSLD-ID          PIC S9(09) COMP-5.

4012   01  WST-SI-FINAL-TABLE.
           05 WST-SI-FINAL-DATA OCCURS 100 TIMES
                              INDEXED BY WSI-FINAL-TBL-IDX.
              10 WST-SI-FINAL-USR-ID            PIC X(15).
              10 WST-SI-FINAL-CSLD-ID           PIC S9(09) COMP-5.


       01  DBG-PROG-NAME.
              03 DBG-PROG-NAME-TEXT               PIC X(07)
              VALUE SPACES.
              03 DBG-PROG-NAME-SPCL               PIC X(09)
          VALUE '[INSTNUM]'.
                 03 FILLER          PIC X(01) VALUE X"00".

      *******************************************************
      *** ERROR ROUTINE PARAMETERS - WSL
      ********************************************************

      * Error Routine Copybook
       01  WSL-ERROR-LOG.
      * Copybook for Error log values
       COPY AA0016C.

      * Error message copybook
       COPY MRW100C.

      ********************************************************
      *** COPY BOOKS
      ********************************************************
       
      * Appointment Scheduling Subroutine copybook
      * 01 WSH-AS0200S-VARIABLES.
      * COPY AS0200C.
      
      
      * Alert Subroutine Copybook
       01 WSH-AL0001S-VARIABLES.
       COPY ALL001C. 

      * Interfaces Subroutine Copybook
       01 WSH-INV002S-VARIABLES.
       COPY INV003C.

      * Client Correspondence Subroutine Copybook
       01 WSH-CC2100S-VARIABLES.
       COPY CC2100C.

      * Case Weights Subroutine Copybook
       01 WSH-CA0003S-VARIABLES.
       COPY CAL003C.

      * Oracle Procedure pointer Copybook
       COPY AA0053C.
   

      **********************************************************
      *** SQL SECTION
      ***********************************************************

      * SQL Communication Area Copybook
           EXEC SQL
           INCLUDE SQLCA
           END-EXEC.

      **********************************************************
      *** These are Database table definitions.
      ***********************************************************
           EXEC SQL
           INCLUDE CA0001C
           END-EXEC.

      **********************************************************
      *** CURSOR DECLARATIONS
      **********************************************************

      *      To Get the Generic User who can handle the same type of
      *      program of that of a case
      *      SQL-10
      *

           EXEC SQL
           DECLARE CA0001S_C1_CSLD_PGM_CUR CURSOR FOR
            SELECT
            UNIQUE(A.CSLD_ID),
            A.USR_ID
            FROM
            SE_CSLD_PRM_USR  A
           ,SE_USR_UNT_OFF   B
           ,SE_USR        C
           ,SE_CSLD_PGM_TYP  D
           ,SE_CSLD        S
            WHERE
                A.CSLD_ID             = D.CSLD_ID
            AND A.EFF_BGN_DT       <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND S.CSLD_ID             = A.CSLD_ID
            AND S.CSLD_MODE_CD        = :WSC-INTAKE
            AND S.HAS_CS_SW        = :WSC-YES
            AND C.USR_ID             = A.USR_ID
            AND NVL(C.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN C.NOT_ON_ASG_FRM_DT
                      AND C.NOT_ON_ASG_TO_DT)
                 OR C.NOT_ON_ASG_FRM_DT IS NULL
                 OR C.NOT_ON_ASG_TO_DT IS NULL
                )
            AND B.USR_ID             = A.USR_ID
            AND B.PRM_SW             = :WSC-YES
            AND B.OFF_ID             = :WSH-CUR-OFF-ID
            AND D.CSLD_ID       IN
               (SELECT
               E.CSLD_ID
                FROM
               SE_CSLD_PGM_TYP E
                WHERE
               E.PGM_TYP_CD IN
               (SELECT
                   DISTINCT(P.CS_ASG_PGM)
                FROM
                   CS_PGM F
                  ,RT_PGM P
                WHERE
                    F.CS_ID            = :WSH-CUR-CS-ID
                AND F.PGM_STS_CD      = :WSC-PENDING
                AND F.EFF_BGN_DT      <=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(F.EFF_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND F.PGM_TYP_CD      = P.PGM_CD
                AND P.EFF_BGN_DT      <=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                )
               GROUP BY E.CSLD_ID
               HAVING COUNT(E.CSLD_ID) >= :WSH-CS-PGM-COUNT
              )
           END-EXEC.



      * To Get the User who is not in off-assignment and
      *  Caseload ID
      * for a Program Type, CASELOAD Mode
      * SQL-20

           EXEC SQL
           DECLARE  CA0001S_C2_CSLD_CS_PGM_CUR CURSOR FOR
            SELECT UNIQUE A.CSLD_ID
               ,A.USR_ID
              FROM SE_CSLD_PRM_USR  A
               ,SE_CSLD_PGM_TYP  B
               ,SE_CSLD            C
               ,SE_USR_UNT_OFF   D
               ,SE_USR            E
               ,RT_PGM            P
             WHERE P.PGM_CD            = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.PGM_TYP_CD     = P.CS_ASG_PGM
            AND A.CSLD_ID            = B.CSLD_ID
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND E.USR_ID          = A.USR_ID
            AND NVL(E.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                      AND E.NOT_ON_ASG_TO_DT)
                 OR E.NOT_ON_ASG_FRM_DT IS NULL
                 OR E.NOT_ON_ASG_TO_DT IS NULL
                )
            AND C.CSLD_ID          = B.CSLD_ID
            AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
            AND C.HAS_CS_SW    = :WSC-YES
            AND D.USR_ID          = E.USR_ID
            AND D.USR_ID          = A.USR_ID
            AND D.PRM_SW          = :WSC-YES
            AND D.OFF_ID          = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
            AND C.OFF_ID       = D.OFF_ID
            AND A.USR_ID         <> RTRIM(:WSH-NOT-THIS-USR-ID)
           END-EXEC.


      * To find all the programs associated with the case in the AR
      * Process for the Case ID
      * SQL-30

           EXEC SQL
            DECLARE     CA0001S_C3_CS_PGM_CUR CURSOR FOR
                  SELECT
                UNIQUE(P.CS_ASG_PGM)
               ,A.PGM_TYP_CD
               ,P.MA_SITE_PGM
               ,P.CA_PRRTY
               ,RTRIM(P.PGM_NM)
            FROM
                CS_PGM     A
               ,RT_PGM     P
            WHERE
                A.CS_ID      = :WSH-CUR-CS-ID
               AND (A.PGM_STS_CD      = :WSC-PENDING
               OR   A.PGM_STS_CD   = :WSC-APPROVED)
               AND A.EFF_BGN_DT      <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND P.PGM_CD      = A.PGM_TYP_CD
               AND P.EFF_BGN_DT      <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND A.CSLD_ID IS NULL
            ORDER BY
               P.CA_PRRTY, P.CS_ASG_PGM
           END-EXEC.


      * To find all the Case, Programs associated with the
      *  caseload in the MT (Type 1 and Type 3)
      * SQL-40

           EXEC SQL
           DECLARE  CA0001S_C4_MT_1_3_CSLD_CUR CURSOR FOR
            SELECT
                    B.CS_ID
             ,B.PGM_TYP_CD
             ,TO_CHAR(B.EFF_BGN_DT,'YYYY-MM-DD')
             ,TO_CHAR(NVL(B.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
             ,TO_CHAR(B.UPD_DTM,'YYYY-MM-DD HH24:MI:SS')
             ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
             ,NVL(P.CS_ASG_PGM, :WSC-CS-PGM-TYP-SPACE)
            FROM
             SE_CSLD_PRM_USR A
            ,CS_PGM B
            ,RT_PGM P
            WHERE
                A.USR_ID           = RTRIM(:WSH-CUR-USR-ID)
            AND A.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.CSLD_ID            = A.CSLD_ID
            AND B.EFF_BGN_DT    <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD = B.PGM_TYP_CD
            AND P.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            ORDER BY B.CS_ID, P.CS_ASG_PGM
           END-EXEC.


      * To find the cases that required for transfering to different
      * caseload based on Program type, Program Status, Caselanguage
      * SQL-50

           EXEC SQL
            DECLARE     CA0001S_C5_MT_2_4_CSLD_CUR CURSOR FOR
            SELECT
             A.CS_ID
            ,A.PGM_TYP_CD
            ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(A.UPD_DTM,'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
            ,P.CS_ASG_PGM
            FROM
             CS_PGM            A
            ,CS                 B
            ,SE_CSLD_PRM_USR     D
            ,RT_PGM            P
            WHERE
                D.USR_ID           = RTRIM(:WSH-CUR-USR-ID)
            AND D.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.CSLD_ID            = D.CSLD_ID
            AND P.CS_ASG_PGM     =
      *         NVL(:WSH-CUR-PGM-TYP-CD
      *         NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
                NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
                 ,P.CS_ASG_PGM)
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.CS_ID            = A.CS_ID
4439        AND B.CS_STS_CD     =
4439  *             NVL(:WSH-CUR-CS-STS-CD:WSH-PGM-STS-I
      *             NVL(:WSH-CUR-CS-STS-CD
                NVL(CASE :WSH-CUR-CS-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-CS-STS-CD
                    END
                 ,B.CS_STS_CD)
            AND B.PRM_LANG_CD    =
      *         NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
      *         NVL(:WSH-CUR-PRM-LANG-CD
                NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                 ,B.PRM_LANG_CD)
            AND B.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD = A.PGM_TYP_CD
            AND P.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            ORDER BY A.CS_ID, P.CS_ASG_PGM
           END-EXEC.

      * To find the cases that required for transfering to different
      * caseload based on Program type, Program Status, Caselanguage
      * and Special indicators
      * SQL-60

            EXEC SQL
            DECLARE     CA0001S_C6_MT_2_4_CSLD_CUR CURSOR FOR
            SELECT
             A.CS_ID
            ,A.PGM_TYP_CD
            ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(A.UPD_DTM,'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
            ,P.CS_ASG_PGM
            FROM
             CS_PGM            A
            ,CS                 B
            ,CS_SPL_SITN            C
            ,SE_CSLD_PRM_USR     D
            ,RT_PGM            P
            WHERE
                D.USR_ID           = RTRIM(:WSH-CUR-USR-ID)
            AND D.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.CSLD_ID            = D.CSLD_ID
            AND P.CS_ASG_PGM     =
      *         NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
      *         NVL(:WSH-CUR-PGM-TYP-CD
                NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
                 ,P.CS_ASG_PGM)
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.CS_ID            = A.CS_ID
4439            AND B.CS_STS_CD     =
4439  *             NVL(:WSH-CUR-CS-STS-CD:WSH-PGM-STS-I
                NVL(CASE :WSH-CUR-CS-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-CS-STS-CD
                    END
                 ,B.CS_STS_CD)
            AND B.PRM_LANG_CD    =
     **         NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
                NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                 ,B.PRM_LANG_CD)
            AND B.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD = A.PGM_TYP_CD
            AND P.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND C.CS_ID         = A.CS_ID
            AND C.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(C.EFF_END_DT, F_HIGH_DT()) <>
                C.EFF_BGN_DT
            AND C.SITN_TYP_CD    = :WSH-CUR-SPL-IND
            ORDER BY A.CS_ID, P.CS_ASG_PGM
           END-EXEC.


      *      To find the QC user/reviewer for a program and Language
      *      and the number of cases the reviewer is reviewing in order.
      * SQL-70

           EXEC SQL
               DECLARE  CA0001S_C7_QC_USR_CUR CURSOR FOR
               SELECT
             A.USR_ID
             ,COUNT(D.CS_ID) QC_USR_CS_CNT
            FROM
             SE_USR_TYP        A
            ,SE_USR_PGM_TYP  B
            ,SE_USR_LANG        C
            ,QC_SMPL_CS        D
            WHERE
             A.USR_TYP_CD            = :WSC-QC-RVWR
            AND B.USR_ID            = A.USR_ID
            AND B.PGM_TYP_CD            = :WSH-CUR-PGM-TYP-CD
            AND C.USR_ID            = B.USR_ID
            AND C.USR_ID            = A.USR_ID
            AND C.LANG_CD            = :WSH-CUR-PRM-LANG-CD
            AND D.REVW_USR_ID(+)    = B.USR_ID
            AND D.REVW_STS_CD(+)    <> :WSC-APPROVED
            GROUP BY
             A.USR_ID
            ORDER BY
             QC_USR_CS_CNT
           END-EXEC.

      ** To find the alpha breakdown parameters on the current 
      ** caseload in order to 
      ** compare it to the last name on the current case to see if
      ** the case is eligible to be assigned to the caseload.
      * SQL-75

            EXEC SQL
             DECLARE CA0001S_C8_ALPHA_BREAKDOWN_CUR CURSOR FOR
             SELECT
             UPPER(CSLD_ALPHA_BGN)
              ,NVL(UPPER(CSLD_ALPHA_END), :WSC-ZZZZZ)
             ,CSLD_ID
             FROM
             SE_CSLD_ALPHA 
             WHERE CSLD_ID = :WSH-TEMP-CSLD-ID
             ORDER BY CSLD_ID, CSLD_ALPHA_BGN
             END-EXEC.

      * To Get the User who is not in off-assignment and
      *  Caseload ID for a Program Type, CASELOAD Mode,
      *  usr_id - same as C2 but for specific user
      * SQL-90

           EXEC SQL
           DECLARE  CA0001S_C9_CSLD_CS_PGM_USR_CUR CURSOR FOR
            SELECT UNIQUE A.CSLD_ID
               ,A.USR_ID
              FROM SE_CSLD_PRM_USR  A
               ,SE_CSLD_PGM_TYP     B
               ,SE_CSLD             C
               ,SE_USR_UNT_OFF      D
               ,SE_USR              E
               ,RT_PGM              P
             WHERE P.PGM_CD            = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.PGM_TYP_CD     = P.CS_ASG_PGM
            AND A.CSLD_ID            = B.CSLD_ID
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND E.USR_ID          = A.USR_ID
            AND NVL(E.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                      AND E.NOT_ON_ASG_TO_DT)
                 OR E.NOT_ON_ASG_FRM_DT IS NULL
                 OR E.NOT_ON_ASG_TO_DT IS NULL
                )
            AND C.CSLD_ID          = B.CSLD_ID
            AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
            AND C.HAS_CS_SW    = :WSC-YES
            AND D.USR_ID          = E.USR_ID
            AND D.USR_ID          = A.USR_ID
            AND D.PRM_SW          = :WSC-YES
            AND D.OFF_ID          = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
            AND C.OFF_ID       = D.OFF_ID
            AND A.USR_ID          = RTRIM(:WSH-CSLD-WRKR)
            
           END-EXEC.

4974  * Select the caseloads in the current office that have at least one
4974  * matching special indicator to the case.  Used only if the case has
4974  * special indicators on it in place of the C2 cursor
4974  * DACR 4974
5571  * Correct the innermost SQL - it was trying to ensure that the EBD
5571  * wasn't the same as the EED, but wasn't doing a NVL on the EED so
5571  * if it was null, it wasn't returning anything 

           EXEC SQL
           DECLARE  CA0001S_C10_CSLD_SPL_IND_CUR CURSOR FOR

            SELECT UNIQUE A.CSLD_ID
               ,A.USR_ID
              FROM SE_CSLD_PRM_USR   A
               ,SE_CSLD_PGM_TYP   B
               ,SE_CSLD             C
               ,SE_USR_UNT_OFF    D
               ,SE_USR             E
               ,SE_CSLD_PRM_USR_K F
               ,RT_PGM             P
             WHERE P.PGM_CD            = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.PGM_TYP_CD     = P.CS_ASG_PGM
            AND A.CSLD_ID            = B.CSLD_ID
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.EFF_BGN_DT = F.LTST_EFF_BGN_DT
            AND A.CSLD_ID = F.CSLD_ID
            AND E.USR_ID          = A.USR_ID
            AND NVL(E.OUTSTN_USR_SW, :WSC-NO) <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                      AND E.NOT_ON_ASG_TO_DT)
                 OR E.NOT_ON_ASG_FRM_DT IS NULL
                 OR E.NOT_ON_ASG_TO_DT IS NULL
                )
            AND C.CSLD_ID          = B.CSLD_ID
            AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
            AND C.HAS_CS_SW    = :WSC-YES
            AND D.USR_ID          = E.USR_ID
            AND D.USR_ID          = A.USR_ID
            AND D.PRM_SW          = :WSC-YES
            AND D.OFF_ID          = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
            AND C.OFF_ID       = D.OFF_ID
            AND A.USR_ID         <> RTRIM(:WSH-NOT-THIS-USR-ID) 
            AND EXISTS
                (SELECT
                  Y.CSLD_ID
                 FROM
                  SE_CSLD_CHAR Y
                  ,RT_SPL_CHAR Z
                 WHERE
                  Z.CS_ASGN_SW        = :WSC-YES
                 AND Y.CSLD_ID       = A.CSLD_ID
                 AND Y.CHAR_NM_CD        = Z.SPL_CHAR_CD
                 AND Z.EFF_BGN_DT            <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(Z.EFF_END_DT, F_HIGH_DT()) >=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND Y.CHAR_NM_CD IN
                  (SELECT
                      X.SITN_TYP_CD
                  FROM
                      CS_SPL_SITN X
                      ,RT_SPL_CHAR W
                  WHERE
                      X.CS_ID             = :WSH-CUR-CS-ID
                  AND X.EFF_BGN_DT        <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(X.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(F_HIGH_DT(),X.EFF_END_DT)        
                                        <> X.EFF_BGN_DT
                  AND X.SITN_TYP_CD        = W.SPL_CHAR_CD
                  AND W.CS_ASGN_SW        = :WSC-YES
                  AND W.EFF_BGN_DT        <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(W.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(W.EFF_END_DT, F_HIGH_DT()) <>
                      W.EFF_BGN_DT

                  )
                 )

            END-EXEC.



      * To find all the programs associated with the case in the AR
      * Process for the Case ID where application came from PEAK
      * HDT 2564 Project 3212

            EXEC SQL
               DECLARE  CA0001S_PK_CS_PGM_CUR CURSOR FOR
                  SELECT
                     A.CS_ID
                    ,A.PGM_TYP_CD
                    ,B.APP_ID
                    ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
                    ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
                    ,TO_CHAR(A.UPD_DTM,'YYYY-MM-DD HH24:MI:SS')
                    ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
                  FROM
                      CS_PGM    A
                     ,AR_SAWS1_FORM    B
                  WHERE
                         A.CS_ID          = :WSH-CUR-CS-ID
                     AND (A.PGM_STS_CD    = :WSC-PENDING
                     OR   A.PGM_STS_CD    = :WSC-APPROVED)
                     AND A.EFF_BGN_DT     <=
                         TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                     AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                         TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                     AND A.CSLD_ID IS NULL
                     AND A.APP_ID         = B.APP_ID
                     AND (B.PEAK_TRK_NUM  IS NOT NULL
                     AND B.APP_SRC_CD    = :WSC-PEAK
                     OR  B.APP_SRC_CD    = :WSC-C4HCO)
                  ORDER BY A.APP_ID

            END-EXEC.


      * To find all the Case, Programs associated with the
      *  caseload in the MC transfer type
      * Project 4004

            EXEC SQL
            DECLARE  CA0001S_MC_CSLD_CUR CURSOR FOR
               SELECT
                    B.CS_ID
                   ,B.PGM_TYP_CD
                   ,TO_CHAR(B.EFF_BGN_DT,'YYYY-MM-DD')
                   ,TO_CHAR(NVL(B.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
                   ,TO_CHAR(B.UPD_DTM,'YYYY-MM-DD HH24:MI:SS')
                   ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
                   ,NVL(P.CS_ASG_PGM, :WSC-CS-PGM-TYP-SPACE)
               FROM
                   SE_CSLD_PRM_USR A
                  ,CS_PGM B
                  ,RT_PGM P
               WHERE
                      A.USR_ID        = RTRIM(:WSH-CUR-USR-ID)
                  AND A.EFF_BGN_DT    <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND B.CSLD_ID        = A.CSLD_ID
                  AND B.EFF_BGN_DT    <=
                       TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                       TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND P.PGM_CD = B.PGM_TYP_CD
                  AND P.EFF_BGN_DT    <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND B.CS_ID IN
               (:WST-CASE-001,:WST-CASE-002,:WST-CASE-003,:WST-CASE-004,
                :WST-CASE-005,:WST-CASE-006,:WST-CASE-007,:WST-CASE-008,
                :WST-CASE-009,:WST-CASE-010,:WST-CASE-011,:WST-CASE-012,
                :WST-CASE-013,:WST-CASE-014,:WST-CASE-015,:WST-CASE-016,
                :WST-CASE-017,:WST-CASE-018,:WST-CASE-019,:WST-CASE-020,
                :WST-CASE-021,:WST-CASE-022,:WST-CASE-023,:WST-CASE-024,
                :WST-CASE-025,:WST-CASE-026,:WST-CASE-027,:WST-CASE-028,
                :WST-CASE-029,:WST-CASE-030,:WST-CASE-031,:WST-CASE-032,
                :WST-CASE-033,:WST-CASE-034,:WST-CASE-035,:WST-CASE-036,
                :WST-CASE-037,:WST-CASE-038,:WST-CASE-039,:WST-CASE-040,
                :WST-CASE-041,:WST-CASE-042,:WST-CASE-043,:WST-CASE-044,
                :WST-CASE-045,:WST-CASE-046,:WST-CASE-047,:WST-CASE-048,
                :WST-CASE-049,:WST-CASE-050,:WST-CASE-051,:WST-CASE-052,
                :WST-CASE-053,:WST-CASE-054,:WST-CASE-055,:WST-CASE-056,
                :WST-CASE-057,:WST-CASE-058,:WST-CASE-059,:WST-CASE-060,
                :WST-CASE-061,:WST-CASE-062,:WST-CASE-063,:WST-CASE-064,
                :WST-CASE-065,:WST-CASE-066,:WST-CASE-067,:WST-CASE-068,
                :WST-CASE-069,:WST-CASE-070,:WST-CASE-071,:WST-CASE-072,
                :WST-CASE-073,:WST-CASE-074,:WST-CASE-075,:WST-CASE-076,
                :WST-CASE-077,:WST-CASE-078,:WST-CASE-079,:WST-CASE-080,
                :WST-CASE-081,:WST-CASE-082,:WST-CASE-083,:WST-CASE-084,
                :WST-CASE-085,:WST-CASE-086,:WST-CASE-087,:WST-CASE-088,
                :WST-CASE-089,:WST-CASE-090,:WST-CASE-091,:WST-CASE-092,
                :WST-CASE-093,:WST-CASE-094,:WST-CASE-095,:WST-CASE-096,
                :WST-CASE-097,:WST-CASE-098,:WST-CASE-099,:WST-CASE-100)
               ORDER BY B.CS_ID, P.CS_ASG_PGM
            END-EXEC.


5277  *************************************************************
5277  * IF THIS SQL IS UPDATED CA0002S MUST ALSO BE TESTED.       *
5277  *************************************************************

            COPY CA0006C.
 
           EXEC SQL END DECLARE SECTION END-EXEC.


       LINKAGE SECTION.

      * Common Parameters Linkage copybook
       01 LNK-COMMON-PARMS.
       COPY AA0052C.

      * Case Assignment Subroutine Linkage copybook
       01 LNK-CA0001S-PARMS.
       COPY CAL001C.
       

       PROCEDURE DIVISION.
       
           .
      ****************************************************************  G
      *** Program entry paragraph                                       G
      ****************************************************************  G
       00000-CONTROL.
        DISPLAY 'STARTING CA0001S . . .'
           CALL 'aa_SvcDebugMessageVar' USING
              BY REFERENCE DBG-PROG-NAME,
          BY VALUE 1,
              BY VALUE 6,
          BY REFERENCE
                "CA0001S: FRM_CD: %.2s " &
      -         "CS_ID: %.7s MODE_CD: %.2s" &
      -         "TYP: %.2s STS: %.2s" &
      -         "SUG DT: %.10s " & x"00",
                BY REFERENCE LNK-CA0001S-CALL-FRM-CD ,
                BY REFERENCE LNK-CA0001S-CS-ID ,
                BY REFERENCE LNK-CA0001S-CS-MODE-CD,
                BY REFERENCE LNK-CA0001S-PGM-TYP-CD,
                BY REFERENCE LNK-CA0001S-PGM-STS-CD,
                BY REFERENCE LNK-CA0001S-SUGST-DT
        END-CALL

      *    CALL 'aa_SvcDebugMessageVar' USING
      *         BY REFERENCE DBG-PROG-NAME,
      *         BY VALUE 1,
      *         BY VALUE 11,
      *         BY REFERENCE
      *         "CA0001S: SUG_TM: %.8s " &
      *         "CSLD_ID: %f EBD: %.10s" &
      *         "EED: %.10s OVR_RSN: %.2s" &
      *         "UPD_DTM: %.19s FTCH_DTM: %.19s" &
      *         "OFF ID: %f USR_ID: %.15s" &
      *         "OFF RES: %f CNTY RES: %.2s" & x"00",
      *         BY REFERENCE LNK-CA0001S-SUGST-TM ,
      *         BY REFERENCE LNK-CA0001S-CSLD-ID,
      *         BY REFERENCE LNK-CA0001S-EFF-BGN-DT,
      *         BY REFERENCE LNK-CA0001S-EFF-END-DT,
      *         BY REFERENCE LNK-CA0001S-OVR-RSN-CD,
      *         BY REFERENCE LNK-CA0001S-UPD-DTM,
      *         BY REFERENCE LNK-CA0001S-FETCH-DTM,
      *         BY REFERENCE LNK-CA0001S-OFF-ID,
      *         BY REFERENCE LNK-CA0001S-USR-ID,
      *         BY REFERENCE LNK-CA0001S-OFF-OF-RES,
      *         BY REFERENCE LNK-CA0001S-CNTY-OF-RES
      *    END-CALL

      *Temp display statements MJP start
           DISPLAY 'AA0052C CUR DT: '      LNK-AA0052C-CALWIN-CURRENT-DT
           DISPLAY 'AA0052C MAIN PGM ID: ' LNK-AA0052C-MAIN-PROGRAM-ID
           DISPLAY 'AA0052C USR ID: '      LNK-AA0052C-USR-ID
           DISPLAY 'AA0052C CNTY CD: '     LNK-AA0052C-COUNTY-CODE
           DISPLAY 'CA0001S CALL FRM CD: ' LNK-CA0001S-CALL-FRM-CD
           DISPLAY 'CA0001S CS ID: '       LNK-CA0001S-CS-ID
           DISPLAY 'CA0001S MODE CD: '     LNK-CA0001S-CS-MODE-CD
           DISPLAY 'CA0001S PGM TYP CD: '  LNK-CA0001S-PGM-TYP-CD
           DISPLAY 'CA0001S PGM STS CD: '  LNK-CA0001S-PGM-STS-CD

        PERFORM 01000-INITIATE
        PERFORM 03000-MAIN
        PERFORM 85000-CHECK-NONMA-PGM-CDS
        PERFORM 90000-CLOSE
        .

      ****************************************************************  G
      *** Initiate paragraph                                            G
      ****************************************************************  G
       01000-INITIATE.
        MOVE '01000-INITIATE'   TO WSL-PARA-NAME

      * Copybook to set data access layer entry point address and to
      * set the address of the data access SQLCODE and SQLTEXT variables
           COPY AA0057C.

      * Initialize Variables

        PERFORM 01100-INITIALIZE-VARIABLES
        .

      ****************************************************************  G
      *** Initialize Variables                                          G
      ****************************************************************  G
       01100-INITIALIZE-VARIABLES.
        MOVE '01100-INITIALIZE-VARIABLES'        TO WSL-PARA-NAME

      * Initialize Hold variables, Index variables, Accumulators and
      * move the content of the Linkage variable to the corresponding
      * Local Variables

      * Initialize Hold Variables

        INITIALIZE WSH-HOLD-VARIABLES
                   WSI-INDICES
                   WSA-ACCUMULATORS
                   WSH-CSLD-TBL-ARRAY
                   WSH-AL0001S-VARIABLES
                   WSH-CC2100S-VARIABLES
                   WSH-INV002S-VARIABLES
                   LNK-CA0001S-SUGST-OUT-PARAM
                   LNK-CA0001S-XFR-OUT-PARM
                   WST-RT-CNTY-PRC-CTL
                   WST-SE-LBR-AGMT-DTL
                   WST-TABLES
                   WST-NONMA-TABLES
                   WST-USR-ONGNG-CS-CR-DATA
                   WST-AU-CSLD-ARRAY
                   WSL-ERROR-LOG
                   WSD-CS-PGM
                   WSH-SAVE-APP-INFO
                   WSH-HOLD-PGM-TYP-CD

      * Initialize Switch Variables
        INITIALIZE
                WSS-PROCESS-SNGL-CS-PGM
                WSS-PROCESS-TYPE-SW
                WSS-CS-MODE-SW
                WSS-NOCLMAT-SW
                WSS-CNTY-PROC-LABOR-MTCH-SW
                WSS-CNTY-PROC-LANG-MTCH-SW
                WSS-CNTY-PROC-SPL-IND-MTCH-SW
                WSS-CNTY-PROC-CULT-MTCH-SW
                WSS-CNTY-AUTO-ASGN-SW
                WSS-CNTY-GNR-CS-ASG-SW
                WSS-USR-LANG-MATCH-SW
                WSS-CS-SPL-IND-MATCH-SW
                WSS-CS-ETHN-USR-MATCH-SW
                WSS-ASSGN-CSLD-SW
                WSS-MT-TYPE-XFER
                WSS-AR-PROCESS-SW
                WSS-MATQMAX-SW
                WSS-MATQOFF-SW
                WSS-CS-LNG-USR-LNG-SW
                WSS-GIVE-WHAT-LNG-CR-SW
                WSS-ALBRKDN-SW 
                WSS-DELETE-XFER-SW
2349            WSS-XFR-CSLD-SW
                       
        SET     WSS-NOT-END-C1-CURSOR            TO TRUE
        SET     WSS-NOT-END-C2-CURSOR            TO TRUE
        SET     WSS-NOT-END-C3-CURSOR            TO TRUE
        SET     WSS-NOT-END-C4-CURSOR            TO TRUE
        SET     WSS-NOT-END-C5-CURSOR            TO TRUE
        SET     WSS-NOT-END-C6-CURSOR            TO TRUE
        SET     WSS-NOT-END-C7-CURSOR            TO TRUE
        SET     WSS-NOT-END-C8-CURSOR            TO TRUE
        SET     WSS-NOT-END-C9-CURSOR            TO TRUE 
4974    SET     WSS-NOT-END-C10-CURSOR           TO TRUE  
4004    SET     WSS-NOT-END-MC-CURSOR            TO TRUE

        SET     WSS-MAX-CRDT-NOT-RCH             TO TRUE
        SET     WSS-USR-SCH-NOT-MATCH            TO TRUE
        SET     WSS-CS-PGM-CNT-NOT-EXISTS        TO TRUE
        SET     WSS-USR-ENG-LANG-NOT-MTCH        TO TRUE
        SET     WSS-CS-SPL-IND-NOT-EXISTS        TO TRUE
        SET     WSS-CASELOAD-NOT-EXISTS          TO TRUE
        SET     WSS-CS-PGM-NOT-EXISTS            TO TRUE
        SET     WSS-NO-SKIP                      TO TRUE
        SET     WSS-FIRST-TIME-SU-ASGN           TO TRUE
        SET     WSS-DONT-TRIGGER-NOTICE          TO TRUE
        SET     WSS-NO-CHK-INTK-COMBN            TO TRUE
        SET     WSS-NO-CHK-ONGNG-COMBN           TO TRUE
        SET     WSS-DONT-DELETE-ALRT             TO TRUE
        SET     WSS-CHK-NXT-FTCH-NOT-END         TO TRUE
        SET     WSS-PROCESS-NO-CLOSED-CS         TO TRUE
        SET     WSS-NO-POPULATE-XFR-ARRAY        TO TRUE
        SET     WSS-OFF-ID-NOT-FOUND             TO TRUE
        SET     WSS-CLOSED-CSLD-NOT-FOUND        TO TRUE
        SET     WSS-NO-DELETE-ONGNG-CR           TO TRUE
        SET     WSS-MASS-XFER-NOT-FOUND          TO TRUE
        SET     WSS-NOT-ALPHA-MTCH               TO TRUE
        SET     WSS-NOT-FIRST-LNG-MTCH           TO TRUE
        SET     WSS-NO-DELETE-XFER-INFO          TO TRUE
        SET     WSS-AR-NOT-ASSGND                TO TRUE
        SET     WSS-NO-CORSPD                    TO TRUE
        SET     WSS-ASSGN                        TO TRUE
        SET     LNK-CA0001S-SUCCESS              TO TRUE
        SET     WSL-CS                           TO TRUE
        SET     WSI-NONMA-IDX                    TO 1
5445C   SET     WSS-PE-CSLD-NOT-FOUND            TO TRUE
5707    SET     WSS-NO-MT-ERR                    TO TRUE

        MOVE WSC-CA0001S                    TO WSL-PROGRAM-ID
        MOVE LNK-AA0052C-MAIN-PROGRAM-ID    TO WSL-MAIN-PROGRAM-ID
5338    MOVE LNK-AA0052C-USR-ID             TO WSH-TEMP-USR-ID
5338    INSPECT WSH-TEMP-USR-ID REPLACING ALL LOW-VALUES BY SPACES
5338    MOVE WSH-TEMP-USR-ID                TO WSL-USER-ID
                                               WSH-CUR-USR-ID

        MOVE LNK-AA0052C-CALWIN-CURRENT-DT  TO WSH-CURRENT-DT
                                WSH-TEMP-DT

        MOVE WSH-TEMP-DT-YYYY               TO WSH-TEMP-YYYY
        MOVE WSH-TEMP-DT-MM                 TO WSH-TEMP-MM
        MOVE WSH-TEMP-YYYYMM                TO WSH-CUR-YYYYMM

        MOVE LNK-CA0001S-CS-ID              TO WSH-CUR-CS-ID
        MOVE LNK-CA0001S-PGM-TYP-CD         TO WSH-CUR-PGM-TYP-CD
        MOVE LNK-CA0001S-CS-MODE-CD         TO WSH-CUR-CS-MODE-CD
        MOVE LNK-CA0001S-CSLD-ID            TO WSH-CUR-CSLD-ID
        MOVE LNK-CA0001S-OFF-ID             TO WSH-CUR-OFF-ID
        MOVE ZEROES                         TO WSH-OFF-ID-I


        CALL 'aa_SvcDebugMessageVar' USING
              BY REFERENCE DBG-PROG-NAME,
          BY VALUE 1,
              BY VALUE 6,
          BY REFERENCE
                "CA0001S-Aft-Init: FRM_CD: %.2s " &
      -         "CS_ID: %.7s MODE_CD: %.2s" &
      -         "TYP: %.2s STS: %.2s" &
      -         "SUG DT: %.10s " & x"00",
                BY REFERENCE LNK-CA0001S-CALL-FRM-CD ,
                BY REFERENCE LNK-CA0001S-CS-ID ,
                BY REFERENCE LNK-CA0001S-CS-MODE-CD,
                BY REFERENCE LNK-CA0001S-PGM-TYP-CD,
                BY REFERENCE LNK-CA0001S-PGM-STS-CD,
                BY REFERENCE LNK-CA0001S-SUGST-DT
        END-CALL

        .

      ****************************************************************  G
      *** Main Paragraph                                                G
      ****************************************************************  G
       03000-MAIN.
        MOVE '03000-MAIN'        TO WSL-PARA-NAME
      *   DISPLAY WSL-PARA-NAME

      * Main Processing Starts Here

        PERFORM 10000-INITIAL-CHK-PROCESS

        CALL 'aa_SvcDebugMessageVar' USING
                BY REFERENCE DBG-PROG-NAME,
                BY VALUE 1,
                BY VALUE 6,
                BY REFERENCE
                "CA0001S-AftInitCheck: FRM_CD: %.2s " &
      -         "CS_ID: %.7s MODE_CD: %.2s" &
      -         "TYP: %.2s STS: %.2s" &
      -         "SUG DT: %.10s " & x"00",
                BY REFERENCE LNK-CA0001S-CALL-FRM-CD ,
                BY REFERENCE LNK-CA0001S-CS-ID ,
                BY REFERENCE LNK-CA0001S-CS-MODE-CD,
                BY REFERENCE LNK-CA0001S-PGM-TYP-CD,
                BY REFERENCE LNK-CA0001S-PGM-STS-CD,
                BY REFERENCE LNK-CA0001S-SUGST-DT
        END-CALL


        PERFORM 20000-APPLICATION-LOGIC
        .

      ****************************************************************  G
      *** Initial Check paragraph                                       G
      ****************************************************************  G
       10000-INITIAL-CHK-PROCESS.
        MOVE '10000-INITIAL-CHK-PROCESS' TO WSL-PARA-NAME

      * Check the Input Parameters before proceeding to the Application
      * Logic

        PERFORM 10100-CHK-INPUT-PARM


        CALL 'aa_SvcDebugMessageVar' USING
              BY REFERENCE DBG-PROG-NAME,
          BY VALUE 1,
              BY VALUE 6,
          BY REFERENCE
                "CA0001S-AftChkInpParm: FRM_CD: %.2s " &
      -         "CS_ID: %.7s MODE_CD: %.2s" &
      -         "TYP: %.2s STS: %.2s" &
      -         "SUG DT: %.10s " & x"00",
                BY REFERENCE LNK-CA0001S-CALL-FRM-CD ,
                BY REFERENCE LNK-CA0001S-CS-ID ,
                BY REFERENCE LNK-CA0001S-CS-MODE-CD,
                BY REFERENCE LNK-CA0001S-PGM-TYP-CD,
                BY REFERENCE LNK-CA0001S-PGM-STS-CD,
                BY REFERENCE LNK-CA0001S-SUGST-DT
        END-CALL


        IF WSS-PROCESS-CL-ASSGN
           EXIT PARAGRAPH
        END-IF

        PERFORM 10200-POPULATE-REF-TBL
        IF ((LNK-CA0001S-CALL-FRM-CD NOT = WSC-MT) AND
            (LNK-CA0001S-CALL-FRM-CD NOT = WSC-MX) AND
            (LNK-CA0001S-CALL-FRM-CD NOT = WSC-SU) AND
            (LNK-CA0001S-CALL-FRM-CD NOT = WSC-UT) AND
            (LNK-CA0001S-CALL-FRM-CD NOT = WSC-OR) AND
4004        (LNK-CA0001S-CALL-FRM-CD NOT = WSC-MC))


               CALL 'aa_SvcDebugMessageVar' USING
                 BY REFERENCE DBG-PROG-NAME,
                 BY VALUE 1,
                 BY VALUE 6,
                 BY REFERENCE
                 "CA0001S-BfrChkCase: FRM_CD: %.2s " &
      -          "CS_ID: %.7s MODE_CD: %.2s" &
      -          "TYP: %.2s STS: %.2s" &
      -          "SUG DT: %.10s " & x"00",
                 BY REFERENCE LNK-CA0001S-CALL-FRM-CD ,
                 BY REFERENCE LNK-CA0001S-CS-ID ,
                 BY REFERENCE LNK-CA0001S-CS-MODE-CD,
                 BY REFERENCE LNK-CA0001S-PGM-TYP-CD,
                 BY REFERENCE LNK-CA0001S-PGM-STS-CD,
                 BY REFERENCE LNK-CA0001S-SUGST-DT
               END-CALL


            PERFORM 10300-CHK-CASE-EXIST

            IF LNK-CA0001S-CALL-FRM-CD = WSC-QC AND
            WSS-PROCESS-QC-ASSGN
            SET WSS-QC-PROCESS-SINGLE-CS-PGM TO TRUE
            EXIT PARAGRAPH
            END-IF

2349        IF LNK-CA0001S-CALL-FRM-CD = WSC-PE AND
2349              WSS-CASE-EXISTS
2349              SET WSS-PE-PROCESS-SINGLE-CS-PGM TO TRUE
2349              EXIT PARAGRAPH
2349        END-IF


7043        IF LNK-CA0001S-CALL-FRM-CD = WSC-MA AND
7043              WSS-CASE-EXISTS
7043              SET WSS-MA-PROCESS-SINGLE-CS-PGM TO TRUE
7043              EXIT PARAGRAPH
7043        END-IF

            IF LNK-CA0001S-CALL-FRM-CD = WSC-ES      AND
            LNK-CA0001S-CS-MODE-CD = WSC-INTAKE  AND
            WSS-PROCESS-ES-ASSGN
            SET WSS-ES-PROCESS-SINGLE-CS-PGM TO TRUE
            END-IF

            IF WSS-CASE-EXISTS
             PERFORM 10320-CHK-CS-SPL-IND-EXIST
             IF LNK-CA0001S-CALL-FRM-CD = WSC-SI          AND
                WSS-PROCESS-SUGST-INQ
                SET WSS-SI-PROCESS-SINGLE-CS-PGM TO TRUE
4012  * Skip the cs pgm check here and perform it in 20000- para *
4012  *               PERFORM 10330-CHK-CS-PGM-EXIST

             END-IF

             IF LNK-CA0001S-CALL-FRM-CD = WSC-AR        AND
                LNK-CA0001S-CS-MODE-CD = WSC-INTAKE  AND
                      WSS-PROCESS-AR-ASSGN

               IF WSS-CNTY-GNR-CS-ASG
                 PERFORM 10400-GET-CS-PGM-COUNT

                 IF WSS-CS-PGM-CNT-EXISTS
                  SET WSS-END-C1-CURSOR TO TRUE
                  PERFORM 10410-OPEN-C1-CURSOR
                  PERFORM 10420-FETCH-C1-CURSOR

                  IF WSS-END-C1-CURSOR
                     MOVE SPACES TO LNK-SQL-TEXT
                              WSL-MISC-ERROR-TXT
                     STRING
                      'No Caseload found to match the'
                      ' Programs applied.'
                      WSC-ASTERISK  DELIMITED BY SIZE
                      WSH-CUR-CS-ID DELIMITED BY SIZE
                     INTO LNK-SQL-TEXT
                     END-STRING
                     MOVE WSC-500             TO
                     WSL-CALWIN-ERROR-CODE
                     LNK-AA0052C-CALWIN-ERROR-CD
                     MOVE LNK-SQL-TEXT             TO
                       WSL-MISC-ERROR-TXT
                     MOVE WSC-NOT-FOUND        TO
                       WSL-ERROR-VALUE
                       LNK-SQL-CODE
                     MOVE '10420-FETCH-C1-CURSOR' TO
                       WSL-PARA-NAME
                     MOVE 'CSLD_ID USR_ID, SE_CSLD_PRM_USR'
                    TO LNK-AA0052C-CALWIN-ERROR-TEXT
                     SET LNK-CA0001S-FAILURE     TO TRUE
                     SET WSL-FATAL          TO TRUE
                     MOVE WSH-CUR-CS-ID   TO WSL-IDENTIFIER
                     PERFORM 90000-CLOSE
                  ELSE
                      SET WSS-AR-PROCESS-ALL-CS-PGM TO TRUE
                  END-IF
                 END-IF
               ELSE
                 SET WSS-AR-PROCESS-SINGLE-CS-PGM TO TRUE
               END-IF
             END-IF
            END-IF
        ELSE
               PERFORM 10050-INIT-MT-MC-SU-OR-UT
        END-IF
        .

      ****************************************************************  G
      *** Initialize Mass update and Suggest Update Parameters          G
      ****************************************************************  G
       10050-INIT-MT-MC-SU-OR-UT.
           MOVE '10050-INIT-MT-MC-SU-OR-UT' TO WSL-PARA-NAME

      * Check for the Mass Update and Suggest Update Parameters and 
      * Undo Transfer Parameters

        IF NOT (WSS-TYPE3-MASS-XFER OR
             WSS-TYPE4-MASS-XFER)

      * For undo transfer, we need to get the caseload worker based on
      * the current case, then verify the existence of the caseload we 
      * are going to transfer to, which is why 10130-CHK-CSLD-EXIST is
      * called twice for this type.

            EVALUATE LNK-CA0001S-CALL-FRM-CD
                 WHEN 'UT'
4012                PERFORM 10305-GET-CUR-CSLD-ID
4012                PERFORM 10310-CHK-CSLD-EXIST
              MOVE WSH-CUR-CSLD-ID TO WSH-ORIG-CSLD-ID
              MOVE WSH-CSLD-WRKR TO WSH-ORIG-CSLD-WRKR
              IF LNK-CA0001S-CALL-FRM-CD = 'UT'
                 MOVE LNK-CA0001S-ASSGN-TO-CSLD
                    TO WSH-CUR-CSLD-ID
4012 **             ELSE
4012 **                MOVE LNK-CA0001S-CSLD-ID
4012 **                   TO WSH-CUR-CSLD-ID
              END-IF
              PERFORM 10310-CHK-CSLD-EXIST
                 WHEN 'OR'
                    CONTINUE
     **              PERFORM VARYING WSI-SU-OR-PGM-IDX
     **                 FROM WSC-ONE BY WSC-ONE UNTIL
     **                  WSI-SU-OR-PGM-IDX  >  WSC-20    OR
     **                  LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
     **                  SPACES
     **                 MOVE LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX )
     **                   TO LNK-CA0001S-PGM-TYP-CD
     **                 PERFORM 10305-GET-CUR-CSLD-ID
     **                 PERFORM 10310-CHK-CSLD-EXIST
     **              END-PERFORM
              WHEN 'SU'
              PERFORM 10310-CHK-CSLD-EXIST
4004             WHEN 'MC'
                 WHEN 'MT'
              MOVE LNK-CA0001S-ASSGN-TO-CSLD
               TO WSH-CUR-CSLD-ID
              PERFORM 10310-CHK-CSLD-EXIST
            END-EVALUATE

           ELSE

4974            PERFORM 10320-CHK-CS-SPL-IND-EXIST

             MOVE LNK-CA0001S-ASSGN-TO-CSLD 
            TO WSH-CUR-CSLD-ID

        END-IF


           IF (LNK-CA0001S-CALL-FRM-CD = WSC-UT)
           PERFORM 10340-GET-PGM-STS-CD
           PERFORM 10330-CHK-CS-PGM-EXIST
           IF WSS-CS-PGM-EXISTS
              SET WSS-DELETE-XFER-INFO TO TRUE
           END-IF
           PERFORM 10350-GET-OVR-RSN-CD
           MOVE WSC-HIGH-DT TO LNK-CA0001S-EFF-END-DT
           PERFORM 69830-GET-FETCH-DTM
           MOVE WSD-FETCH-DTM TO LNK-CA0001S-FETCH-DTM
           EXIT PARAGRAPH
        END-IF

        IF  ((LNK-CA0001S-CALL-FRM-CD = WSC-SU AND
           WSS-PROCESS-SUGST-UPD)
            OR
               (LNK-CA0001S-CALL-FRM-CD = WSC-OR AND
          WSS-PROCESS-OR-ASSGN))
          
4012 **        PERFORM 10330-CHK-CS-PGM-EXIST

4012           INITIALIZE WSI-SU-OR-PGM-IDX

4012           PERFORM VARYING WSI-SU-OR-PGM-IDX
                  FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
                       WSI-SU-OR-PGM-IDX  >  WSC-20             OR
                       WSI-SU-OR-PGM-IDX  > LNK-CA0001S-TOTAL-MASS-XFERS
      *                LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
      *                SPACES

4012              MOVE LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) TO
                       WSH-CUR-PGM-TYP-CD

4012              PERFORM 10340-GET-PGM-STS-CD

4012              PERFORM 10330-CHK-CS-PGM-EXIST

4012           END-PERFORM

            IF WSS-CS-PGM-EXISTS
                  IF LNK-CA0001S-CALL-FRM-CD = WSC-SU
               SET WSS-SU-PROCESS-SINGLE-CS-PGM TO TRUE
            END-IF
                  IF LNK-CA0001S-CALL-FRM-CD = WSC-OR
               SET WSS-OR-PROCESS-SINGLE-CS-PGM TO TRUE
            END-IF            
            END-IF
        ELSE
            SET WSS-MT-TYPES-ASGN          TO TRUE
            SET WSS-MT-PROCESS-SINGLE-CS-PGM TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Check input parameters                                        G
      ****************************************************************  G
       10100-CHK-INPUT-PARM.
        MOVE '10100-CHK-INPUT-PARM' TO WSL-PARA-NAME

      * Validate the Call From code

           EVALUATE LNK-CA0001S-CALL-FRM-CD
               WHEN WSC-AR
                   PERFORM 10110-CHK-AR-ASSGN-PARM

               WHEN WSC-SI
                   PERFORM 10120-CHK-SUGST-USR-INQ-PARM

               WHEN WSC-SU
                   PERFORM 10130-CHK-SUGST-USR-UPD-PARM

               WHEN WSC-MT
               WHEN WSC-MX
               WHEN WSC-MC
                   PERFORM 10140-CHK-MASS-XFER-PARM

               WHEN WSC-AU
                   PERFORM 10150-CHK-AU-ASSGN-PARM

               WHEN WSC-ES
                   PERFORM 10160-CHK-ES-ASSGN-PARM

               WHEN WSC-QC
                   PERFORM 10170-CHK-QC-ASSGN-PARM

               WHEN WSC-OR
                   PERFORM 10180-CHK-OR-ASSGN-PARM

               WHEN WSC-CL
                   PERFORM 10190-CHK-CL-ASSGN-PARM

               WHEN WSC-UT
                   PERFORM 10195-CHK-UNDO-XFER-PARM

2349           WHEN WSC-PE
2349               PERFORM 10185-CHK-PE-XFER-PARM

7043           WHEN WSC-MA
7043               PERFORM 10175-CHK-MA-XFER-PARM

            WHEN OTHER
             MOVE "Error in Call From Code" TO LNK-SQL-TEXT
                                   WSL-MISC-ERROR-TXT

             MOVE ZEROES                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CALL_FRM_CD'          TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             SET WSL-FATAL            TO TRUE
             IF  WSH-CUR-CS-ID = SPACES
               MOVE LNK-CA0001S-XFER-USR-ID TO WSL-IDENTIFIER
               SET  WSL-USER TO TRUE
             ELSE
               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
               SET  WSL-CS   TO TRUE
             END-IF
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Check AR assignment parameters                                G
      ****************************************************************  G
       10110-CHK-AR-ASSGN-PARM.
        MOVE '10110-CHK-AR-ASSGN-PARM' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      * Validate the AR Assignment Parameters

        IF LNK-CA0001S-CS-ID = SPACES
            STRING
              'Error in  Input Parm'     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-CS-ID            DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING
            MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'CASE ID'    TO  LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            PERFORM 90000-CLOSE
        ELSE
            SET WSS-PROCESS-AR-ASSGN TO TRUE
            SET WSS-NO-INTERFACE-TRIGGER TO TRUE
        END-IF

        PERFORM 10111-CHECK-MASITE-OFF 
     
        IF WSS-MASITE-OFFICE
           IF LNK-CA0001S-OFF-OF-RES <> ZEROES
              MOVE LNK-CA0001S-OFF-OF-RES TO WSH-SAVE-APP-OFF
              SET WSS-ONE-OFFICE TO TRUE
           ELSE
              IF LNK-CA0001S-CNTY-OF-RES <> SPACES
              MOVE LNK-CA0001S-CNTY-OF-RES TO 
               WSH-SAVE-MASITE-CNTY-CD
              PERFORM 10119-GET-APP-OFF
              ELSE
                 PERFORM 10113-GET-HOME-ADR-CNTY           
              END-IF
           END-IF
        END-IF
        .

      ****************************************************************  G
      *** Determine if the office taking the app is from a MA Site      G
      ****************************************************************  G
       10111-CHECK-MASITE-OFF.
           MOVE '10111-CHECK-MASITE-OFF' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *     DISPLAY 'USR ID ' LNK-AA0052C-USR-ID

        SET WSS-NO-CHECK-MASITE TO TRUE

           EXEC SQL
           SELECT
            C.MA_SITE_SW
           INTO
           :WSH-SAVE-MASITE-CNTY-SW
           FROM
            SE_OFF A
           ,SE_USR_UNT_OFF B
           ,RT_CNTY C
            WHERE
            B.USR_ID = RTRIM(:LNK-AA0052C-USR-ID)
            AND B.OFF_ID = A.OFF_ID
            AND A.CNTY_CD = C.CNTY_CD
            END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           MOVE WSH-SAVE-MASITE-CNTY-SW TO
               WSS-MASITE-SW

           WHEN WSC-NOT-FOUND
           IF LNK-AA0052C-COUNTY-CODE <> SPACES 
              MOVE LNK-AA0052C-COUNTY-CODE TO 
                 WSH-SAVE-MASITE-CNTY-CD
              PERFORM 10112-CHK-MASITE-USR-CNTY
           ELSE
              SET WSS-CHECK-MASITE TO TRUE
              PERFORM 30360-GET-CUR-OFF-ID
           END-IF

           WHEN OTHER
           SET LNK-CA0001S-FAILURE TO TRUE
           MOVE SQLCODE          TO LNK-SQL-CODE
           MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
           INITIALIZE      LNK-SQL-TEXT
                    WSL-MISC-ERROR-TXT
                    LNK-AA0052C-CALWIN-ERROR-TEXT
           STRING 'Error reading SE_OFF, SE_USR_UNT_OFF, RT_CNTY '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
           INTO LNK-SQL-TEXT
           END-STRING

           MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
           SET WSL-CS          TO TRUE
           MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
           SET WSL-FATAL          TO TRUE
           PERFORM 90000-CLOSE
         END-EVALUATE
         .

      ****************************************************************  G
      *** Get the home address county.                                  G
      ****************************************************************  G
       10112-CHK-MASITE-USR-CNTY.
        MOVE '10112-CHK-MASITE-USR-CNTY' TO WSL-PARA-NAME

      * Check the logged in user's county to see if it's MA Site or not

           EXEC SQL

           SELECT
           MA_SITE_SW
           INTO
           :WSH-SAVE-MASITE-CNTY-SW
           FROM
           RT_CNTY
           WHERE
           CNTY_CD = RTRIM(:LNK-AA0052C-COUNTY-CODE)
           AND EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
           AND NVL(EFF_END_DT,F_HIGH_DT()) >=
           TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')

           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           MOVE WSH-SAVE-MASITE-CNTY-SW TO
               WSS-MASITE-SW

           WHEN OTHER
           SET LNK-CA0001S-FAILURE TO TRUE
           MOVE SQLCODE          TO LNK-SQL-CODE
           MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
           INITIALIZE      LNK-SQL-TEXT
                    WSL-MISC-ERROR-TXT
                    LNK-AA0052C-CALWIN-ERROR-TEXT
           STRING 'Error reading RT_CNTY '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
           INTO LNK-SQL-TEXT
           END-STRING

           MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
           SET WSL-CS          TO TRUE
           MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
           SET WSL-FATAL          TO TRUE
           PERFORM 90000-CLOSE
         END-EVALUATE
         .

      ****************************************************************  G
      *** Get the home address county.                                  G
      ****************************************************************  G
       10113-GET-HOME-ADR-CNTY.
        MOVE '10113-GET-HOME-ADR-CNTY' TO WSL-PARA-NAME
         INITIALIZE WSD-INDV-ADR
      *     DISPLAY WSL-PARA-NAME

      * Retrieve the mailing address county

           EXEC SQL
            SELECT
            A.CNTY_CD
            INTO
              :WSD-INDV-ADR.WSD-CNTY-CD:WSD-INDV-ADR.WSD-CNTY-CD-I
            FROM
               INDV_ADR A
             ,CS   B
            WHERE
                B.CS_ID = :WSH-CUR-CS-ID
            AND B.APP_CWIN = A.CWIN
            AND A.ADR_TYP_CD = :WSC-HOME-ADR  
            AND A.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND B.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            END-EXEC
                     
         EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           IF WSD-CNTY-CD-I OF WSD-INDV-ADR = ZEROES
              IF WSD-CNTY-CD OF WSD-INDV-ADR = SPACES
               PERFORM 10115-GET-MAIL-ADR-CNTY
              ELSE
                   PERFORM 10119-GET-APP-OFF
              END-IF
              ELSE
              PERFORM 10115-GET-MAIL-ADR-CNTY
           END-IF
           WHEN WSC-NOT-FOUND
           PERFORM 10115-GET-MAIL-ADR-CNTY
           WHEN OTHER
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE SQLCODE          TO LNK-SQL-CODE
             MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE      LNK-SQL-TEXT
                    WSL-MISC-ERROR-TXT
                    LNK-AA0052C-CALWIN-ERROR-TEXT
             STRING 'Error reading INDV, CS '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
             SET WSL-CS          TO TRUE
             MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
          SET WSL-FATAL          TO TRUE
             PERFORM 90000-CLOSE
             END-EVALUATE
         .
      ****************************************************************  G
      *** Get the mailing address county.                               G
      ****************************************************************  G
       10115-GET-MAIL-ADR-CNTY.
        MOVE '10115-GET-MAIL-ADR-CNTY' TO WSL-PARA-NAME
        INITIALIZE WSD-INDV-ADR
      *    DISPLAY WSL-PARA-NAME

      * Retrieve the mailing address county

           EXEC SQL
           SELECT
           A.CNTY_CD
           INTO
              :WSD-INDV-ADR.WSD-CNTY-CD:WSD-INDV-ADR.WSD-CNTY-CD-I
           FROM
             INDV_ADR A
            ,CS   B
           WHERE
                B.CS_ID = :WSH-CUR-CS-ID
            AND B.APP_CWIN = A.CWIN
            AND A.ADR_TYP_CD = :WSC-MAIL-ADR  
            AND A.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND B.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
           END-EXEC
                     
         EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           IF WSD-CNTY-CD-I OF WSD-INDV-ADR = ZEROES
              IF WSD-CNTY-CD OF WSD-INDV-ADR = SPACES
                 SET WSS-MORE-THAN-ONE-OFFICE TO TRUE
              ELSE
                 PERFORM 10119-GET-APP-OFF
              END-IF
              ELSE
              SET WSS-MORE-THAN-ONE-OFFICE TO TRUE
           END-IF
           WHEN WSC-NOT-FOUND
          SET WSS-MORE-THAN-ONE-OFFICE TO TRUE
           WHEN OTHER
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE SQLCODE          TO LNK-SQL-CODE
             MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE      LNK-SQL-TEXT
                    WSL-MISC-ERROR-TXT
                    LNK-AA0052C-CALWIN-ERROR-TEXT
             STRING 'Error reading INDV, CS '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
             SET WSL-CS          TO TRUE
             MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
          SET WSL-FATAL          TO TRUE
             PERFORM 90000-CLOSE
           END-EVALUATE
           .
      ****************************************************************  G
      *** Get county of logged in user.                                 G
      ****************************************************************  G
       10116-GET-LOGGEDIN-USR-CNTY.
           MOVE '10116-GET-LOGGEDIN-USR-CNTY' TO WSL-PARA-NAME

           EXEC SQL
              SELECT
                C.CNTY_CD,
                A.OFF_ID
              INTO
                :WSH-CNTY-CD,
                :WSH-MA-OFF-ID
              FROM
                 SE_OFF A
                ,SE_USR_UNT_OFF B
                ,RT_CNTY C
              WHERE
                  B.USR_ID = RTRIM(:LNK-AA0052C-USR-ID)
              AND B.OFF_ID = A.OFF_ID
              AND A.CNTY_CD = C.CNTY_CD
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN WSC-NOT-FOUND
              WHEN OTHER
                 SET LNK-CA0001S-FAILURE TO TRUE
                 MOVE SQLCODE           TO LNK-SQL-CODE
                 MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                 INITIALIZE     LNK-SQL-TEXT
                                WSL-MISC-ERROR-TXT
                                LNK-AA0052C-CALWIN-ERROR-TEXT
                 STRING 'Error reading LOGGED IN user county '
                        WSH-CUR-CS-ID   DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        SQLERRM         DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CURRENT-DT  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE
                 INTO LNK-SQL-TEXT
                 END-STRING

                 MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
                 SET WSL-CS             TO TRUE
                 MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
                 SET WSL-FATAL          TO TRUE
                 PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Determine if there are one or multiple offices in a county.   G
      ****************************************************************  G
       10119-GET-APP-OFF.
        MOVE '10119-GET-APP-OFF' TO WSL-PARA-NAME
        INITIALIZE WSH-SAVE-APP-OFF
      *     DISPLAY WSL-PARA-NAME
      *     DISPLAY 'CNTY = ' WSD-CNTY-CD OF WSD-INDV-ADR
      * Retrieve the applicant's office of residence

           EXEC SQL
            SELECT
            OFF_ID
            INTO
             :WSH-SAVE-APP-OFF
            FROM
             SE_OFF
            WHERE
             CNTY_CD = :WSD-INDV-ADR.WSD-CNTY-CD
            END-EXEC
                     
         EVALUATE SQLCODE
          WHEN WSC-SQL-OK
          SET WSS-ONE-OFFICE TO TRUE
          WHEN WSC-MULTIPLE-ROWS
          SET WSS-MORE-THAN-ONE-OFFICE TO TRUE
          WHEN OTHER
            SET LNK-CA0001S-FAILURE TO TRUE
            MOVE SQLCODE          TO LNK-SQL-CODE
            MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
            INITIALIZE      LNK-SQL-TEXT
                    WSL-MISC-ERROR-TXT
                    LNK-AA0052C-CALWIN-ERROR-TEXT
            STRING 'Error reading SE_OFF '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING

            MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
            SET WSL-CS          TO TRUE
            MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
            SET WSL-FATAL          TO TRUE
            PERFORM 90000-CLOSE
             END-EVALUATE
         .


        
      ****************************************************************  G
      *** Check suggested user inquiry parameters                       G
      ****************************************************************  G
       10120-CHK-SUGST-USR-INQ-PARM.
        MOVE '10120-CHK-SUGST-USR-INQ-PARM' TO WSL-PARA-NAME

      * Validate the Suggest User Inquiry Assignment Parameters

           IF (LNK-CA0001S-CS-ID                 = SPACES   OR
4012 **       LNK-CA0001S-PGM-TYP-CD             = SPACES   OR
4012 **       LNK-CA0001S-PGM-STS-CD             = SPACES   OR
              LNK-CA0001S-CS-MODE-CD             = SPACES   OR
4012          LNK-CA0001S-OR-SU-SI-PGM(WSC-ONE-NUM)  = SPACES)

          IF LNK-CA0001S-CS-MODE-CD = WSC-INTAKE AND
          LNK-CA0001S-SUGST-DT   = SPACES

               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE 'CASE ID or PGM TYP CD or PGM STS CD or CS MODE CD'
                 TO LNK-AA0052C-CALWIN-ERROR-TEXT
            MOVE 'ERROR IN SUGGEST USER PARAMETERS' TO
               WSL-MISC-ERROR-TXT
               LNK-SQL-TEXT
            SET LNK-CA0001S-FAILURE TO TRUE
            SET WSL-FATAL            TO TRUE
            MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
          END-IF
        ELSE
            IF LNK-CA0001S-USR-ID = SPACES
            MOVE WSC-DUMMY-USER TO WSH-NOT-THIS-USR-ID
            ELSE
            MOVE LNK-CA0001S-USR-ID TO WSH-NOT-THIS-USR-ID
            END-IF

            IF LNK-CA0001S-SUGST-TM = SPACES
             MOVE WSC-DFLT-TIME TO LNK-CA0001S-SUGST-TM
            END-IF
      *Note this variable is used in appointment scheduling
            MOVE LNK-CA0001S-FETCH-DTM TO WSH-SCHD-CUR-DTM

            SET WSS-PROCESS-SUGST-INQ TO TRUE
            SET WSS-NO-INTERFACE-TRIGGER TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Check suggested user update parameters                        G
      ****************************************************************  G
       10130-CHK-SUGST-USR-UPD-PARM.
        MOVE '10130-CHK-SUGST-USR-UPD-PARM' TO WSL-PARA-NAME

      * Validate the Suggest User Update Assignment Parameters

        IF (LNK-CA0001S-CSLD-ID     = ZEROES      OR
            LNK-CA0001S-CS-ID       = SPACES      OR
4012 **        LNK-CA0001S-PGM-TYP-CD  = SPACES  OR
4012 **        LNK-CA0001S-UPD-DTM     = SPACES  OR
            LNK-CA0001S-FETCH-DTM   = SPACES      OR
4013 **        LNK-CA0001S-EFF-BGN-DT  = SPACES  OR
4012 **        LNK-CA0001S-PGM-STS-CD  = SPACES  OR
4012           LNK-CA0001S-OR-SU-SI-PGM(WSC-ONE-NUM) = SPACES
               )

            MOVE "ERROR IN SUGGEST USER UPDATE PARAMETERS"
                         TO WSL-MISC-ERROR-TXT
                            LNK-SQL-TEXT

            MOVE ZEROES          TO LNK-SQL-CODE
                            WSL-ERROR-VALUE

               MOVE WSC-503             TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
               STRING
                  'CSLD ID or CS ID or PGM TYP CD or UPD DTM or '
                  DELIMITED BY SIZE,
                  'FETCH DTM or EFF BGN DT or PGM STS CD or EFF BGN DT'
                  DELIMITED BY SIZE
               INTO LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
            SET LNK-CA0001S-FAILURE     TO TRUE
            SET WSL-FATAL          TO TRUE
            MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        ELSE
            SET WSS-PROCESS-SUGST-UPD TO TRUE
            SET WSS-INTERFACE-TRIGGER TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Check mass transfer assignment parameters                     G
      ****************************************************************  G
       10140-CHK-MASS-XFER-PARM.
        MOVE '10140-CHK-MASS-XFER-PARM' TO WSL-PARA-NAME

      * Validate the Mass Transfer Assignment Parameters
           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN 0
          SET WSS-MASS-XFER-NOT-FOUND TO TRUE
          PERFORM 10145-CHK-MULT-XFER-PARM VARYING WSI-MASS-XFER
                 FROM 1 BY 1
          UNTIL WSS-MASS-XFER-FOUND
                OR WSI-MASS-XFER GREATER THAN
                   LNK-CA0001S-TOTAL-MASS-XFERS
        END-IF.

        IF  LNK-CA0001S-XFER-ALL-CS-SW      = SPACES OR
            LNK-CA0001S-XFER-AUT-ASGN-SW    = SPACES OR
            LNK-CA0001S-XFER-USR-ID            = SPACES

            MOVE "ERROR IN MASS UPDATE INPUT PARAMETERS"
                         TO WSL-MISC-ERROR-TXT
                            LNK-SQL-TEXT

            MOVE ZEROES          TO LNK-SQL-CODE
                            WSL-ERROR-VALUE

               MOVE WSC-503             TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
               MOVE
                  'XFER_ALL_CS_SW or XFER_AUT_ASGN_SW or XFER_USR_ID'
                 TO LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE     TO TRUE
            SET WSL-FATAL          TO TRUE
            MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        END-IF

      ** If all the cases in the caseload to be transferred to another
      *      Known caseload

      ** Type 1 of Mass Transfer

           IF LNK-CA0001S-XFER-AUT-ASGN-SW = WSC-NO AND
              LNK-CA0001S-XFER-ALL-CS-SW = WSC-YES  AND
              (LNK-CA0001S-CALL-FRM-CD = WSC-MX     OR
               LNK-CA0001S-CALL-FRM-CD = WSC-MT)
            IF LNK-CA0001S-ASSGN-TO-CSLD = ZEROES
             MOVE "Error in Type 1 Mass Transfer"
                            TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT

             MOVE ZEROES              TO LNK-SQL-CODE
                                WSL-ERROR-VALUE

                   MOVE WSC-503           TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ASSGN_TO_CSLD'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE LNK-CA0001S-XFER-USR-ID TO WSL-IDENTIFIER
             SET WSL-USER              TO TRUE
             PERFORM 90000-CLOSE
            ELSE
             SET WSS-TYPE1-MASS-XFER TO TRUE
                SET WSS-INTERFACE-TRIGGER TO TRUE
             EXIT PARAGRAPH
            END-IF
        END-IF


      ** If only few cases in the caseload to be transferred to another
      *        Known caseload

      ** Type 2 of Mass Transfer

           IF LNK-CA0001S-XFER-AUT-ASGN-SW = WSC-NO AND
              LNK-CA0001S-XFER-ALL-CS-SW   = WSC-NO AND
              (LNK-CA0001S-CALL-FRM-CD = WSC-MX     OR
               LNK-CA0001S-CALL-FRM-CD = WSC-MT)


            IF (LNK-CA0001S-XFER-PCT            = ZEROES       AND
             LNK-CA0001S-XFER-NUM            = ZEROES       AND
             LNK-CA0001S-PGM-STS-CD      = SPACES       AND
             LNK-CA0001S-PGM-TYP-CD      = SPACES       AND
             LNK-CA0001S-XFER-LANG       = SPACES       AND
             LNK-CA0001S-XFER-SPL-IND    = SPACES)

             MOVE "Error in Type 2 Mass Transfer"
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT

             MOVE ZEROES              TO LNK-SQL-CODE
                                WSL-ERROR-VALUE

                   MOVE WSC-503         TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   STRING
                     'XFER_PCT or XFER_NUM or PGM_STS_CD or '
                      DELIMITED BY SIZE,
                     'PGM_TYP_CD or XFER_LANG or XFER_SPL_IND'
                      DELIMITED BY SIZE
                   INTO LNK-AA0052C-CALWIN-ERROR-TEXT
                   END-STRING
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE LNK-CA0001S-XFER-USR-ID TO WSL-IDENTIFIER
             SET WSL-USER              TO TRUE
             PERFORM 90000-CLOSE
            ELSE
5707             MOVE LNK-CA0001S-PGM-TYP-CD TO WSH-MT-PGM-TYP-CD
5707             MOVE LNK-CA0001S-PGM-STS-CD TO WSH-MT-PGM-STS-CD
             SET WSS-TYPE2-MASS-XFER TO TRUE
                SET WSS-INTERFACE-TRIGGER TO TRUE
             EXIT PARAGRAPH
            END-IF
        END-IF


      * If all the cases in the caseload to be transferred to another
      * caseload based on the automatic Case Assignment

      ** Type 3 of Mass Transfer

           IF LNK-CA0001S-XFER-AUT-ASGN-SW = WSC-YES AND
              LNK-CA0001S-XFER-ALL-CS-SW   = WSC-YES AND
              (LNK-CA0001S-CALL-FRM-CD = WSC-MX     OR
               LNK-CA0001S-CALL-FRM-CD = WSC-MT)
            SET WSS-TYPE3-MASS-XFER TO TRUE
            SET WSS-INTERFACE-TRIGGER TO TRUE
            EXIT PARAGRAPH
        END-IF


      ** If only few cases in the caseload to be transferred to another
      *      caseload based on the automatic Case Assignment

      ** Type 4 of Mass Transfer

           IF LNK-CA0001S-XFER-AUT-ASGN-SW = WSC-YES AND
              LNK-CA0001S-XFER-ALL-CS-SW = WSC-NO    AND
              (LNK-CA0001S-CALL-FRM-CD = WSC-MX     OR
               LNK-CA0001S-CALL-FRM-CD = WSC-MT)
              IF (LNK-CA0001S-XFER-PCT        = ZEROES   AND
             LNK-CA0001S-XFER-NUM            = ZEROES       AND
             LNK-CA0001S-PGM-STS-CD      = SPACES       AND
             LNK-CA0001S-PGM-TYP-CD      = SPACES       AND
             LNK-CA0001S-XFER-LANG       = SPACES       AND
             LNK-CA0001S-XFER-SPL-IND    = SPACES)

             MOVE "Error in Type 4 Mass Transfer"
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT

             MOVE ZEROES              TO LNK-SQL-CODE
                                WSL-ERROR-VALUE

                   MOVE WSC-503             TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                   STRING
                      'XFER_PCT or XFER_NUM or PGM_STS_CD or '
                      DELIMITED BY SIZE,
                      'PGM_TYP_CD or XFER_LANG or XFER_SPL_IND'
                      DELIMITED BY SIZE
                   INTO LNK-AA0052C-CALWIN-ERROR-TEXT
                   END-STRING
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE
             SET WSL-USER              TO TRUE
             MOVE LNK-CA0001S-XFER-USR-ID TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
            ELSE
             SET WSS-TYPE4-MASS-XFER TO TRUE
                SET WSS-INTERFACE-TRIGGER TO TRUE
5707             MOVE LNK-CA0001S-PGM-TYP-CD TO WSH-MT-PGM-TYP-CD
5707             MOVE LNK-CA0001S-PGM-STS-CD TO WSH-MT-PGM-STS-CD
            END-IF
        END-IF

4004  ** Type C of Mass Transfer

           IF LNK-CA0001S-XFER-AUT-ASGN-SW = WSC-NO AND
              LNK-CA0001S-XFER-ALL-CS-SW = WSC-NO    AND
              LNK-CA0001S-CALL-FRM-CD = WSC-MC

              IF LNK-CA0001S-ASSGN-TO-CSLD = ZEROES
                  MOVE "Error in Type C Mass Transfer"
                                          TO WSL-MISC-ERROR-TXT
                                              LNK-SQL-TEXT

                  MOVE ZEROES              TO LNK-SQL-CODE
                                              WSL-ERROR-VALUE

                  MOVE WSC-503           TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                  MOVE 'ASSGN_TO_CSLD'
                    TO LNK-AA0052C-CALWIN-ERROR-TEXT
                  SET LNK-CA0001S-FAILURE  TO TRUE
                  SET WSL-FATAL            TO TRUE
                  MOVE LNK-CA0001S-XFER-USR-ID TO WSL-IDENTIFIER
                  SET WSL-USER             TO TRUE
                  PERFORM 90000-CLOSE
              ELSE
                  SET WSS-TYPEC-MASS-XFER TO TRUE
                  SET WSS-INTERFACE-TRIGGER TO TRUE
                  EXIT PARAGRAPH
              END-IF
           END-IF
        .

      ****************************************************************  G

        10145-CHK-MULT-XFER-PARM.

        MOVE '10145-CHK-MULT-XFER-PARM'   TO WSL-PARA-NAME

        IF LNK-CA0001S-MT-USERID(WSI-MASS-XFER) NOT EQUAL SPACES
          SET WSS-MASS-XFER-FOUND TO TRUE
          MOVE LNK-CA0001S-MT-USERID(WSI-MASS-XFER) TO 
                LNK-CA0001S-XFER-USR-ID
        END-IF.


      ****************************************************************  G 
      *** Check Authorization assignment parameters para                G
      ****************************************************************  G
       10150-CHK-AU-ASSGN-PARM.
        MOVE '10150-CHK-AU-ASSGN-PARM' TO WSL-PARA-NAME

      * Validate the Authorisation Assignment Parameters

        IF (LNK-CA0001S-CS-ID       = SPACES OR
            LNK-CA0001S-PGM-TYP-CD  = SPACES)

            STRING
              'Error in  Input Parm'     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-CS-ID            DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-PGM-TYP-CD     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING
            MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
               MOVE 'CS_ID or PGM_TYP_CD'  TO
                    LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        ELSE
           MOVE WSC-ONGOING            TO WSH-CUR-CS-MODE-CD
           SET WSS-PROCESS-AU-ASSGN TO TRUE
           SET WSS-INTERFACE-TRIGGER TO TRUE
        END-IF
        .

      ****************************************************************
      * Para retrieves transfer caseload of maximus
      ****************************************************************
       10154-GET-MAX-DH-XFER-CSLD.
           MOVE '10154-GET-MAX-DH-XFER-CSLD' TO WSL-PARA-NAME

           EXEC SQL
            SELECT XFER_CSLD_ID,
                   OFF_ID,
                   CNTY_CD
             INTO :WSH-VENDOR-XFER-CSLD,
                  :WSH-VENDOR-OFF-ID,
                  :WSH-VENDOR-CNTY-CD
            FROM  RT_CNTY_OFF_XFER_CSLD
           WHERE OFF_ID            > :WSC-ZERO
            AND CHP_VEND_SW       = :WSC-YES
            AND FM_VEND_SW        = :WSC-YES
            AND AM_VEND_SW        = :WSC-YES
            AND XFER_CSLD_ID      > :WSC-ZERO
            AND EFF_BGN_DT        <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
                  CONTINUE
             WHEN WSC-MULTIPLE-ROWS
             WHEN WSC-NOT-FOUND
             WHEN OTHER
               SET LNK-CA0001S-FAILURE TO TRUE
               MOVE SQLCODE             TO LNK-SQL-CODE
               MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
               INITIALIZE       LNK-SQL-TEXT
                                WSL-MISC-ERROR-TXT
                                LNK-AA0052C-CALWIN-ERROR-TEXT
               STRING 'Error reading RT_CNTY_OFF_XFER_CSLD for maximus '
                        WSH-CUR-CS-ID   DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        SQLERRM         DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CURRENT-DT  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE
               INTO LNK-SQL-TEXT
               END-STRING

               MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
               SET WSL-CS               TO TRUE
               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
               SET WSL-FATAL            TO TRUE
               PERFORM 90000-CLOSE
           END-EVALUATE

           EXEC SQL
            SELECT XFER_CSLD_ID,
                   OFF_ID,
                   CNTY_CD
             INTO :WSH-DENHLTH-XFER-CSLD,
                  :WSH-DENHLTH-OFF-ID,
                  :WSH-VENDOR-CNTY-CD
            FROM  RT_CNTY_OFF_XFER_CSLD
           WHERE OFF_ID           > :WSC-ZERO
            AND DEN_HLTH_SW       = :WSC-YES
            AND XFER_CSLD_ID      > :WSC-ZERO
            AND EFF_BGN_DT        <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
                  CONTINUE
             WHEN WSC-MULTIPLE-ROWS
             WHEN WSC-NOT-FOUND
             WHEN OTHER
               SET LNK-CA0001S-FAILURE TO TRUE
               MOVE SQLCODE             TO LNK-SQL-CODE
               MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
               INITIALIZE       LNK-SQL-TEXT
                                WSL-MISC-ERROR-TXT
                                LNK-AA0052C-CALWIN-ERROR-TEXT
               STRING 'Error reading RT_CNTY_OFF_XFER_CSLD for den hlth'
                        WSH-CUR-CS-ID   DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        SQLERRM         DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CURRENT-DT  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE
               INTO LNK-SQL-TEXT
               END-STRING

               MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
               SET WSL-CS               TO TRUE
               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
               SET WSL-FATAL            TO TRUE
               PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************
      * Para checks if current csld is assigned to CHP vendor off
      ****************************************************************
       10155-CHK-CHP-VENDOR-OFF.
           MOVE '10155-CHK-CHP-VENDOR-OFF' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
1815  *   Check if its chp already assigned to chp vendor
1815      INITIALIZE WSH-VENDOR-OFF-COUNT
1815      IF WSH-CUR-PGM-TYP-CD = WSC-CH-TYP-CD
1815
            EXEC SQL
             SELECT COUNT(OFF_ID)
             INTO   :WSH-VENDOR-OFF-COUNT
             FROM RT_CNTY_OFF_XFER_CSLD
             WHERE OFF_ID            = :WSH-CUR-OFF-ID
               AND CHP_VEND_SW       = :WSC-YES
               AND EFF_BGN_DT       <=
                                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            END-EXEC
            EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                 IF WSH-VENDOR-OFF-COUNT > ZERO
                  SET WSS-MA-VENDOR-OFF TO TRUE
                 ELSE
                  SET WSS-NOT-MA-VENDOR-OFF TO TRUE
                 END-IF
              WHEN WSC-NOT-FOUND
                 SET WSS-NOT-MA-VENDOR-OFF TO TRUE
              WHEN OTHER
                SET LNK-CA0001S-FAILURE TO TRUE
                MOVE SQLCODE             TO LNK-SQL-CODE
                MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                INITIALIZE       LNK-SQL-TEXT
                                 WSL-MISC-ERROR-TXT
                                 LNK-AA0052C-CALWIN-ERROR-TEXT
                STRING 'Error reading RT_CNTY_OFF_XFER_CSLD sql1 '
                         WSH-CUR-CS-ID   DELIMITED BY SIZE
                         WSC-ASTERISK    DELIMITED BY SIZE

                         SQLERRM         DELIMITED BY SIZE
                         WSC-ASTERISK    DELIMITED BY SIZE

                         WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                         WSC-ASTERISK    DELIMITED BY SIZE

                         LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                         WSC-ASTERISK    DELIMITED BY SIZE

                         WSH-CURRENT-DT  DELIMITED BY SIZE
                         WSC-ASTERISK    DELIMITED BY SIZE
                INTO LNK-SQL-TEXT
                END-STRING

                MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
                SET WSL-CS               TO TRUE
                MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
                SET WSL-FATAL            TO TRUE
                PERFORM 90000-CLOSE
            END-EVALUATE
           END-IF

      * Check if AWDC is already assigned to AwDC vendor

1815       IF  WSS-AWDC
1815        EXEC SQL
1815         SELECT COUNT(OFF_ID)
1815         INTO   :WSH-VENDOR-OFF-COUNT
1815         FROM RT_CNTY_OFF_XFER_CSLD
1815         WHERE OFF_ID           = :WSH-CUR-OFF-ID
1815           AND AM_VEND_SW       = :WSC-YES
1815           AND EFF_BGN_DT       <=
1815                              TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
1815           AND NVL(EFF_END_DT, F_HIGH_DT()) >=
1815                              TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
1815        END-EXEC
1815        EVALUATE SQLCODE
1815          WHEN WSC-SQL-OK
1815             IF WSH-VENDOR-OFF-COUNT > ZERO
1815              SET WSS-MA-VENDOR-OFF TO TRUE
1815             ELSE
1815              SET WSS-NOT-MA-VENDOR-OFF TO TRUE
1815             END-IF
1815          WHEN WSC-NOT-FOUND
1815             SET WSS-NOT-MA-VENDOR-OFF TO TRUE
1815          WHEN OTHER
1815            SET LNK-CA0001S-FAILURE TO TRUE
1815            MOVE SQLCODE             TO LNK-SQL-CODE
1815            MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
1815                                     LNK-AA0052C-CALWIN-ERROR-CD
1815            INITIALIZE       LNK-SQL-TEXT
1815                             WSL-MISC-ERROR-TXT
1815                             LNK-AA0052C-CALWIN-ERROR-TEXT
1815            STRING 'Error reading RT_CNTY_OFF_XFER_CSLD sql2'
1815                     WSH-CUR-CS-ID   DELIMITED BY SIZE
1815                     WSC-ASTERISK    DELIMITED BY SIZE
1815
1815                     SQLERRM         DELIMITED BY SIZE
1815                     WSC-ASTERISK    DELIMITED BY SIZE
1815
1815                     WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
1815                     WSC-ASTERISK    DELIMITED BY SIZE
1815
1815                     LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
1815                     WSC-ASTERISK    DELIMITED BY SIZE
1815
1815                     WSH-CURRENT-DT  DELIMITED BY SIZE
1815                     WSC-ASTERISK    DELIMITED BY SIZE
1815            INTO LNK-SQL-TEXT
1815            END-STRING
1815
1815            MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
1815            SET WSL-CS               TO TRUE
1815            MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
1815            SET WSL-FATAL            TO TRUE
1815            PERFORM 90000-CLOSE
1815        END-EVALUATE
1815       END-IF
           .

      *****************************************************************
      * Para retrieves the xfer case load for the CHP+ vendor
      *****************************************************************
       10156-RETRIEVE-XFER-CSLD.
           MOVE '10156-RETRIEVE-XFER-CSLD' TO WSL-PARA-NAME
CR1815*
CR1815    IF WSH-CUR-PGM-TYP-CD = WSC-CH-TYP-CD
             EXEC SQL
              SELECT XFER_CSLD_ID
               INTO :WSH-VENDOR-XFER-CSLD
               FROM  RT_CNTY_OFF_XFER_CSLD
              WHERE OFF_ID            > :WSC-ZERO
              AND CHP_VEND_SW       = :WSC-YES
              AND XFER_CSLD_ID      > :WSC-ZERO
              AND EFF_BGN_DT        <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              END-EXEC
              EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-MULTIPLE-ROWS
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 SET LNK-CA0001S-FAILURE TO TRUE
                 MOVE SQLCODE             TO LNK-SQL-CODE
                 MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                 INITIALIZE       LNK-SQL-TEXT
                                  WSL-MISC-ERROR-TXT
                                  LNK-AA0052C-CALWIN-ERROR-TEXT
                 STRING 'Error reading RT_CNTY_OFF_XFER_CSLD sql1 '
                          WSH-CUR-CS-ID   DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          SQLERRM         DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CURRENT-DT  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE
                 INTO LNK-SQL-TEXT
                 END-STRING

                 MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
                 SET WSL-CS               TO TRUE
                 MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
                 SET WSL-FATAL            TO TRUE
                 PERFORM 90000-CLOSE
              END-EVALUATE
          END-IF

CR1815    IF WSS-AWDC
CR1815       EXEC SQL
CR1815        SELECT XFER_CSLD_ID
CR1815         INTO :WSH-VENDOR-XFER-CSLD
CR1815        FROM  RT_CNTY_OFF_XFER_CSLD
CR1815       WHERE OFF_ID          > :WSC-ZERO
CR1815        AND AM_VEND_SW       = :WSC-YES
CR1815        AND XFER_CSLD_ID     > :WSC-ZERO
CR1815        AND EFF_BGN_DT       <=
CR1815            TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
CR1815        AND NVL(EFF_END_DT, F_HIGH_DT()) >=
CR1815            TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
CR1815       END-EXEC
CR1815       EVALUATE SQLCODE
CR1815         WHEN WSC-SQL-OK
CR1815              CONTINUE
CR1815         WHEN WSC-MULTIPLE-ROWS
CR1815         WHEN WSC-NOT-FOUND
CR1815         WHEN OTHER
CR1815           SET LNK-CA0001S-FAILURE TO TRUE
CR1815           MOVE SQLCODE             TO LNK-SQL-CODE
CR1815           MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
CR1815                                    LNK-AA0052C-CALWIN-ERROR-CD
CR1815           INITIALIZE       LNK-SQL-TEXT
CR1815                            WSL-MISC-ERROR-TXT
CR1815                            LNK-AA0052C-CALWIN-ERROR-TEXT
CR1815           STRING 'Error reading RT_CNTY_OFF_XFER_CSLD sql2 '
CR1815                    WSH-CUR-CS-ID   DELIMITED BY SIZE
CR1815                    WSC-ASTERISK    DELIMITED BY SIZE
CR1815
CR1815                    SQLERRM         DELIMITED BY SIZE
CR1815                    WSC-ASTERISK    DELIMITED BY SIZE
CR1815
CR1815                    WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
CR1815                    WSC-ASTERISK    DELIMITED BY SIZE
CR1815
CR1815                    LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
CR1815                    WSC-ASTERISK    DELIMITED BY SIZE
CR1815
CR1815                    WSH-CURRENT-DT  DELIMITED BY SIZE
CR1815                    WSC-ASTERISK    DELIMITED BY SIZE
CR1815           INTO LNK-SQL-TEXT
CR1815           END-STRING
CR1815
CR1815           MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
CR1815           SET WSL-CS               TO TRUE
CR1815           MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
CR1815           SET WSL-FATAL            TO TRUE
CR1815           PERFORM 90000-CLOSE
CR1815       END-EVALUATE
CR1815     END-IF
           .
1815  ****************************************************************
1815  * Check if the id code for the AM program is AwDC
1815  ****************************************************************
1815   10157-CHECK-FOR-AWDC.
1815       MOVE '10157-CHECK-FOR-AWDC' TO WSL-PARA-NAME
1815
2413       IF LNK-CA0001S-OVR-RSN-CD = WSC-B2
2413          SET WSS-AWDC TO TRUE
2413       ELSE
2413          SET WSS-NOT-AWDC TO TRUE
2413       END-IF

           .
      ****************************************************************  G
      *** Retrieve Transfer Caseload for County                         G
      ****************************************************************  G
cr3212 10158-GET-XFER-CSLD-CNTY.
           MOVE '10158-GET-XFER-CSLD-CNTY' TO WSL-PARA-NAME
           INITIALIZE  WSH-CUR-XFER-CSLD
           EXEC SQL
              SELECT XFER_CSLD_ID
               INTO :WSH-CUR-XFER-CSLD
              FROM  RT_CNTY_OFF_XFER_CSLD
             WHERE OFF_ID          > :WSC-ZERO
              AND XFER_CSLD_ID     > :WSC-ZERO
              AND CNTY_CD          = :WSH-CNTY-CD
              AND EFF_BGN_DT       <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             END-EXEC
             EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-MULTIPLE-ROWS
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 SET LNK-CA0001S-FAILURE TO TRUE
                 MOVE SQLCODE             TO LNK-SQL-CODE
                 MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                 INITIALIZE       LNK-SQL-TEXT
                                  WSL-MISC-ERROR-TXT
                                  LNK-AA0052C-CALWIN-ERROR-TEXT
                 STRING 'Error reading RT_CNTY_OFF_XFER_CSLD cnty sql '
                          WSH-CUR-CS-ID   DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          SQLERRM         DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CURRENT-DT  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE
                 INTO LNK-SQL-TEXT
                 END-STRING

                 MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
                 SET WSL-CS               TO TRUE
                 MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
                 SET WSL-FATAL            TO TRUE
                 PERFORM 90000-CLOSE
             END-EVALUATE
           .
      ****************************************************************  G
      *** Retrieve Transfer Caseload for MASite                         G
      ****************************************************************  G
cr3212 10159-GET-XFER-CSLD-MASITE.
           MOVE '10159-GET-XFER-CSLD-MASITE' TO WSL-PARA-NAME
           INITIALIZE  WSH-CUR-XFER-CSLD
           EXEC SQL
             SELECT XFER_CSLD_ID
               INTO :WSH-CUR-XFER-CSLD
              FROM  RT_CNTY_OFF_XFER_CSLD
             WHERE OFF_ID          = :WSH-CUR-OFF-ID
              AND XFER_CSLD_ID     > :WSC-ZERO
              AND CNTY_CD          = :WSC-MASITE-CNTY-CD
              AND EFF_BGN_DT       <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-MULTIPLE-ROWS
               WHEN WSC-NOT-FOUND
      *select xfr caseload of chp vendor if ma site off is not updated
      * in the RT_CNTY_OFF_XFER_CSLD
                 EXEC SQL
                    SELECT
                        XFER_CSLD_ID
                    INTO
                        :WSH-CUR-XFER-CSLD
                    FROM
                        RT_CNTY_OFF_XFER_CSLD
                    WHERE
                        CNTY_CD    = :WSC-MASITE-CNTY-CD
                    AND CHP_VEND_SW  = :WSC-YES
                    AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                    AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

                END-EXEC
                EVALUATE SQLCODE
                 WHEN WSC-SQL-OK
                      CONTINUE
                 WHEN WSC-NOT-FOUND
                 WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                                              LNK-SQL-CODE
                   MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING XFER CSLD FOR CHP VENDOR'
                                           TO WSL-MISC-ERROR-TXT
                                              LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL           TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
                END-EVALUATE
               WHEN OTHER
                 SET LNK-CA0001S-FAILURE TO TRUE
                 MOVE SQLCODE             TO LNK-SQL-CODE
                 MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                 INITIALIZE       LNK-SQL-TEXT
                                  WSL-MISC-ERROR-TXT
                                  LNK-AA0052C-CALWIN-ERROR-TEXT
                 STRING 'Error reading RT_CNTY_OFF_XFER_CSLD masite sql'
                          WSH-CUR-CS-ID   DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          SQLERRM         DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE

                          WSH-CURRENT-DT  DELIMITED BY SIZE
                          WSC-ASTERISK    DELIMITED BY SIZE
                 INTO LNK-SQL-TEXT
                 END-STRING

                 MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT
                 SET WSL-CS               TO TRUE
                 MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
                 SET WSL-FATAL            TO TRUE
                 PERFORM 90000-CLOSE
           END-EVALUATE
           .
      ****************************************************************  G
      *** Check Employment Services Assignment parameters               G
      ****************************************************************  G
       10160-CHK-ES-ASSGN-PARM.
        MOVE '10160-CHK-ES-ASSGN-PARM' TO WSL-PARA-NAME

      * Validate the Employment Services Assignment Parameters

        IF  (LNK-CA0001S-CS-ID     = SPACES OR
            LNK-CA0001S-PGM-TYP-CD  = SPACES)

            STRING
              'Error in  Input Parm'     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-CS-ID            DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-PGM-TYP-CD     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING
            MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                      LNK-AA0052C-CALWIN-ERROR-CD
               MOVE 'CS_ID or PGM_TYP_CD' TO
                    LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        ELSE
            SET WSS-PROCESS-ES-ASSGN TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Check QC Assignment parameters                                G
      ****************************************************************  G
       10170-CHK-QC-ASSGN-PARM.
        MOVE '10170-CHK-QC-ASSGN-PARM' TO WSL-PARA-NAME

      * Validate the Quality Control Assignment Parameters

        IF  (LNK-CA0001S-CS-ID      = SPACES OR
            LNK-CA0001S-PGM-TYP-CD  = SPACES OR
            LNK-CA0001S-CSLD-ID     = ZEROES)

            MOVE LNK-CA0001S-CSLD-ID        TO WSH-CSLD-ID-NUM
            STRING
              'Error in  Input Parm'     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-CS-ID            DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              LNK-CA0001S-PGM-TYP-CD     DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
              WSH-CSLD-ID-NUM            DELIMITED BY SIZE
                    WSC-ASTERISK               DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING
            MOVE LNK-SQL-TEXT        TO WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE WSC-503                    TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
               MOVE 'CS_ID or PGM_TYP_CD or CSLD_ID'
                 TO LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        ELSE
            SET WSS-PROCESS-QC-ASSGN TO TRUE
        END-IF
        .


      ****************************************************************  G
      *** Check Override Assignment parameters                          G
      ****************************************************************  G
       10175-CHK-MA-XFER-PARM.
           MOVE '10175-CHK-MA-XFER-PARM' TO WSL-PARA-NAME

           IF LNK-CA0001S-CS-ID       = SPACES OR
              LNK-CA0001S-PGM-TYP-CD  = SPACES OR
              LNK-CA0001S-CNTY-OF-RES = SPACES

               MOVE "Error in Input Parm"  TO LNK-SQL-TEXT
                                              WSL-MISC-ERROR-TXT

               MOVE ZEROES                 TO LNK-SQL-CODE
                                              WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
               STRING
                  'CS_ID or PGM_TYP_CD or CNTY_CD '
                  DELIMITED BY SIZE,
               INTO LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
               SET LNK-CA0001S-FAILURE     TO TRUE
               SET WSL-FATAL               TO TRUE
               MOVE LNK-CA0001S-CS-ID      TO WSL-IDENTIFIER
               PERFORM 90000-CLOSE
           END-IF
           .


      ****************************************************************  G
      *** Check Override Assignment parameters                          G
      ****************************************************************  G
       10180-CHK-OR-ASSGN-PARM.
        MOVE '10180-CHK-OR-ASSGN-PARM' TO WSL-PARA-NAME

      * Validate the Override Assignment Parameters

           IF (LNK-CA0001S-CS-ID                 = SPACES OR
4012 **        LNK-CA0001S-PGM-TYP-CD            = SPACES OR
               LNK-CA0001S-CSLD-ID               = ZEROES OR
4012 **        LNK-CA0001S-UPD-DTM               = SPACES OR
               LNK-CA0001S-FETCH-DTM             = SPACES OR
4012 **        LNK-CA0001S-EFF-BGN-DT            = SPACES
4012           LNK-CA0001S-OR-SU-SI-PGM(WSC-ONE-NUM) = SPACES)

            MOVE "Error in Input Parm"  TO LNK-SQL-TEXT
                               WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
               STRING
                  'CS_ID or PGM_TYP_CD or CSLD_ID or UPD_DTM or'
                  DELIMITED BY SIZE,
                  'FETCH_DTM or EFF_BGN_DT'
                  DELIMITED BY SIZE
               INTO LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
             ELSE
            MOVE LNK-CA0001S-CSLD-ID TO WSH-CUR-CSLD-ID
            MOVE LNK-CA0001S-PGM-TYP-CD TO WSH-CUR-PGM-TYP-CD
            SET WSS-PROCESS-OR-ASSGN TO TRUE
            SET WSS-INTERFACE-TRIGGER TO TRUE
        END-IF
        .
      ****************************************************************
      *** Check Transfer to chp vendor transfer Caseload Parameter
      ****************************************************************
       10185-CHK-PE-XFER-PARM.
           MOVE '10185-CHK-PE-XFER-PARM' TO WSL-PARA-NAME

           IF LNK-CA0001S-CS-ID       = SPACES OR
              LNK-CA0001S-PGM-TYP-CD  = SPACES

               MOVE "Error in Input Parm"  TO LNK-SQL-TEXT
                                              WSL-MISC-ERROR-TXT

               MOVE ZEROES                 TO LNK-SQL-CODE
                                              WSL-ERROR-VALUE
               MOVE WSC-503                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
               STRING
                  'CS_ID or PGM_TYP_CD '
                  DELIMITED BY SIZE,
               INTO LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
               SET LNK-CA0001S-FAILURE     TO TRUE
               SET WSL-FATAL               TO TRUE
               MOVE LNK-CA0001S-CS-ID      TO WSL-IDENTIFIER
               PERFORM 90000-CLOSE
           END-IF
           .

      ****************************************************************     G
      *** Check Transfer to Closed Caseload Parameter               G
      ****************************************************************     G
       10190-CHK-CL-ASSGN-PARM.
        MOVE '10190-CHK-CL-ASSGN-PARM' TO WSL-PARA-NAME

      * Validate the Transfer to closed caseload Parameters

        IF LNK-CA0001S-CS-ID           = SPACES
            MOVE "Error in Input Parm"  TO LNK-SQL-TEXT
                               WSL-MISC-ERROR-TXT

            MOVE ZEROES             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
            MOVE WSC-503             TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
            MOVE "Case ID"             TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
            SET LNK-CA0001S-FAILURE        TO TRUE
            SET WSL-FATAL             TO TRUE
            MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
            PERFORM 90000-CLOSE
        ELSE
            MOVE LNK-CA0001S-CS-ID TO WSH-CUR-CS-ID
            SET WSS-PROCESS-CL-ASSGN TO TRUE
        END-IF
        .

      ****************************************************************     G
      *** Check Undo Transfer Parameter                         G
      ****************************************************************     G
       10195-CHK-UNDO-XFER-PARM.
         MOVE '10195-CHK-UNDO-XFER-PARM' TO WSL-PARA-NAME

      *Validate the Undo Transfer Parameters

        IF (LNK-CA0001S-CS-ID       = SPACES OR
            LNK-CA0001S-PGM-TYP-CD  = SPACES OR
            LNK-CA0001S-ASSGN-TO-CSLD = ZEROES OR
            LNK-CA0001S-UPD-DTM     = SPACES OR
            LNK-CA0001S-EFF-BGN-DT  = SPACES     OR
            LNK-CA0001S-LAST-UNDO-XFER = SPACES)

             MOVE 503          TO WSL-CALWIN-ERROR-CODE
                       LNK-AA0052C-CALWIN-ERROR-CD
             MOVE ZEROES      TO LNK-SQL-CODE, WSL-ERROR-VALUE
             MOVE 'ERROR IN UNDO TRANSFER PARAMETERS' TO
                  WSL-MISC-ERROR-TXT, LNK-SQL-TEXT
             SET WSL-FATAL     TO TRUE
             SET LNK-CA0001S-FAILURE TO TRUE
          SET WSL-FATAL            TO TRUE
          MOVE LNK-CA0001S-CS-ID    TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
           ELSE
             SET WSS-PROCESS-UNDO-XFER TO TRUE
          SET WSS-INTERFACE-TRIGGER TO TRUE
           END-IF
           .
      ****************************************************************  G
      *** Populate Reference Table                                      G
      ****************************************************************  G
       10200-POPULATE-REF-TBL.
        MOVE '10200-POPULATE-REF-TBL' TO WSL-PARA-NAME

      ** Populate Reference table for Processing

        PERFORM 10210-POPL-CNTY-PRC

        PERFORM 10225-POPL-LBR-AGMT-DATA
        .


      ****************************************************************  G
      *** Populate county process control parameters                    G
      ****************************************************************  G
       10210-POPL-CNTY-PRC.
        MOVE '10210-POPL-CNTY-PRC' TO WSL-PARA-NAME

        INITIALIZE WST-RT-CNTY-PRC-CTL

      *Get the county Process control Parameters
      *SQL-80

           EXEC SQL
            SELECT
             CNTY_PRC_CTL_CD
                  ,CTL_VAL
            INTO
             :WST-CNTY-PRC-CTL
            FROM
             RT_CNTY_PRC_CTL
            WHERE
              CNTY_PRC_CTL_CD IN ( :WSC-MATSPIN
                           ,:WSC-MATCULT
                           ,:WSC-MATLABR
                           ,:WSC-MATLANG
                           ,:WSC-GNRCSAS
                           ,:WSC-AUTCSAS
                           ,:WSC-NOCLMAT
                           ,:WSC-MATQMAX
                                       ,:WSC-ALBRKDN
                           ,:WSC-MATQOFF)
            AND EFF_BGN_DT        <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CTL-CD(1) <> SPACES
                 PERFORM 10220-SRCH-SET-CNTY-VAL
             ELSE
                 SET LNK-CA0001S-FAILURE TO TRUE
                 PERFORM 90000-CLOSE
             END-IF

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING RT_CNTY_PRC_CTL'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES                 TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
                SET WSL-FATAL             TO TRUE
                MOVE LNK-CA0001S-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .


      ****************************************************************  G
      *** Search set county values                                      G
      ****************************************************************  G
       10220-SRCH-SET-CNTY-VAL.
        MOVE '10220-SRCH-SET-CNTY-VAL' TO WSL-PARA-NAME

      * Set the county Control Parameters into the Local Variable

        PERFORM VARYING WSI-POP-TBL FROM 1 BY 1
               UNTIL WSI-POP-TBL > WSC-12

           EVALUATE WST-CTL-CD(WSI-POP-TBL) ALSO
                 WST-CTL-VAL(WSI-POP-TBL)

             WHEN      WSC-MATSPIN ALSO WSC-YES
                SET WSS-CNTY-PROC-SPL-IND-MTCH        TO TRUE

             WHEN      WSC-MATCULT ALSO WSC-YES
                SET WSS-CNTY-PROC-CULT-MTCH        TO TRUE

             WHEN      WSC-MATLABR ALSO WSC-YES
                SET WSS-CNTY-PROC-LABOR-MTCH        TO TRUE

             WHEN      WSC-MATLANG ALSO WSC-YES
                SET WSS-CNTY-PROC-LANG-MTCH        TO TRUE

             WHEN      WSC-GNRCSAS ALSO WSC-YES
                SET WSS-CNTY-GNR-CS-ASG        TO TRUE

             WHEN      WSC-AUTCSAS ALSO WSC-YES
                SET WSS-CNTY-AUTO-ASGN             TO TRUE

             WHEN      WSC-MATQMAX ALSO WSC-YES
                SET WSS-MATQMAX             TO TRUE

             WHEN      WSC-MATQOFF ALSO WSC-YES
                SET WSS-MATQOFF             TO TRUE

                   WHEN  WSC-NOCLMAT ALSO WSC-C
                SET WSS-NOCLMAT-CONTINUE        TO TRUE

                   WHEN  WSC-NOCLMAT ALSO WSC-D
                SET WSS-NOCLMAT-DUMMY             TO TRUE

                   WHEN  WSC-NOCLMAT ALSO WSC-E
                SET WSS-NOCLMAT-ERROR             TO TRUE

                    WHEN WSC-ALBRKDN ALSO WSC-YES
                   SET WSS-ALBRKDN                   TO TRUE


           END-EVALUATE

        END-PERFORM
        .

      ****************************************************************  G
      *** Populate labour agreement data                                G
      ****************************************************************  G
       10225-POPL-LBR-AGMT-DATA.
        MOVE '10225-POPL-LBR-AGMT-DATA' TO WSL-PARA-NAME

      *Get the Labor Agreement Parameters Values
      *SQL-90

           EXEC SQL
            SELECT
             CNSTRNT_CD
            ,VAL
            INTO
            :WST-LBR-AGMT-DTL
            FROM
             SE_LBR_AGMT_CNSTRNT
            WHERE
             CNSTRNT_CD  IN (:WSC-MAX-IN-WRKLOAD
                      ,:WSC-MAX-ON-WRKLOAD
                      ,:WSC-MAX-QC-CS-REVW
                      ,:WSC-BILNGL-CRDT-CD
                      ,:WSC-NON-ENG-CRDT-CD)
            AND EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

           EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CNSTRNT-CD(1) <> SPACES
                 PERFORM 10230-SET-LBR-AGMT-VAL
             ELSE
                 MOVE SQLCODE     TO LNK-SQL-CODE
                                  WSL-ERROR-VALUE
                 MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                         LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING SE_LBR_AGRMT_CNSTRNT' TO
                         WSL-MISC-ERROR-TXT
                         LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL     TO TRUE
                 MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
             END-IF
            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING SE_LBR_AGMT_CNSTRNT'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
           END-EVALUATE
        .

      ****************************************************************  G
      *** Set labour agreement value                                    G
      ****************************************************************  G
       10230-SET-LBR-AGMT-VAL.
        MOVE '10230-SET-LBR-AGMT-VAL' TO WSL-PARA-NAME

      * Set the Labor agreement Parameters into the Local Variable

        PERFORM VARYING WSI-POP-TBL FROM 1 BY 1
               UNTIL WSI-POP-TBL > WSC-5

           EVALUATE WST-CNSTRNT-CD(WSI-POP-TBL)
             WHEN WSC-MAX-IN-WRKLOAD
               MOVE WST-CNSTRNT-VAL(WSI-POP-TBL) TO
                     WSH-MAX-INTAKE-CR

             WHEN WSC-MAX-ON-WRKLOAD
               MOVE WST-CNSTRNT-VAL(WSI-POP-TBL) TO
                     WSH-MAX-ONGOING-CR

             WHEN WSC-MAX-QC-CS-REVW
               MOVE WST-CNSTRNT-VAL(WSI-POP-TBL) TO
                    WSH-MAX-QC-REVW-CNT

             WHEN WSC-BILNGL-CRDT-CD
               MOVE WST-CNSTRNT-VAL(WSI-POP-TBL) TO
                    WSH-BILNGL-CRDT-FCTR

             WHEN WSC-NON-ENG-CRDT-CD
               MOVE WST-CNSTRNT-VAL(WSI-POP-TBL) TO
                    WSH-NON-ENG-CRDT-FCTR

           END-EVALUATE

        END-PERFORM
        .

      ****************************************************************
      *** Determine if there are multiple MA Site counties           *
      ****************************************************************
       10250-GET-MASITE-CNTY.
        MOVE '10250-GET-MASITE-CNTY' TO WSL-PARA-NAME

      * Check to see if we already have the county/office from the window

        IF  LNK-CA0001S-CNTY-OF-RES = SPACES
        AND LNK-CA0001S-OFF-OF-RES = ZEROES

           EXEC SQL

          SELECT
              CNTY_CD
          INTO
              :WSH-MASITE-CNTY-CD
          FROM 
              RT_CNTY
          WHERE
              MA_SITE_SW = :WSC-YES
          AND EFF_BGN_DT <= 
              TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
          AND NVL(EFF_END_DT, F_HIGH_DT()) >= 
              TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')

           END-EXEC

           EVALUATE SQLCODE
          WHEN WSC-SQL-OK
              PERFORM 10255-GET-MASITE-OFF
          WHEN WSC-MULTIPLE-ROWS
              SET WSS-MULT-MASITE-OFFS  TO TRUE
          WHEN OTHER
               MOVE SQLCODE     TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                     MOVE WSC-513       TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
               MOVE 'ERROR SELECTING RT_CNTY'
                            TO WSL-MISC-ERROR-TXT
                             LNK-SQL-TEXT
               MOVE SPACES     TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
               SET LNK-CA0001S-FAILURE     TO TRUE
               MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
               SET WSL-CS                 TO TRUE
               SET WSL-FATAL            TO TRUE
               PERFORM 90000-CLOSE
            END-EVALUATE

        ELSE

            MOVE LNK-CA0001S-CNTY-OF-RES TO WSH-MASITE-CNTY-CD
            MOVE LNK-CA0001S-OFF-OF-RES  TO WSH-MASITE-OFF
            SET  WSS-ONE-MASITE-OFF      TO TRUE

        END-IF
        .

      ****************************************************************
      *** Get the MA Site office for the MA Site county.           
      ****************************************************************
       10255-GET-MASITE-OFF.
        MOVE '10255-GET-MASITE-OFF' TO WSL-PARA-NAME

           EXEC SQL

          SELECT
              OFF_ID
          INTO
              :WSH-MASITE-OFF
          FROM
              RT_OFF
          WHERE
              CNTY_CD = :WSH-MASITE-CNTY-CD
          AND EFF_BGN_DT <=
              TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
          AND NVL(EFF_END_DT,F_HIGH_DT()) >=
              TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')

           END-EXEC

        EVALUATE SQLCODE
          WHEN WSC-SQL-OK
               SET WSS-ONE-MASITE-OFF TO TRUE
          WHEN WSC-MULTIPLE-ROWS
               SET WSS-MULT-MASITE-OFFS TO TRUE
          WHEN OTHER
               MOVE SQLCODE     TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                     MOVE WSC-513       TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
               MOVE 'ERROR SELECTING RT_OFF'
                            TO WSL-MISC-ERROR-TXT
                             LNK-SQL-TEXT
               MOVE SPACES     TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
               SET LNK-CA0001S-FAILURE     TO TRUE
               MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
               SET WSL-CS                 TO TRUE
               SET WSL-FATAL            TO TRUE
               PERFORM 90000-CLOSE
        END-EVALUATE
        .

4012  ******************************************************************
      * This para is for Suggest Inquiry (SI) process. It loads the
      * caseload table prior to selecting the best caseload
      * This para reads all the user/caseload combination for each prog-
      * ram and selects the common caseload among all the programs.
      * If there is only one program it selects all the user/caseload
      * combination. The selected user/caseload combination is stored
      * into the Final Caseload/User Table. The Final Caseload/User
      * records is then passed on to search best caseload process
      ******************************************************************
       10260-CHK-PGM-LOAD-USR-CSLD.
           MOVE '10260-CHK-PGM-LOAD-USR-CSLD' TO WSL-PARA-NAME

           INITIALIZE WST-SI-MAIN-TABLE
                      WST-SI-1STPGM-TABLE
                      WST-SI-FINAL-TABLE
                      WSI-SI-PGM-IDX
                      WSI-SI-MAIN-IDX
                      WSI-SI-1STPGM-IDX
                      WSI-SI-FINAL-IDX

           MOVE ZEROES TO WSI-SI-LAST-MAIN-IDX

           PERFORM VARYING WSI-SI-PGM-IDX  FROM WSC-ONE-NUM
            BY WSC-ONE-NUM UNTIL
                           WSI-SI-PGM-IDX >  WSC-20    OR
      *                    LNK-CA0001S-OR-SU-SI-PGM(WSI-SI-PGM-IDX) =
      *                    SPACES
                           WSI-SI-PGM-IDX > LNK-CA0001S-TOTAL-MASS-XFERS

      * Check if the cs pgm exists
              MOVE LNK-CA0001S-OR-SU-SI-PGM(WSI-SI-PGM-IDX) TO
                   WSH-CUR-PGM-TYP-CD

              PERFORM 10265-CHK-PGM-EXISTS

      * If case pgm exists populate main table .
              IF WSS-CS-PGM-EXISTS
                 SET WSS-CASELOAD-NOT-EXISTS TO TRUE
                 PERFORM 10270-LOAD-USER-CASELOAD
                 IF WSS-CASELOAD-EXISTS
                  IF WSI-SI-PGM-IDX  = WSC-ONE-NUM
      *Populate 1st Pgm table only for the first program in the array
                    MOVE WST-SI-FETCH-TABLE TO WST-SI-MAIN-TABLE
                                               WST-SI-1STPGM-TABLE

                    IF SQLERRD(3)>100
                       COMPUTE WSI-SI-LAST-MAIN-IDX = WSC-100
                    ELSE
                       MOVE SQLERRD(3) TO  WSI-SI-LAST-MAIN-IDX
                    END-IF

                  ELSE

                    PERFORM VARYING WSI-SI-FETCH-IDX FROM WSC-ONE-NUM BY
                                                          WSC-ONE-NUM
                      UNTIL            WSI-SI-FETCH-IDX > WSC-100  OR
                          WST-SI-FETCH-PGM-TYP-CD(WSI-SI-FETCH-IDX) =
                                        SPACES                     OR
                                      WSI-SI-LAST-MAIN-IDX  > WSC-500
                       COMPUTE  WSI-SI-LAST-MAIN-IDX =
                                WSI-SI-LAST-MAIN-IDX + WSC-ONE-NUM
                       MOVE WST-SI-FETCH-DATA(WSI-SI-FETCH-IDX)  TO
                            WST-SI-MAIN-DATA(WSI-SI-LAST-MAIN-IDX)

                   END-PERFORM
                  END-IF
                 END-IF
              END-IF

           END-PERFORM

           MOVE ZEROS  TO  WSI-SI-FINAL-IDX

           PERFORM VARYING WSI-SI-1STPGM-IDX
                      FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
                           WSI-SI-1STPGM-IDX  >  WSC-100    OR
                           WST-SI-1STPGM-PGM-TYP-CD(WSI-SI-1STPGM-IDX) =
                           SPACES
              SET WSS-NO-SKIP-PGM-LOOP TO TRUE
              PERFORM VARYING WSI-SI-PGM-IDX
                      FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
                      WSI-SI-PGM-IDX  >  WSC-20    OR
      *                       LNK-CA0001S-OR-SU-SI-PGM(WSI-SI-PGM-IDX) =
      *                       SPACES
                      WSI-SI-PGM-IDX > LNK-CA0001S-TOTAL-MASS-XFERS OR
                      WSS-SKIP-PGM-LOOP
                   SET WSI-MAIN-TBL-IDX TO WSC-ONE-NUM
                   SEARCH WST-SI-MAIN-DATA
                   AT END
                      SET WSS-SKIP-PGM-LOOP TO TRUE
                   WHEN
                      WST-SI-MAIN-PGM-TYP-CD(WSI-MAIN-TBL-IDX) =
                      LNK-CA0001S-OR-SU-SI-PGM(WSI-SI-PGM-IDX)   AND
                      WST-SI-MAIN-USR-ID(WSI-MAIN-TBL-IDX)     =
                      WST-SI-1STPGM-USR-ID(WSI-SI-1STPGM-IDX)    AND
                      WST-SI-MAIN-CSLD-ID(WSI-MAIN-TBL-IDX)    =
                      WST-SI-1STPGM-CSLD-ID(WSI-SI-1STPGM-IDX)
                     CONTINUE
                   END-SEARCH
              END-PERFORM

              IF WSS-NO-SKIP-PGM-LOOP
      *    Search if already exist in Final Caseload Table
      *    If found do not do anything
      *    If not found increment subscript and add the caseload/user
                   SET WSI-FINAL-TBL-IDX TO WSC-ONE-NUM
                   SEARCH WST-SI-FINAL-DATA
                   AT END
      *    Add record to the last row of Final Caseload Array
                    COMPUTE WSI-SI-FINAL-IDX =
                            WSI-SI-FINAL-IDX + WSC-ONE-NUM
                    MOVE WST-SI-1STPGM-USR-ID(WSI-SI-1STPGM-IDX)  TO
                         WST-SI-FINAL-USR-ID(WSI-SI-FINAL-IDX)
                    MOVE WST-SI-1STPGM-CSLD-ID(WSI-SI-1STPGM-IDX) TO
                         WST-SI-FINAL-CSLD-ID(WSI-SI-FINAL-IDX)
                   WHEN
                      WST-SI-FINAL-USR-ID(WSI-FINAL-TBL-IDX)     =
                      WST-SI-1STPGM-USR-ID(WSI-SI-1STPGM-IDX)    AND
                      WST-SI-FINAL-CSLD-ID(WSI-FINAL-TBL-IDX)    =
                      WST-SI-1STPGM-CSLD-ID(WSI-SI-1STPGM-IDX)
                     CONTINUE
                   END-SEARCH
              END-IF
           END-PERFORM
           .
      ****************************************************************  G
      *** Check Case pgm Existence                                      G
      ****************************************************************  G
       10265-CHK-PGM-EXISTS.
           MOVE '10265-CHK-PGM-EXISTS' TO WSL-PARA-NAME

          INITIALIZE SQLCA
      ** This select checks the existence of Case and Program Type Code
      *  in the Case Program Entity
      * SQL-10260

           EXEC SQL
               SELECT
                 A.CS_ID
                ,A.PGM_TYP_CD
                ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
                ,NVL(CSLD_ID, 0)
                ,PGM_STS_CD
                ,TO_CHAR(A.UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
                ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
           INTO
                :WSD-CS-PGM.WSD-CS-ID
               ,:WSD-CS-PGM.WSD-PGM-TYP-CD
               ,:WSD-CS-PGM.WSD-EFF-BGN-DT
               ,:WSD-CS-PGM.WSD-CSLD-ID
               ,:WSD-CS-PGM.WSD-PGM-TYP-CD
               ,:WSD-CS-PGM.WSD-UPD-DTM
               ,:WSD-FETCH-DTM
           FROM
                CS_PGM   A,
                CS_PGM_K B
           WHERE
                A.CS_ID = :WSH-CUR-CS-ID
            AND A.PGM_TYP_CD = :WSH-CUR-PGM-TYP-CD
            AND A.CS_ID = B.CS_ID
            AND A.PGM_TYP_CD = B.PGM_TYP_CD
            AND A.EFF_BGN_DT = B.LTST_EFF_BGN_DT
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   SET WSS-CS-PGM-EXISTS TO TRUE

               WHEN WSC-NOT-FOUND
                   SET WSS-CS-PGM-NOT-EXISTS   TO TRUE
                   SET LNK-CA0001S-FAILURE     TO TRUE
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE  WSC-513              TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD

                   INITIALIZE LNK-SQL-TEXT
                              WSL-MISC-ERROR-TXT
                              LNK-AA0052C-CALWIN-ERROR-TEXT

                   STRING 'Error in CS_PGM_X*' DELIMITED BY SIZE

                         WSH-CUR-CS-ID             DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         LNK-CA0001S-PGM-STS-CD    DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         WSH-CURRENT-DT            DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE
                   INTO LNK-SQL-TEXT
                   END-STRING

                   MOVE LNK-SQL-TEXT         TO WSL-MISC-ERROR-TXT
                   SET WSL-CS                TO TRUE
                   MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
                   SET WSL-FATAL             TO TRUE
                   PERFORM 90000-CLOSE

               WHEN OTHER
                   SET LNK-CA0001S-FAILURE     TO TRUE
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD

                   INITIALIZE LNK-SQL-TEXT
                              WSL-MISC-ERROR-TXT
                              LNK-AA0052C-CALWIN-ERROR-TEXT

                   STRING 'Error in CS_PGM_Y' DELIMITED BY SIZE

                         WSH-CUR-CS-ID             DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         SQLERRM                   DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         LNK-CA0001S-PGM-STS-CD    DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE

                         WSH-CURRENT-DT            DELIMITED BY SIZE
                         WSC-ASTERISK              DELIMITED BY SIZE
                   INTO LNK-SQL-TEXT
                   END-STRING

                   MOVE LNK-SQL-TEXT         TO WSL-MISC-ERROR-TXT
                   SET WSL-CS                TO TRUE
                   MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE

           END-EVALUATE
           .

      ****************************************************************  G
      *** populate user/caseload for each program                       G
      ****************************************************************  G
       10270-LOAD-USER-CASELOAD.
           MOVE '10270-LOAD-USER-CASELOAD' TO WSL-PARA-NAME

           INITIALIZE WSI-SI-FETCH-IDX
                      WST-SI-FETCH-TABLE

           IF WSS-CS-SPL-IND-EXISTS

              EXEC SQL
               SELECT UNIQUE
                      B.PGM_TYP_CD
                     ,A.USR_ID
                     ,A.CSLD_ID
                 INTO :WST-SI-FETCH-DATA
                 FROM SE_CSLD_PRM_USR   A
                     ,SE_CSLD_PGM_TYP   B
                     ,SE_CSLD           C
                     ,SE_USR_UNT_OFF    D
                     ,SE_USR            E
                     ,SE_CSLD_PRM_USR_K F
                     ,RT_PGM            P
                WHERE P.PGM_CD         = :WSH-CUR-PGM-TYP-CD
                  AND P.EFF_BGN_DT      <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND B.PGM_TYP_CD     = P.CS_ASG_PGM
                  AND A.CSLD_ID        = B.CSLD_ID
                  AND A.EFF_BGN_DT      <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND A.EFF_BGN_DT = F.LTST_EFF_BGN_DT
                  AND A.CSLD_ID = F.CSLD_ID
                  AND E.USR_ID          = A.USR_ID
                  AND NVL(E.OUTSTN_USR_SW, :WSC-NO) <> :WSC-YES
                  AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                       NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                               AND E.NOT_ON_ASG_TO_DT)
                       OR E.NOT_ON_ASG_FRM_DT IS NULL
                       OR E.NOT_ON_ASG_TO_DT IS NULL
                      )
                  AND C.CSLD_ID      = B.CSLD_ID
                  AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
                  AND C.HAS_CS_SW    = :WSC-YES
                  AND D.USR_ID       = E.USR_ID
                  AND D.USR_ID       = A.USR_ID
                  AND D.PRM_SW       = :WSC-YES
                  AND D.OFF_ID       = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
                  AND C.OFF_ID       = D.OFF_ID
                  AND A.USR_ID      <> RTRIM(:WSH-NOT-THIS-USR-ID)
                  AND EXISTS
                      (SELECT
                           Y.CSLD_ID
                       FROM
                           SE_CSLD_CHAR Y
                           ,RT_SPL_CHAR Z
                       WHERE
                           Z.CS_ASGN_SW    = :WSC-YES
                       AND Y.CSLD_ID       = A.CSLD_ID
                       AND Y.CHAR_NM_CD    = Z.SPL_CHAR_CD
                       AND Z.EFF_BGN_DT        <=
                           TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                       AND NVL(Z.EFF_END_DT, F_HIGH_DT()) >=
                           TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                       AND Y.CHAR_NM_CD IN
                           (SELECT
                               X.SITN_TYP_CD
                           FROM
                               CS_SPL_SITN X
                               ,RT_SPL_CHAR W
                           WHERE
                               X.CS_ID             = :WSH-CUR-CS-ID
                           AND X.EFF_BGN_DT        <=
                               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                           AND NVL(X.EFF_END_DT, F_HIGH_DT()) >=
                               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                           AND NVL(F_HIGH_DT(),X.EFF_END_DT)
                                                   <> X.EFF_BGN_DT
                           AND X.SITN_TYP_CD       = W.SPL_CHAR_CD
                           AND W.CS_ASGN_SW        = :WSC-YES
                           AND W.EFF_BGN_DT        <=
                               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                           AND NVL(W.EFF_END_DT, F_HIGH_DT()) >=
                               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                           AND NVL(W.EFF_END_DT, F_HIGH_DT()) <>
                               W.EFF_BGN_DT

                           )
                       )
              END-EXEC

              EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-NOT-FOUND
                   IF WST-SI-FETCH-CSLD-ID(1) <> WSC-ZERO
                       SET WSS-CASELOAD-EXISTS TO TRUE
                   ELSE
                       SET WSS-CASELOAD-NOT-EXISTS TO TRUE
                   END-IF

               WHEN OTHER
                   MOVE SQLCODE                 TO LNK-SQL-CODE
                                                   WSL-ERROR-VALUE
                   MOVE WSC-513                 TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   MOVE 'ERROR SELECTING POTENTIAL SPL CASELOADS'
                                                TO WSL-MISC-ERROR-TXT
                                                   LNK-SQL-TEXT
                   SET LNK-CA0001S-FAILURE      TO TRUE
                   SET WSL-FATAL                TO TRUE
                   MOVE WSH-CUR-CS-ID           TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
              END-EVALUATE

           ELSE

              EXEC SQL
               SELECT UNIQUE
                      B.PGM_TYP_CD
                     ,A.USR_ID
                     ,A.CSLD_ID
                 INTO :WST-SI-FETCH-DATA
                 FROM SE_CSLD_PRM_USR  A
                     ,SE_CSLD_PGM_TYP  B
                     ,SE_CSLD          C
                     ,SE_USR_UNT_OFF   D
                     ,SE_USR           E
                     ,RT_PGM           P
                WHERE P.PGM_CD         = :WSH-CUR-PGM-TYP-CD
                  AND P.EFF_BGN_DT      <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND B.PGM_TYP_CD     = P.CS_ASG_PGM
                  AND A.CSLD_ID        = B.CSLD_ID
                  AND A.EFF_BGN_DT      <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND E.USR_ID          = A.USR_ID
                  AND NVL(E.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
                  AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                       NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                               AND E.NOT_ON_ASG_TO_DT)
                       OR E.NOT_ON_ASG_FRM_DT IS NULL
                       OR E.NOT_ON_ASG_TO_DT IS NULL
                      )
                  AND C.CSLD_ID      = B.CSLD_ID
                  AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
                  AND C.HAS_CS_SW    = :WSC-YES
                  AND D.USR_ID       = E.USR_ID
                  AND D.USR_ID       = A.USR_ID
                  AND D.PRM_SW       = :WSC-YES
                  AND D.OFF_ID       = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
                  AND C.OFF_ID       = D.OFF_ID
                  AND A.USR_ID      <> RTRIM(:WSH-NOT-THIS-USR-ID)
             END-EXEC

             EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-NOT-FOUND
                   IF WST-SI-FETCH-CSLD-ID(1) <> WSC-ZERO
                       SET WSS-CASELOAD-EXISTS TO TRUE
                   ELSE
                       SET WSS-CASELOAD-NOT-EXISTS TO TRUE
                   END-IF

               WHEN OTHER
                   MOVE SQLCODE                 TO LNK-SQL-CODE
                                                   WSL-ERROR-VALUE
                   MOVE WSC-513                 TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   MOVE 'ERROR SELECTING POTENTIAL CASELOADS'
                                                TO WSL-MISC-ERROR-TXT
                                                   LNK-SQL-TEXT
                   SET LNK-CA0001S-FAILURE      TO TRUE
                   SET WSL-FATAL                TO TRUE
                   MOVE WSH-CUR-CS-ID           TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
             END-EVALUATE

           END-IF
           .


      ****************************************************************  G
      *** Check Case Existence                                          G
      ****************************************************************  G
       10300-CHK-CASE-EXIST.
        MOVE '10300-CHK-CASE-EXIST' TO WSL-PARA-NAME

        INITIALIZE WSD-CS
                      SQLCA

      ** This select checks the existence of the Case in the Case Entity
      ** SQL-100

           EXEC SQL
            SELECT
             CS_ID
            INTO
             :WSD-CS.WSD-CS-ID
            FROM
             CS 
            WHERE
               CS_ID        = :WSH-CUR-CS-ID
           AND EFF_BGN_DT        <=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND NVL(EFF_END_DT, F_HIGH_DT()) >=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-CASE-EXISTS TO TRUE

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING CS'   TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             MOVE SPACES                 TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
             SET WSL-CS                 TO TRUE
             SET WSL-FATAL            TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .


      ****************************************************************  G
      *** Get Current Caseload ID                                       G
      ****************************************************************  G
       10305-GET-CUR-CSLD-ID.
        MOVE '10305-GET-CUR-CSLD-ID' TO WSL-PARA-NAME

        INITIALIZE SQLCA                    

      ** This select checks the existence of the Case in the Case Entity
      ** SQL-100

           EXEC SQL
            SELECT
             A.CSLD_ID
            INTO
             :WSH-CUR-CSLD-ID
            FROM
             CS_PGM A
            WHERE
               A.CS_ID        = :WSH-CUR-CS-ID
              AND A.PGM_TYP_CD  = :LNK-CA0001S-PGM-TYP-CD
           AND A.EFF_BGN_DT        <=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
                   CONTINUE

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING CS_PGM'   TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             MOVE SPACES                 TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
             SET WSL-CS                 TO TRUE
             SET WSL-FATAL            TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Check Caseload Existence                                      G
      ****************************************************************  G
       10310-CHK-CSLD-EXIST.
        MOVE '10310-CHK-CSLD-EXIST' TO WSL-PARA-NAME

        INITIALIZE SQLCA
        SET WSS-TEST-CSLD-PRM-USR-NO TO TRUE

      ** This select checks the existence of Caseload in the Caseload
      *        Entity
      ** SQL-110

           EXEC SQL
            SELECT
             A.CSLD_ID
            ,RTRIM(B.USR_ID)
                  
            INTO
             :WSD-SE-CSLD.WSD-CSLD-ID
            ,:WSH-CSLD-WRKR
            FROM
             SE_CSLD A
            ,SE_CSLD_PRM_USR B
            WHERE
             A.CSLD_ID  = :WSH-CUR-CSLD-ID
            AND A.CSLD_ID  = B.CSLD_ID
            AND B.EFF_BGN_DT        <=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-CASELOAD-EXISTS TO TRUE
            WHEN WSC-NOT-FOUND
             SET WSS-TEST-CSLD-PRM-USR TO TRUE
            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING SE_CSLD, SE_CSLD_PRM_USR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE

        IF WSS-TEST-CSLD-PRM-USR
           EXEC SQL
            SELECT
             A.CSLD_ID
            ,RTRIM(B.USR_ID)
                  
            INTO
             :WSD-SE-CSLD.WSD-CSLD-ID
            ,:WSH-CSLD-WRKR
            FROM
             SE_CSLD A
            ,SE_CSLD_PRM_USR B
            WHERE
             A.CSLD_ID  = :WSH-CUR-CSLD-ID
            AND A.CSLD_ID  = B.CSLD_ID
            AND B.EFF_BGN_DT <= 
              TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.EFF_BGN_DT       IN
             (SELECT MAX(C.EFF_BGN_DT)
              FROM   SE_CSLD_PRM_USR C
              WHERE  C.CSLD_ID = :WSH-CUR-CSLD-ID)
           END-EXEC

          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-CASELOAD-EXISTS TO TRUE

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING SE_CSLD, SE_CSLD_PRM_USR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
          END-EVALUATE
        END-IF
        .

      ****************************************************************  G
      *** Get the office name for error messaging                       G
      ****************************************************************  G
       10315-GET-OFFICE-NM.
        MOVE '10315-GET-OFFICE-NM' TO WSL-PARA-NAME

        INITIALIZE      SQLCA
                 WSH-OFF-NM

      *DACR4501 - DON'T GIVE FATAL ERROR IF OFF NAME NOT FOUND

           IF WSH-OFF-ID-TO-GET-NM = ZEROES
          MOVE LNK-CA0001S-OFF-ID TO WSH-OFF-ID-TO-GET-NM
        END-IF

           EXEC SQL
            SELECT
             RTRIM(OFF_NM)
            INTO
             :WSH-OFF-NM
            FROM
             RT_OFF
            WHERE
             OFF_ID = :WSH-OFF-ID-TO-GET-NM
        END-EXEC

      *IF THE OFFICE NAME WASN'T FOUND, USE THE OFF-ID IN THE ERROR MSG

        IF WSH-OFF-NM = SPACES
          MOVE WSH-OFF-ID-TO-GET-NM TO WSH-OFF-NM
        END-IF
        .

      ****************************************************************  G
      *** Get the county name for error messaging                       G
      ****************************************************************  G
       10318-GET-COUNTY-NM.
        MOVE '10318-GET-COUNTY-NM' TO WSL-PARA-NAME

        INITIALIZE      SQLCA
                 WSH-CNTY-NM

           IF WSH-CNTY-CD-TO-GET-NM = SPACES
          MOVE 'COULD NOT DETERMINE COUNTY'
               TO WSH-CNTY-NM
        ELSE

             EXEC SQL
            SELECT
             RTRIM(CNTY_NM)
            INTO
             :WSH-CNTY-NM
            FROM
             RT_CNTY
            WHERE
             CNTY_CD = :WSH-CNTY-CD-TO-GET-NM
          END-EXEC

      *IF THE COUNTY NAME WASN'T FOUND, USE THE COUNTY CODE IN THE ERROR MSG

           IF WSH-CNTY-NM = SPACES
            MOVE WSH-CNTY-CD-TO-GET-NM TO WSH-CNTY-NM
           END-IF

        END-IF
        .

      ****************************************************************  G
      *** Check Case Special Indicator existence                        G
      ****************************************************************  G
       10320-CHK-CS-SPL-IND-EXIST.
        MOVE '10320-CHK-CS-SPL-IND-EXIST' TO WSL-PARA-NAME
            
      ** (This select checks the existence of any Special Indicators for
      *        the case.  This Sequel is required for the processing the
      *        Match Characteristics Logic or not)
      ** SQL-120


        INITIALIZE SQLCA, WSH-CS-SPL-SITN-COUNT

           EXEC SQL
               SELECT
                   COUNT(C.SITN_TYP_CD)
               INTO
                   :WSH-CS-SPL-SITN-COUNT
               FROM
                   CS_SPL_SITN C
                   ,RT_SPL_CHAR D
               WHERE
                   C.CS_ID           = :WSH-CUR-CS-ID
               AND C.EFF_BGN_DT      <=
                   TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                   TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(C.EFF_END_DT, F_HIGH_DT()) <>
                       C.EFF_BGN_DT
               AND C.SITN_TYP_CD   = D.SPL_CHAR_CD
               AND D.CS_ASGN_SW    = :WSC-YES
               AND D.EFF_BGN_DT    <=
                   TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
               AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                   TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')  
           END-EXEC

        EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   IF WSH-CS-SPL-SITN-COUNT > ZERO
                 SET WSS-CS-SPL-IND-EXISTS TO TRUE
             ELSE
                 SET WSS-CS-SPL-IND-NOT-EXISTS TO TRUE
             END-IF

            WHEN OTHER
                       MOVE SQLCODE                 TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
      *             MOVE 'ERROR SELECTING CS_SPL_SITN, RT_SPL_CHAR'
                MOVE SQLERRM    TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Check Case Program Existence                                  G
      ****************************************************************  G
       10330-CHK-CS-PGM-EXIST.
        MOVE '10330-CHK-CS-PGM-EXIST' TO WSL-PARA-NAME

          INITIALIZE SQLCA
      ** This select checks the existence of Case and Program Type Code
      *      in the Case Program Entity
      * SQL-130
           
 
           EXEC SQL
               SELECT
                 CS_ID
                ,PGM_TYP_CD
           INTO
                :WSD-CS-PGM.WSD-CS-ID
               ,:WSD-CS-PGM.WSD-PGM-TYP-CD
           FROM
                CS_PGM
           WHERE
                CS_ID = :WSH-CUR-CS-ID
              AND PGM_TYP_CD = :WSH-CUR-PGM-TYP-CD
              AND PGM_STS_CD = :LNK-CA0001S-PGM-STS-CD   
              AND EFF_BGN_DT            <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')   
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-CS-PGM-EXISTS TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-CS-PGM-NOT-EXISTS   TO TRUE
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE  WSC-513              TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE LNK-SQL-TEXT
                     WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT

             STRING 'Error in CS_PGM1*' DELIMITED BY SIZE

                WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
                         
                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
             SET WSL-CS               TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             SET WSL-FATAL          TO TRUE
             PERFORM 90000-CLOSE

            WHEN OTHER
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE LNK-SQL-TEXT
                     WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT

             STRING 'Error in CS_PGM2*' DELIMITED BY SIZE

                WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                         SQLERRM                   DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
             SET WSL-CS               TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE

        END-EVALUATE      
        .

      ****************************************************************  G
      *** Check Case Program Existence - Get pgm_sts_cd                 G
      ****************************************************************  G
       10340-GET-PGM-STS-CD.
        MOVE '10340-GET-PGM-STS-CD' TO WSL-PARA-NAME

        INITIALIZE WSH-PGM-TYP-CD-FETCH

          INITIALIZE SQLCA
      ** This select checks the existence of Case and Program Type Code
      *      in the Case Program Entity
      * SQL-130
       
           IF WSH-CUR-PGM-TYP-CD <> WSH-CUR-PGM-TYP-CD-TBL
             IF WSS-MT-TYPES-ASGN
                   MOVE WSH-CUR-PGM-TYP-CD-TBL TO WSH-PGM-TYP-CD-FETCH
             ELSE
                    IF WSH-CUR-PGM-TYP-CD = SPACES
                   MOVE WSH-CUR-PGM-TYP-CD-TBL TO WSH-PGM-TYP-CD-FETCH
                END-IF
             IF WSH-CUR-PGM-TYP-CD-TBL = SPACES
                       MOVE WSH-CUR-PGM-TYP-CD TO WSH-PGM-TYP-CD-FETCH
                    END-IF
             END-IF
           ELSE
                 MOVE WSH-CUR-PGM-TYP-CD TO WSH-PGM-TYP-CD-FETCH
           END-IF
 
           EXEC SQL
           SELECT
             PGM_STS_CD
           INTO
            :LNK-CA0001S-PGM-STS-CD
           FROM
                CS_PGM
           WHERE
                CS_ID = :WSH-CUR-CS-ID
              AND PGM_TYP_CD = :WSH-PGM-TYP-CD-FETCH
              AND EFF_BGN_DT            <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')  
           END-EXEC

        EVALUATE SQLCODE
         WHEN WSC-SQL-OK
           CONTINUE

            WHEN WSC-NOT-FOUND
           SET WSS-CS-PGM-NOT-EXISTS   TO TRUE
           SET LNK-CA0001S-FAILURE     TO TRUE
           MOVE SQLCODE                 TO LNK-SQL-CODE
                              WSL-ERROR-VALUE
              MOVE  WSC-513              TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD

              INITIALIZE LNK-SQL-TEXT
                WSL-MISC-ERROR-TXT
                LNK-AA0052C-CALWIN-ERROR-TEXT

            STRING 'Error Getting PGM_STS_CD CS_PGM*' DELIMITED BY SIZE

                WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
                         
                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
           END-STRING

           MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
           SET WSL-CS               TO TRUE
           MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
           SET WSL-FATAL               TO TRUE
           PERFORM 90000-CLOSE

            WHEN OTHER
           SET LNK-CA0001S-FAILURE     TO TRUE
           MOVE SQLCODE                 TO LNK-SQL-CODE
                           WSL-ERROR-VALUE
           MOVE      WSC-513           TO WSL-CALWIN-ERROR-CODE
                    LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE LNK-SQL-TEXT
                 WSL-MISC-ERROR-TXT
                LNK-AA0052C-CALWIN-ERROR-TEXT

          STRING 'Error Getting PGM_STS_CD CS_PGM*' DELIMITED BY SIZE

                      WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                         SQLERRM                   DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
           END-STRING

           MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
           SET WSL-CS               TO TRUE
           MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
           SET WSL-FATAL               TO TRUE
           PERFORM 90000-CLOSE

        END-EVALUATE      
        .

      ****************************************************************  G
      *** Check Case Program Existence - Get OVR_RSN_CD                 G
      ****************************************************************  G
       10350-GET-OVR-RSN-CD.
        MOVE '10350-GET-OVR-RSN-CD' TO WSL-PARA-NAME

          INITIALIZE SQLCA
      ** This select checks the existence of Case and Program Type Code
      *      in the Case Program Entity
      * SQL-130
           
 
           EXEC SQL
           SELECT
             A.CSLD_XFR_RSN_CD
           INTO
                :LNK-CA0001S-OVR-RSN-CD
           FROM
                CS_PGM A
            ,RT_CSLD_OVR_RSN B
           WHERE
                A.CS_ID = :WSH-CUR-CS-ID
              AND A.PGM_TYP_CD = :WSH-CUR-PGM-TYP-CD
              AND A.EFF_BGN_DT            <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(A.EFF_END_DT, F_HIGH_DT()) <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')  
           AND A.UPD_DTM = 
           TO_DATE(:LNK-CA0001S-UPD-DTM, 'YYYY-MM-DD HH24:MI:SS')
           AND A.CSLD_XFR_RSN_CD = B.CSLD_OVR_RSN_CD
           UNION
           SELECT
             A.CSLD_XFR_RSN_CD
           FROM
                CS_PGM_H A
            ,RT_CSLD_OVR_RSN B
           WHERE
              A.CS_ID = :WSH-CUR-CS-ID
              AND A.PGM_TYP_CD = :WSH-CUR-PGM-TYP-CD
              AND A.EFF_BGN_DT            <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND A.UPD_DTM = 
           TO_DATE(:LNK-CA0001S-UPD-DTM, 'YYYY-MM-DD HH24:MI:SS')
           AND A.CSLD_XFR_RSN_CD = B.CSLD_OVR_RSN_CD
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-CS-PGM-EXISTS TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-CS-PGM-NOT-EXISTS   TO TRUE
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE  WSC-513              TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE LNK-SQL-TEXT
                     WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT

             STRING 'Error in CS_PGM1*' DELIMITED BY SIZE

                WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
                         
                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
             SET WSL-CS               TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             SET WSL-FATAL          TO TRUE
             PERFORM 90000-CLOSE

            WHEN OTHER
             SET LNK-CA0001S-FAILURE     TO TRUE
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
             MOVE      WSC-513           TO WSL-CALWIN-ERROR-CODE
                         LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE LNK-SQL-TEXT
                     WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT

             STRING 'Error in CS_PGM2*' DELIMITED BY SIZE

                WSH-CUR-CS-ID             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                         SQLERRM                   DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CUR-PGM-TYP-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                LNK-CA0001S-PGM-STS-CD        DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE

                WSH-CURRENT-DT             DELIMITED BY SIZE
                WSC-ASTERISK             DELIMITED BY SIZE
             INTO LNK-SQL-TEXT
             END-STRING

             MOVE LNK-SQL-TEXT          TO WSL-MISC-ERROR-TXT
             SET WSL-CS               TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             SET WSL-FATAL          TO TRUE
             PERFORM 90000-CLOSE

        END-EVALUATE      
        .
     
      ****************************************************************  G
      *** Get Case program count                                        G
      ****************************************************************  G
       10400-GET-CS-PGM-COUNT.
        MOVE '10400-GET-CS-PGM-COUNT' TO WSL-PARA-NAME

           INITIALIZE SQLCA
      ** To get the total count of the Program Type Code for a case
      * SQL-140
           EXEC SQL
            SELECT  COUNT(DISTINCT(CS_ASG_PGM))
            INTO
             :WSH-CS-PGM-COUNT
            FROM
             CS_PGM A
            ,RT_PGM P
            WHERE
               A.CS_ID            = :WSH-CUR-CS-ID
           AND A.PGM_STS_CD      = :WSC-PENDING
           AND A.EFF_BGN_DT      <=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND P.PGM_CD            = A.PGM_TYP_CD
           AND P.EFF_BGN_DT      <=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
               TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

           END-EXEC

        EVALUATE SQLCODE
               WHEN WSC-SQL-OK
             IF WSH-CS-PGM-COUNT > ZEROES
                 SET WSS-CS-PGM-CNT-EXISTS TO TRUE
             ELSE
                 SET WSS-CS-PGM-CNT-NOT-EXISTS TO TRUE
             END-IF

            WHEN OTHER
             MOVE SQLCODE           TO LNK-SQL-CODE
                          WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR SELECTING CS_PGM, RT_PGM '
                           TO WSL-MISC-ERROR-TXT
                           LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C1 cursor                                                G
      ****************************************************************  G
       10410-OPEN-C1-CURSOR.
        MOVE '10410-OPEN-C1-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

        INITIALIZE SQLCA

           EXEC SQL
            OPEN CA0001S_C1_CSLD_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR OPENING CA0001S_C1_CSLD_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C1_CSLD_PGM_CUR' TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C1 Cursor                                               G
      ****************************************************************  G
       10420-FETCH-C1-CURSOR.
        MOVE '10420-FETCH-C1-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

        INITIALIZE SQLCA

           EXEC SQL
            FETCH CA0001S_C1_CSLD_PGM_CUR
           INTO
             :WSD-SE-CSLD-PRM-USR.WSD-CSLD-ID
            ,:WSD-SE-CSLD-PRM-USR.WSD-USR-ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
                   INITIALIZE WSH-CUR-USR-ID WSH-CUR-CSLD-ID

             MOVE WSD-USR-ID OF WSD-SE-CSLD-PRM-USR TO
                 WSH-CUR-USR-ID
             MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
                 WSH-CUR-CSLD-ID

             SET WSS-NOT-END-C1-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C1-CURSOR TO TRUE
             PERFORM 10430-CLOSE-C1-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                 LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C1_CSLD_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C1_CSLD_PGM_CUR' TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C1 Cursor                                               G
      ****************************************************************  G
       10430-CLOSE-C1-CURSOR.
        MOVE '10430-CLOSE-C1-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

        INITIALIZE SQLCA

           EXEC SQL
            CLOSE CA0001S_C1_CSLD_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C1_CSLD_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C1_CSLD_PGM_CUR' TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C2 Cursor                                                G
      ****************************************************************  G
       10440-OPEN-C2-CURSOR.
        MOVE '10440-OPEN-C2-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C2_CSLD_CS_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CA0001S_C2_CSLD_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR OPENING CA0001S_C2_CSLD_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C2 Cursor                                               G
      ****************************************************************  G
       10450-FETCH-C2-CURSOR.
        MOVE '10450-FETCH-C2-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

      *     DISPLAY 'PGM TYP CD = ' WSH-CUR-PGM-TYP-CD
      *     DISPLAY 'CSLD MD CD = ' WSH-CUR-CS-MODE-CD
      *     DISPLAY 'OFF ID = ' WSH-CUR-OFF-ID

           EXEC SQL
            FETCH CA0001S_C2_CSLD_CS_PGM_CUR
            INTO
             :WSD-SE-CSLD-PRM-USR.WSD-CSLD-ID,
             :WSD-SE-CSLD-PRM-USR.WSD-USR-ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-CSLD-ID
             MOVE WSD-USR-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-USR-ID
             SET WSS-NOT-END-C2-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C2-CURSOR TO TRUE
             PERFORM 10460-CLOSE-C2-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C2_CSLD_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C2_CSLD_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C2 Cursor                                               G
      ****************************************************************  G
       10460-CLOSE-C2-CURSOR.
        MOVE '10460-CLOSE-C2-CURSOR' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C2_CSLD_CS_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C2_CSLD_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C2_CSLD_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C3 Cursor                                                G
      ****************************************************************  G
       10470-OPEN-C3-CURSOR.
        MOVE '10470-OPEN-C3-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C3_CS_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                    LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR OPENING CA0001S_C3_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C3_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C3 Cursor                                               G
      ****************************************************************  G
       10480-FETCH-C3-CURSOR.
         MOVE '10480-FETCH-C3-CURSOR' TO WSL-PARA-NAME
      *      DISPLAY WSL-PARA-NAME

      * Fetch Cursor
        INITIALIZE WSD-PGM-TYP-CD OF WSD-CS-PGM
                WSD-PGM-TYP-CD-I OF WSD-CS-PGM
                WSH-TEMP-PGM-TYP-CD
                WSH-HLPG-SW
                WSH-CA-PRRTY-CD
                WSH-HLPG-NM

           EXEC SQL
            FETCH CA0001S_C3_CS_PGM_CUR
            INTO
           :WSD-CS-PGM.WSD-PGM-TYP-CD:WSD-CS-PGM.WSD-PGM-TYP-CD-I
           ,:WSH-TEMP-PGM-TYP-CD
           ,:WSH-HLPG-SW
           ,:WSH-CA-PRRTY-CD
           ,:WSH-HLPG-NM
           END-EXEC

        EVALUATE SQLCODE
               WHEN WSC-SQL-OK
             IF WSD-PGM-TYP-CD-I OF WSD-CS-PGM = ZEROES
                 MOVE WSD-PGM-TYP-CD OF WSD-CS-PGM TO
                   WSH-CUR-PGM-TYP-CD
                 SET WSS-NOT-END-C3-CURSOR TO TRUE
2349cr                 MOVE WSH-HLPG-SW TO WSS-MASITE-HLPG-SW
2349  * If pgm is CHP+ do not consider it as MA SITE HLPG for intake
2349  * Application Registration processing
2349                   IF WSH-CUR-PGM-TYP-CD = WSC-CH-TYP-CD
2349                     MOVE SPACES TO WSS-MASITE-HLPG-SW
2349                   END-IF
             ELSE
                       SET WSS-END-C3-CURSOR TO TRUE
                 PERFORM 10490-CLOSE-C3-CURSOR
             END-IF

            WHEN WSC-NOT-FOUND
             SET WSS-END-C3-CURSOR TO TRUE
             MOVE ZEROES TO LNK-SQL-CODE
                      WSL-ERROR-VALUE
                               LNK-CA0001S-RETURN-CD 
             SET LNK-CA0001S-SUCCESS TO TRUE
             PERFORM 10490-CLOSE-C3-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C3_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C3_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C3 Cursor                                               G
      ****************************************************************  G
       10490-CLOSE-C3-CURSOR.
      *   MOVE '10490-CLOSE-C3-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C3_CS_PGM_CUR
           END-EXEC

        EVALUATE SQLCODE
              WHEN WSC-SQL-OK
           CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C3_CS_PGM_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C3_CS_PGM_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C4 Cursor                                                G
      ****************************************************************  G
       10500-OPEN-C4-CURSOR.
        MOVE '10500-OPEN-C4-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C4_MT_1_3_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR OPENING CA0001S_C4_MT_1_3_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C4_MT_1_3_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C4 Cursor                                               G
      ****************************************************************  G
       10510-FETCH-C4-CURSOR.
        MOVE '10510-FETCH-C4-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

           EXEC SQL
            FETCH CA0001S_C4_MT_1_3_CSLD_CUR
            INTO
              :WSH-CUR-CS-ID
             ,:WSH-CUR-PGM-TYP-CD-TBL
             ,:WSH-CUR-EFF-BGN-DT
             ,:WSH-CUR-EFF-END-DT
             ,:WSH-CUR-UPD-DTM
             ,:WSD-FETCH-DTM
             ,:WSH-CUR-PGM-TYP-CD
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-NOT-END-C4-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C4-CURSOR TO TRUE
             PERFORM 10520-CLOSE-C4-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C4_MT_1_3_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C4_MT_1_3_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C4 Cursor                                               G
      ****************************************************************  G
       10520-CLOSE-C4-CURSOR.
        MOVE '10520-CLOSE-C4-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C4_MT_1_3_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C4_MT_1_3_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C4_MT_1_3_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
                MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C5 Cursor                                                G
      ****************************************************************  G
       10530-OPEN-C5-CURSOR.
        MOVE '10530-OPEN-C5-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C5_MT_2_4_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR OPENING CA0001S_C5_MT_2_4_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C5_MT_2_4_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C5 Cursor                                               G
      ****************************************************************  G
       10540-FETCH-C5-CURSOR.
        MOVE '10540-FETCH-C5-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

           EXEC SQL
            FETCH CA0001S_C5_MT_2_4_CSLD_CUR
            INTO
              :WSH-CUR-CS-ID
             ,:WSH-CUR-PGM-TYP-CD-TBL
             ,:WSH-CUR-EFF-BGN-DT
             ,:WSH-CUR-EFF-END-DT
             ,:WSH-CUR-UPD-DTM
             ,:WSD-FETCH-DTM
             ,:WSH-CUR-PGM-TYP-CD
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             SET WSS-NOT-END-C5-CURSOR TO TRUE
             CONTINUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C5-CURSOR TO TRUE
             PERFORM 10550-CLOSE-C5-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C5_MT_2_4_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C5_MT_2_4_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C5 Cursor                                               G
      ****************************************************************  G
       10550-CLOSE-C5-CURSOR.
        MOVE '10550-CLOSE-C5-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C5_MT_2_4_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
              WHEN WSC-SQL-OK
           CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                       LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C5_MT_2_4_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C5_MT_2_4_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C7 Cursor                                                G
      ****************************************************************  G
       10560-OPEN-C7-CURSOR.
        MOVE '10560-OPEN-C7-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C7_QC_USR_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CA0001S_C7_QC_USR_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR OPENING CA0001S_C7_QC_USR_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C7 Cursor                                               G
      ****************************************************************  G
       10570-FETCH-C7-CURSOR.
        MOVE '10570-FETCH-C7-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

           EXEC SQL
            FETCH CA0001S_C7_QC_USR_CUR
            INTO
             :WSH-QC-USR-ID
            ,:WSH-QC-USR-CNT
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              SET WSS-NOT-END-C7-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
              SET WSS-END-C7-CURSOR TO TRUE
              PERFORM 10580-CLOSE-C7-CURSOR

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE 'CA0001S_C7_QC_USR_CUR'
                      TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR FETCHING CA0001S_C7_QC_USR_CUR'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C7 Cursor                                               G
      ****************************************************************  G
       10580-CLOSE-C7-CURSOR.
        MOVE '10580-CLOSE-C7-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C7_QC_USR_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C7_QC_USR_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C7_QC_USR_CUR' TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C6 Cursor                                                G
      ****************************************************************  G
       10620-OPEN-C6-CURSOR.
        MOVE '10620-OPEN-C6-CURSOR' TO WSL-PARA-NAME
      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C6_MT_2_4_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR OPENING CA0001S_C6_MT_2_4_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C6_MT_2_4_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C6 Cursor                                               G
      ****************************************************************  G
       10630-FETCH-C6-CURSOR.
        MOVE '10630-FETCH-C6-CURSOR' TO WSL-PARA-NAME

        INITIALIZE WSH-CUR-CS-ID, WSH-CUR-PGM-TYP-CD

      * Fetch Cursor

           EXEC SQL
            FETCH CA0001S_C6_MT_2_4_CSLD_CUR
            INTO
              :WSH-CUR-CS-ID
             ,:WSH-CUR-PGM-TYP-CD-TBL
             ,:WSH-CUR-EFF-BGN-DT
             ,:WSH-CUR-EFF-END-DT
             ,:WSH-CUR-UPD-DTM
             ,:WSD-FETCH-DTM
             ,:WSH-CUR-PGM-TYP-CD
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              SET WSS-NOT-END-C6-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
              SET WSS-END-C6-CURSOR TO TRUE
              PERFORM 10640-CLOSE-C6-CURSOR

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR FETCHING CA0001S_C6_MT_2_4_CSLD_CUR'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                    MOVE 'CA0001S_C6_MT_2_4_CSLD_CUR'
                      TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C6 Cursor                                               G
      ****************************************************************  G
       10640-CLOSE-C6-CURSOR.
        MOVE '10640-CLOSE-C6-CURSOR' TO WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C6_MT_2_4_CSLD_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CA0001S_C6_MT_2_4_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR CLOSING CA0001S_C6_MT_2_4_CSLD_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Open C8 Cursor                                                G
      ****************************************************************  G

       10670-OPEN-C8-CURSOR.
        MOVE '10670-OPEN-C8-CURSOR' TO WSL-PARA-NAME.
      **     Open cursor 


        INITIALIZE WSD-SE-CSLD-ALPHA

           EXEC SQL
            OPEN CA0001S_C8_ALPHA_BREAKDOWN_CUR
           END-EXEC

        EVALUATE SQLCODE
          WHEN WSC-SQL-OK
               SET WSS-NOT-END-C8-CURSOR TO TRUE
          WHEN OTHER
          MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
          MOVE 510               TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
          MOVE 'ERROR OPENING CA0001S_C8_ALPHA_BREAKDOWN_CUR'
                              TO WSL-MISC-ERROR-TXT
                                      LNK-SQL-TEXT
          SET LNK-CA0001S-FAILURE      TO TRUE
          SET WSL-FATAL               TO TRUE
          MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
          PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C8 Cursor                                               G
      ****************************************************************  G

       10680-FETCH-C8-CURSOR.
        MOVE '10680-FETCH-C8-CURSOR' TO WSL-PARA-NAME.
      **     Fetch cursor

           EXEC SQL
            FETCH CA0001S_C8_ALPHA_BREAKDOWN_CUR
            INTO
                :WSD-SE-CSLD-ALPHA.WSD-CSLD-ALPHA-BGN
               ,:WSD-SE-CSLD-ALPHA.WSD-CSLD-ALPHA-END
               ,:WSD-SE-CSLD-ALPHA.WSD-CSLD-ID
           END-EXEC

        EVALUATE SQLCODE
          WHEN WSC-SQL-OK
               SET WSS-ALPHA-FOUND      TO TRUE
          WHEN WSC-NOT-FOUND
      *****************************************************************
      ** If there was never an entry for the csld (WSS-ALPHA-NOT-FOUND)
      ** then set the WSS-ALPHA-MTCH to true because there are then no
      ** alpha breakdown restrictions on the current caseload.  Else,
      ** we reset the WSS-ALPHA-NOT-FOUND to true for the next csld.
      *****************************************************************
                IF WSS-ALPHA-NOT-FOUND
                     SET WSS-ALPHA-MTCH   TO TRUE
               ELSE
                  SET WSS-ALPHA-NOT-FOUND TO TRUE
               END-IF
               SET WSS-END-C8-CURSOR   TO TRUE
          WHEN OTHER
             MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
             MOVE 511               TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C8_ALPHA_BREAKDOWN_CUR'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE      TO TRUE
             SET WSL-FATAL          TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C8 Cursor                                               G
      ****************************************************************  G

       10690-CLOSE-C8-CURSOR.
        MOVE '10690-CLOSE-C8-CURSOR' TO WSL-PARA-NAME
      ** Close cursor

           EXEC SQL
            CLOSE CA0001S_C8_ALPHA_BREAKDOWN_CUR
           END-EXEC
     
        EVALUATE SQLCODE
          WHEN WSC-SQL-OK
               CONTINUE
          WHEN OTHER
          MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
          MOVE 512               TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
          MOVE 'ERROR CLOSING CA0001S_C8_ALPHA_BREAKDOWN_CUR'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
          SET LNK-CA0001S-FAILURE     TO TRUE
          SET WSL-FATAL          TO TRUE
          MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER     
          PERFORM 90000-CLOSE
        END-EVALUATE
        .


      ****************************************************************  G
      *** Open C9 Cursor                                                G
      ****************************************************************  G
       10700-OPEN-C9-CURSOR.
        MOVE '10700-OPEN-C9-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C9_CSLD_CS_PGM_USR_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR OPENING CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Fetch C9 Cursor                                               G
      ****************************************************************  G
       10710-FETCH-C9-CURSOR.
        MOVE '10710-FETCH-C9-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

      *     DISPLAY 'PGM TYP CD = ' WSH-CUR-PGM-TYP-CD
      *     DISPLAY 'CSLD MD CD = ' WSH-CUR-CS-MODE-CD
      *     DISPLAY 'OFF ID = ' WSH-CUR-OFF-ID

           EXEC SQL
            FETCH CA0001S_C9_CSLD_CS_PGM_USR_CUR
            INTO
             :WSD-SE-CSLD-PRM-USR.WSD-CSLD-ID,
             :WSD-SE-CSLD-PRM-USR.WSD-USR-ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-CSLD-ID
             MOVE WSD-USR-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-USR-ID
             SET WSS-NOT-END-C9-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C9-CURSOR TO TRUE
             PERFORM 10720-CLOSE-C9-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Close C9 Cursor                                               G
      ****************************************************************  G
       10720-CLOSE-C9-CURSOR.
        MOVE '10720-CLOSE-C9-CURSOR' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C9_CSLD_CS_PGM_USR_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C9_CSLD_CS_PGM_USR_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

4974  ****************************************************************  G
4974  *** Open C10 Cursor                                               G
4974  ****************************************************************  G
       10730-OPEN-C10-CURSOR.
        MOVE '10730-OPEN-C10-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
            OPEN CA0001S_C10_CSLD_SPL_IND_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           CONTINUE

           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'CA0001S_C10_CSLD_SPL_IND_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR OPENING CA0001S_C10_CSLD_SPL_IND_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

4974  ****************************************************************  G
4974  *** Fetch C10 Cursor                                              G
4974  ****************************************************************  G
       10740-FETCH-C10-CURSOR.
        MOVE '10740-FETCH-C10-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

      *     DISPLAY 'PGM TYP CD = ' WSH-CUR-PGM-TYP-CD
      *     DISPLAY 'CSLD MD CD = ' WSH-CUR-CS-MODE-CD
      *     DISPLAY 'OFF ID = ' WSH-CUR-OFF-ID

           EXEC SQL
            FETCH CA0001S_C10_CSLD_SPL_IND_CUR
            INTO
             :WSD-SE-CSLD-PRM-USR.WSD-CSLD-ID,
             :WSD-SE-CSLD-PRM-USR.WSD-USR-ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-CSLD-ID
             MOVE WSD-USR-ID OF WSD-SE-CSLD-PRM-USR TO
               WSH-CUR-USR-ID
             SET WSS-NOT-END-C10-CURSOR TO TRUE

            WHEN WSC-NOT-FOUND
             SET WSS-END-C10-CURSOR TO TRUE
             PERFORM 10750-CLOSE-C10-CURSOR

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR FETCHING CA0001S_C10_CSLD_SPL_IND_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C10_CSLD_SPL_IND_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

4974  ****************************************************************  G
4974  *** Close C10 Cursor                                              G
4974  ****************************************************************  G
       10750-CLOSE-C10-CURSOR.
        MOVE '10750-CLOSE-C10-CURSOR' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      * Close Cursor

           EXEC SQL
            CLOSE CA0001S_C10_CSLD_SPL_IND_CUR
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE
           WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR CLOSING CA0001S_C10_CSLD_SPL_IND_CUR'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE 'CA0001S_C10_CSLD_SPL_IND_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .


      ****************************************************************  G
      *** Open MC Cursor                                                G
      ****************************************************************  G
       10760-OPEN-MC-CURSOR.
           MOVE '10760-OPEN-MC-CURSOR' TO WSL-PARA-NAME

      * Open Cursor

           EXEC SQL
               OPEN CA0001S_MC_CSLD_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE

              WHEN OTHER
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR OPENING CA0001S_MC_CSLD_CUR'
                                               TO WSL-MISC-ERROR-TXT
                                                  LNK-SQL-TEXT
                   MOVE 'CA0001S_MC_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL           TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Fetch MC Cursor                                               G
      ****************************************************************  G
       10770-FETCH-MC-CURSOR.
           MOVE '10770-FETCH-MC-CURSOR' TO WSL-PARA-NAME

      * Fetch Cursor

           EXEC SQL
               FETCH CA0001S_MC_CSLD_CUR
               INTO
                    :WSH-CUR-CS-ID
                   ,:WSH-CUR-PGM-TYP-CD-TBL
                   ,:WSH-CUR-EFF-BGN-DT
                   ,:WSH-CUR-EFF-END-DT
                   ,:WSH-CUR-UPD-DTM
                   ,:WSD-FETCH-DTM
                   ,:WSH-CUR-PGM-TYP-CD
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   SET WSS-NOT-END-MC-CURSOR TO TRUE

               WHEN WSC-NOT-FOUND
                   SET WSS-END-MC-CURSOR TO TRUE
                   PERFORM 10780-CLOSE-MC-CURSOR

               WHEN OTHER
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR FETCHING CA0001S_MC_CSLD_CUR'
                                               TO WSL-MISC-ERROR-TXT
                                                  LNK-SQL-TEXT
                   MOVE 'CA0001S_MC_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL           TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Close MC Cursor                                               G
      ****************************************************************  G
       10780-CLOSE-MC-CURSOR.
           MOVE '10780-CLOSE-MC-CURSOR' TO WSL-PARA-NAME
           
      * Close Cursor

           EXEC SQL
               CLOSE CA0001S_MC_CSLD_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE

              WHEN OTHER
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR CLOSING CA0001S_MC_CSLD_CUR'
                                               TO WSL-MISC-ERROR-TXT
                                                  LNK-SQL-TEXT
                   MOVE 'CA0001S_MC_CSLD_CUR'
                     TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL           TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .


      ****************************************************************
      *** Retrieve Application Source
      ****************************************************************
       10810-GET-APP-SRC.
           MOVE '10810-GET-APP-SRC' TO WSL-PARA-NAME
           
           EXEC SQL
               SELECT  A.APP_ID
                     , AR.APP_SRC_CD
               INTO
                   :WSH-CUR-MA-APP-ID,
                   :WSH-CUR-MA-APP-SRC-CD
               FROM
                   CS_PGM A
                  ,RT_PGM P
                  ,AR_SAWS1_FORM AR
               WHERE
                     A.CS_ID           = :WSH-CUR-CS-ID
                 AND A.PGM_TYP_CD      = :WSH-CUR-PGM-TYP-CD
                 AND A.EFF_BGN_DT      <=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND P.PGM_CD          = A.PGM_TYP_CD
                 AND P.EFF_BGN_DT      <=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND A.APP_ID          = AR.APP_ID


           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    CONTINUE
      *
      *        WHEN WSC-NOT-FOUND
      *
               WHEN OTHER
                   MOVE SQLCODE          TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING CS_PGM, RT_PGM, AR_SAWS1_FORM '
                                       TO WSL-MISC-ERROR-TXT
                                          LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   SET WSL-CS              TO TRUE
                   SET WSL-FATAL           TO TRUE
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .


      ****************************************************************
      *** Determine if case is a Non Magi or Magi case
      ****************************************************************
       10820-DETERMINE-MAGI.
           MOVE '10820-DETERMINE-MAGI' TO WSL-PARA-NAME
           
           INITIALIZE WSS-MA-MAGINONMAGI-SW
                      WSH-INDV-ASST-COUNT
           SET WSS-NON-MAGI TO TRUE

           EXEC SQL
               SELECT COUNT(1)
                 INTO :WSH-INDV-ASST-COUNT
               FROM
                   INDV_ASST A
                  ,RT_AID_COD B
               WHERE
                    A.PRIOR_CS_ID           = :WSH-CUR-CS-ID
               AND  A.PGM_TYP_CD            = :WSH-CUR-PGM-TYP-CD
               AND  A.EFF_END_DT            IS NULL
               AND  A.END_DT                IS NULL
               AND  A.AID_CD                = B.AID_COD_CD
               AND  B.MAGI_NONMAGI_IND      = :WSC-N
               AND  B.EFF_END_DT            IS NULL

           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    IF WSH-INDV-ASST-COUNT > WSC-ZERO
                       CONTINUE
                    ELSE
                        SET WSS-MAGI TO TRUE
                    END-IF

               WHEN WSC-NOT-FOUND
                     SET WSS-MAGI TO TRUE
               WHEN OTHER
                   MOVE SQLCODE          TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING RT_AID_COD FOR MAGI '
                                       TO WSL-MISC-ERROR-TXT
                                          LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   SET WSL-CS              TO TRUE
                   SET WSL-FATAL           TO TRUE
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .


      ****************************************************************
      *** Determine the caseload in the county of residency of hoh
      ****************************************************************
       10830-DET-CNTY-RES-CSLD.
           MOVE '10830-DET-CNTY-RES-CSLD' TO WSL-PARA-NAME
           
           EXEC SQL
             SELECT
                 NVL(A.CUR_RES_CNTY_CD,'  ')
             INTO
                 :WSH-RES-CNTY-CD
             FROM
                  INDV_RES A
                 ,CS   B
             WHERE
                   B.CS_ID       = :WSH-CUR-CS-ID
               AND B.HD_HH_CWIN  = A.CWIN
               AND A.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
               AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
                   TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
               AND B.EFF_BGN_DT <= TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
               AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                   TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
            END-EXEC

            EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                CONTINUE
              WHEN WSC-NOT-FOUND
                CONTINUE
              WHEN OTHER
                SET LNK-CA0001S-FAILURE TO TRUE
                MOVE SQLCODE            TO LNK-SQL-CODE
                MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                INITIALIZE      LNK-SQL-TEXT
                                WSL-MISC-ERROR-TXT
                                LNK-AA0052C-CALWIN-ERROR-TEXT
                STRING 'Error reading INDV_RES, CS '
                        WSH-CUR-CS-ID   DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        SQLERRM         DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CUR-PGM-TYP-CD      DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        LNK-CA0001S-PGM-STS-CD  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE

                        WSH-CURRENT-DT  DELIMITED BY SIZE
                        WSC-ASTERISK    DELIMITED BY SIZE
                INTO LNK-SQL-TEXT
                END-STRING

                MOVE LNK-SQL-TEXT       TO WSL-MISC-ERROR-TXT
                SET WSL-CS              TO TRUE
                MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                SET WSL-FATAL           TO TRUE
                PERFORM 90000-CLOSE
           END-EVALUATE

           EXEC SQL
                SELECT
                      XFER_CSLD_ID
                INTO
                      :WSH-CNTYRES-XFER-CSLD
                FROM
                      RT_CNTY_OFF_XFER_CSLD
                WHERE
                      CNTY_CD    = :WSH-RES-CNTY-CD
                AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING XFER CSLD FOR RES CNTY'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE
           .



      ****************************************************************
      *** Determine the if peak application has a real time eligibility
      ****************************************************************
       10840-DET-PEAK-REAL-TIME-EL.
           MOVE '10840-DET-PEAK-REAL-TIME-EL' TO WSL-PARA-NAME
           
           INITIALIZE WSH-CUR-PEAK-RTE-STS-CD

           EXEC SQL
               SELECT
                    PKIN.RTE_STS_CD
               INTO
                   :WSH-CUR-PEAK-RTE-STS-CD
               FROM
                   PEAK_INBOX PKIN
                  ,AR_SAWS1_FORM AR
               WHERE
                     AR.APP_ID        =    :WSH-CUR-MA-APP-ID
                 AND AR.APP_SRC_CD    =    :WSH-CUR-MA-APP-SRC-CD
                 AND AR.PEAK_TRK_NUM  =    PKIN.PEAK_TRK_NUM
                 AND PKIN.PGM_LIST    LIKE  '%MA%'

           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    CONTINUE
      *
      *        WHEN WSC-NOT-FOUND
      *
               WHEN OTHER
                   MOVE SQLCODE          TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING PEAK_INBOX, AR_SAWS1_FORM '
                                       TO WSL-MISC-ERROR-TXT
                                          LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   SET WSL-CS              TO TRUE
                   SET WSL-FATAL           TO TRUE
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************
      * Determine Peak Combo or Non Combo cases
      ****************************************************************
       10850-DET-PEAK-COMBO.
           MOVE '10850-DET-PEAK-COMBO' TO WSL-PARA-NAME
           
           INITIALIZE WSH-CNTY-CD

           EXEC SQL

               SELECT  NVL(CNTY_CD, '  ')
               INTO
                       :WSH-CNTY-CD
               FROM
                   CS_PGM A
                  ,RT_PGM P
                  ,AR_SAWS1_FORM AR
                  ,PEAK_INBOX PKIN
               WHERE
                     A.CS_ID           = :WSH-CUR-CS-ID
                 AND A.PGM_TYP_CD      = :WSH-CUR-PK-PGM-TYP-CD
                 AND A.EFF_BGN_DT      <=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND P.PGM_CD          = A.PGM_TYP_CD
                 AND P.EFF_BGN_DT      <=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND A.APP_ID          = AR.APP_ID
                 AND AR.PEAK_TRK_NUM  =    PKIN.PEAK_TRK_NUM
                 AND (PKIN.PGM_LIST    LIKE  '%MA,%' OR
                      PKIN.PGM_LIST    LIKE  '%,MA%'
                     )

           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    CONTINUE
                    SET WSS-COMBO     TO TRUE
               WHEN WSC-NOT-FOUND
                    SET WSS-NON-COMBO TO TRUE
               WHEN OTHER
                   MOVE SQLCODE          TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING PEAK_INBOX, AR_SAWS1_FORM '
                                       TO WSL-MISC-ERROR-TXT
                                          LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   SET WSL-CS              TO TRUE
                   SET WSL-FATAL           TO TRUE
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .

      *****************************************************************  G
      **** Get County code from INDV ADR                                 G
      *****************************************************************  G
       10860-GET-INDV-ADR-CNTY.
            MOVE '10860-GET-INDV-ADR-CNTY' TO WSL-PARA-NAME
            
            EXEC SQL
              SELECT
                  NVL(A.CNTY_CD, '  ')
              INTO
                  :WSH-CNTY-CD
              FROM
                   INDV_ADR A
                  ,CS   B
              WHERE
                    B.CS_ID = :WSH-CUR-CS-ID
                AND B.HD_HH_CWIN = A.CWIN
                AND A.ADR_TYP_CD = :WSC-HOME-ADR
                AND A.EFF_BGN_DT <=
                    TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
                AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
                AND B.EFF_BGN_DT <=
                    TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
                AND NVL(B.EFF_END_DT,F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT,'YYYY-MM-DD')
             END-EXEC

             EVALUATE SQLCODE
                 WHEN WSC-SQL-OK
                 WHEN WSC-MULTIPLE-ROWS
                      CONTINUE
                 WHEN WSC-NOT-FOUND
                 WHEN OTHER
                     MOVE SQLCODE          TO LNK-SQL-CODE
                                           WSL-ERROR-VALUE
                     MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                       LNK-AA0052C-CALWIN-ERROR-CD
                     MOVE 'ERROR SELECTING INDV ADR FOR PEAK '
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                     MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                     SET LNK-CA0001S-FAILURE TO TRUE
                     MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                     SET WSL-CS              TO TRUE
                     SET WSL-FATAL           TO TRUE
                     PERFORM 90000-CLOSE
             END-EVALUATE
            .

7391  ****************************************************************
7391  *** Determine if case is getting APTC or not
      ****************************************************************
       10870-DETERMINE-APTC.
       
           MOVE '10870-DETERMINE-APTC' TO WSL-PARA-NAME
           
           INITIALIZE WSS-MA-APTC-SW
           SET WSS-NON-APTC TO TRUE

           EXEC SQL
               SELECT COUNT(1)
                 INTO :WSH-APTC-COUNT
               FROM
                   AG_ELIG_RSLT
               WHERE
                    CS_ID                   = :WSH-CUR-CS-ID
               AND  PGM_TYP_CD              = 'MA'
               AND  APTC_ELIG_STS_CD        = 'PS'
               AND  CUR_ELIG_IND            = 'A'
               AND  AG_EFF_END_DT           IS NULL

           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    IF WSH-APTC-COUNT > WSC-ZERO
                       SET WSS-APTC TO TRUE
                       CONTINUE
                    END-IF

               WHEN WSC-NOT-FOUND
                       CONTINUE               
               WHEN OTHER
                   MOVE SQLCODE          TO LNK-SQL-CODE
                                         WSL-ERROR-VALUE
                   MOVE WSC-513      TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING AG_ELIG_RSLT FOR APTC '
                                       TO WSL-MISC-ERROR-TXT
                                          LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   SET WSL-CS              TO TRUE
                   SET WSL-FATAL           TO TRUE
7391               PERFORM 90000-CLOSE
7391       END-EVALUATE
           .
7391  ****************************************************************
      *** Determine the caseload for APTC C4HCO
      ****************************************************************
       10880-DET-APTC-CH4HCO-CSLD.
           MOVE '10880-DET-APTC-CH4HCO-CSLD' TO WSL-PARA-NAME
           
           EXEC SQL
                SELECT
                      XFER_CSLD_ID
                INTO
                      :WSH-APTC-C4HCO-CSLD
                FROM
                      RT_CNTY_OFF_XFER_CSLD
                WHERE
                      CNTY_CD    = '64'
                AND C4HCO_SW     = 'Y'
                AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING APTC C4HCO CSLD'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE
7391       .           

      ****************************************************************  G
      *** Application Logic                                             G
      ****************************************************************  G
       20000-APPLICATION-LOGIC.
           MOVE '20000-APPLICATION-LOGIC' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      *    DISPLAY 'WSS-AR-PROCESS-SW ' WSS-AR-PROCESS-SW

      ** Following IF Logic for the Generic Case Assignment for the
      *  Application Registration.

           IF WSS-AR-PROCESS-ALL-CS-PGM

            PERFORM 10410-OPEN-C1-CURSOR

            PERFORM 10420-FETCH-C1-CURSOR

            PERFORM 20100-AR-ALL-CS-PGM-LOGIC
             UNTIL WSS-END-C1-CURSOR

            PERFORM 69000-SRCH-BEST-CSLD
               EXIT PARAGRAPH
        END-IF

      ** Following IF Logic for assigning caseload for the Case and
      *      Program Type code for the Application Registration.

        IF WSS-AR-PROCESS-SINGLE-CS-PGM
cr3212* Process PEAK applications prior to calling normal case
cr3212* assignment in intake application registration process

cr3212      PERFORM 70100-OPEN-PEAK-CURSOR

cr3212      SET WSS-NOT-END-PK-CURSOR  TO TRUE

cr3212      PERFORM 70200-FETCH-PEAK-CURSOR
cr3212          UNTIL WSS-END-PK-CURSOR

cr3212      PERFORM 70300-CLOSE-PEAK-CURSOR

            MOVE WSC-DUMMY-USER TO WSH-NOT-THIS-USR-ID

            PERFORM 10470-OPEN-C3-CURSOR

            PERFORM 10480-FETCH-C3-CURSOR

      * Commented out per Jaime B. on 4/14
      * It's ok to get a not found in the C3 cursor - just end pgm

                  IF WSS-END-C3-CURSOR
            EXIT PARAGRAPH
      *             MOVE SQLCODE                 TO LNK-SQL-CODE
      *                                WSL-ERROR-VALUE
      *             MOVE WSC-511            TO WSL-CALWIN-ERROR-CODE
      *                           LNK-AA0052C-CALWIN-ERROR-CD
      *             MOVE '10480-FETCH-C3-CURSOR'
      *                                TO WSL-PARA-NAME
      *             MOVE 'ERROR FETCHING CA0001S_C3_CS_PGM_CUR'
      *                                TO WSL-MISC-ERROR-TXT
      *                                LNK-SQL-TEXT
      *             SET LNK-CA0001S-FAILURE     TO TRUE
      *             SET WSL-FATAL            TO TRUE
      *             SET WSL-CS                 TO TRUE
      *             MOVE LNK-CA0001S-CS-ID      TO WSL-IDENTIFIER
      *             PERFORM 90000-CLOSE

            ELSE
                   PERFORM 20200-AR-SNGL-CS-PGM-LOGIC
               UNTIL WSS-END-C3-CURSOR
               EXIT PARAGRAPH
                  END-IF
        END-IF

      ** Following IF Logic for      assigning caseload for the Case and
      *      Program Type code for Authorization.

        IF WSS-PROCESS-AU-ASSGN

            MOVE WSC-DUMMY-USER TO WSH-NOT-THIS-USR-ID
            MOVE -1             TO WSH-OFF-ID-I
      * Get the office ID associated with the current caseload 
            PERFORM 30360-GET-CUR-OFF-ID

      * Get the usr_id associated with the current caseload id
            PERFORM 10310-CHK-CSLD-EXIST
1815  *        SET WSS-NOT-AWDC TO TRUE
1815  *        IF WSH-CUR-PGM-TYP-CD = WSC-AM-TYP-CD
1815  *           PERFORM 10157-CHECK-FOR-AWDC
1815  *        END-IF
      *
2349           SET WSS-NO-XFR-CSLD  TO TRUE

               IF WSH-CUR-PGM-TYP-CD = WSC-MA-TYP-CD
      * If csld is currently in Maximus  (off 2419)
      * and check if application is from PEAK/C4HCO
      * check if
                   PERFORM 10810-GET-APP-SRC
                   PERFORM 10820-DETERMINE-MAGI
                   PERFORM 10154-GET-MAX-DH-XFER-CSLD
                   
7391               PERFORM 10870-DETERMINE-APTC                   
 
                   IF WSH-CUR-MA-APP-SRC-CD = WSC-PEAK
                      PERFORM 10840-DET-PEAK-REAL-TIME-EL
                   END-IF
                   
7391		   IF WSS-APTC
7391                  PERFORM 10880-DET-APTC-CH4HCO-CSLD
7391                  SET WSS-XFR-CSLD   TO TRUE
7391                  MOVE WSH-APTC-C4HCO-CSLD
7391                                       TO WSH-MA-FINAL-CSLD
7391		   END-IF

                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD
                   AND WSH-CUR-OFF-ID     =   WSH-VENDOR-OFF-ID
      *            AND WSS-MAGI
7391               AND WSS-NON-APTC
                   AND (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                        WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
      *                IF  WSH-CUR-PEAK-RTE-STS-CD = WSC-00
      *                IF  (LNK-AA0052C-USR-ID(1:7) = WSC-RTE001N OR
      *                     LNK-AA0052C-USR-ID(1:7) = WSC-RTE001B)
      *                AND WSH-CUR-MA-APP-SRC-CD = WSC-PEAK
                           PERFORM 10830-DET-CNTY-RES-CSLD
                           SET WSS-XFR-CSLD   TO TRUE
                           MOVE WSH-CNTYRES-XFER-CSLD
                                          TO WSH-MA-FINAL-CSLD
      *                ELSE
      *                 CONTINUE
      *                END-IF
                   END-IF

      *            IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD
      *            AND WSH-CUR-OFF-ID     =   WSH-VENDOR-OFF-ID
      *            AND WSS-NON-MAGI
      *            AND (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
      *                 WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
      *                PERFORM 10830-DET-CNTY-RES-CSLD
      *                SET WSS-XFR-CSLD   TO TRUE
      *                MOVE WSH-CNTYRES-XFER-CSLD
      *                                   TO WSH-MA-FINAL-CSLD
      *            END-IF

                   IF  WSH-CSLD-CNTY-CD   <>  WSH-VENDOR-CNTY-CD
7391                   AND WSS-NON-APTC                   
                       CONTINUE
      *
                       IF WSH-CUR-MA-APP-SRC-CD = WSC-PEAK OR
                          WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO
      *
                              PERFORM 10830-DET-CNTY-RES-CSLD
                              SET WSS-XFR-CSLD   TO TRUE
                              MOVE WSH-CNTYRES-XFER-CSLD
                                 TO WSH-MA-FINAL-CSLD

                       END-IF

                   END-IF
                   
                    IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     <>  WSH-VENDOR-OFF-ID   AND
                       WSH-CUR-OFF-ID     <>  WSH-DENHLTH-OFF-ID  AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-MAGI
 7391                  AND WSS-NON-APTC
      *                MAXIMUS TRANSFER CASELOAD
                       SET WSS-XFR-CSLD   TO TRUE
                       MOVE WSH-VENDOR-XFER-CSLD TO WSH-MA-FINAL-CSLD
                   END-IF

                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     <>  WSH-VENDOR-OFF-ID   AND
                       WSH-CUR-OFF-ID     <>  WSH-DENHLTH-OFF-ID  AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-NON-MAGI
 7391                  AND WSS-NON-APTC                       
      *                CNTY OF RES TRANSFER CASELOAD
                       PERFORM 10830-DET-CNTY-RES-CSLD
                       SET WSS-XFR-CSLD   TO TRUE
                       MOVE WSH-CNTYRES-XFER-CSLD
                                          TO WSH-MA-FINAL-CSLD
                   END-IF

                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     =   WSH-VENDOR-OFF-ID   AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-NON-MAGI
 7391                  AND WSS-NON-APTC                       
                        PERFORM 10830-DET-CNTY-RES-CSLD
                        SET WSS-XFR-CSLD  TO TRUE
                        MOVE WSH-CNTYRES-XFER-CSLD
                                          TO WSH-MA-FINAL-CSLD
                   END-IF

                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     =   WSH-VENDOR-OFF-ID   AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-MAGI
 7391                  AND WSS-NON-APTC                       
                       CONTINUE
                   END-IF

                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     =   WSH-DENHLTH-OFF-ID  AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-NON-MAGI
 7391                  AND WSS-NON-APTC
                        PERFORM 10830-DET-CNTY-RES-CSLD
                        SET WSS-XFR-CSLD  TO TRUE
                        MOVE WSH-CNTYRES-XFER-CSLD
                                          TO WSH-MA-FINAL-CSLD
                   END-IF
                   
                   IF  WSH-CSLD-CNTY-CD   =   WSH-VENDOR-CNTY-CD  AND
                       WSH-CUR-OFF-ID     =   WSH-DENHLTH-OFF-ID  AND
                       NOT (WSH-CUR-MA-APP-SRC-CD = WSC-PEAK  OR
                       WSH-CUR-MA-APP-SRC-CD = WSC-C4HCO)
                       AND WSS-MAGI
 7391                  AND WSS-NON-APTC                       
                       CONTINUE
                   END-IF

               END-IF

2349  *        IF WSH-CUR-PGM-TYP-CD = WSC-CH-TYP-CD  OR
1815  *           WSS-AWDC
1815  *
2349  *           PERFORM 10155-CHK-CHP-VENDOR-OFF
      *
2349  *           IF WSS-NOT-MA-VENDOR-OFF
2349  *              PERFORM 10156-RETRIEVE-XFER-CSLD
      *              SET WSS-XFR-CSLD  TO TRUE
2349  *           END-IF
      *        END-IF

2349  * If the office id <> CHP+ vendor office
2349  * If the pgm typ cd = CHP+ retrieve the transfer caseload of the
2349  * CHP+ vendor
2349  * Set a flag to indicate intake office id is diff from CHP+ vendor
2349  * office id's .
      * If the CHP+ flag is set, no need of checking if the worker is
      * same or different and no need of loading the caseloads
      * just go to 69000 best caseload and update cs_pgm with transfer
      * caseload of the vendor
      * Determine if the same worker can take the ongoing authorization
      * Skip checking same wrkr assign and loading the caseloads

               IF WSS-NO-XFR-CSLD
                 PERFORM 20350-CHK-SAME-WRKR-ASSGN

      * User doesn't have ongoing caseload to take the HLPG
                 IF WSS-SAME-WRKR-NOT-ASSGND

4974  * Determine if there are special indicators on the case
4974                PERFORM 10320-CHK-CS-SPL-IND-EXIST

4974  * If there are special indicators on the case
4974                IF WSS-CS-SPL-IND-EXISTS
4974                   DISPLAY 'Case has special indicators'
4974                   PERFORM 10730-OPEN-C10-CURSOR
4974                   PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads with special indicators
4974                   IF WSS-NOT-END-C10-CURSOR
4974                      SET WSS-USED-SPL-IND-CUR TO TRUE
4974                      DISPLAY 'Caseloads with spl inds found'
4974                      PERFORM 20300-AU-SINGLE-CS-PGM-LOGIC
4974                         UNTIL WSS-END-C10-CURSOR

4974  * If there were no caseloads with special indicators found
4974                   ELSE
4974                      SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974                      DISPLAY 'No caseloads with spl inds found'
4974                      PERFORM 10440-OPEN-C2-CURSOR
4974                      PERFORM 10450-FETCH-C2-CURSOR
4974                      PERFORM 20300-AU-SINGLE-CS-PGM-LOGIC
4974                         UNTIL WSS-END-C2-CURSOR

4974  * There were no special indicators on the case
4974                ELSE
4974                   DISPLAY 'Case has no special indicators'
4974                   SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
                       PERFORM 10440-OPEN-C2-CURSOR
                       PERFORM 10450-FETCH-C2-CURSOR

                       PERFORM 20300-AU-SINGLE-CS-PGM-LOGIC
                         UNTIL WSS-END-C2-CURSOR
4974                END-IF
                 ELSE

      * Same user can take the ongoing that had the intake.  Choose the
      * best caseload out of their ongoing caseloads.
                    PERFORM 10700-OPEN-C9-CURSOR
                    PERFORM 10710-FETCH-C9-CURSOR
     
                    PERFORM 20300-AU-SINGLE-CS-PGM-LOGIC
                      UNTIL WSS-END-C9-CURSOR
                 END-IF
               END-IF

            PERFORM 69000-SRCH-BEST-CSLD

            EXIT PARAGRAPH
           END-IF

      ** Following IF Logic for      give a list of best available
      *      caseloads for a Case and Program Type code for Manage Case
      *      Assignment.

           IF WSS-SI-PROCESS-SINGLE-CS-PGM

4974  * Determine if there are special indicators on the case
4974            PERFORM 10320-CHK-CS-SPL-IND-EXIST

               PERFORM 10260-CHK-PGM-LOAD-USR-CSLD

               SET WSS-NO-SKIP-PGM-LOOP  TO TRUE

               PERFORM VARYING WSI-SI-FINAL-IDX
                     FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
                      WSI-SI-PGM-IDX  >  WSC-100    OR
                      WST-SI-FINAL-USR-ID(WSI-SI-FINAL-IDX) =
                         SPACES                     OR
                      WSS-SKIP-PGM-LOOP
                 MOVE WST-SI-FINAL-CSLD-ID(WSI-SI-FINAL-IDX) TO
                               WSH-CUR-CSLD-ID
                 MOVE WST-SI-FINAL-USR-ID(WSI-SI-FINAL-IDX)  TO
                               WSH-CUR-USR-ID
                 PERFORM 20400-SI-SNGL-CS-PGM-LOGIC

               END-PERFORM

4974  * If there are special indicators on the case
4974 **        IF WSS-CS-SPL-IND-EXISTS
4974 **           DISPLAY 'Case has special indicators'
4974 **           PERFORM 10730-OPEN-C10-CURSOR
4974 **           PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads with spl inds found
4974 **           IF WSS-NOT-END-C10-CURSOR
4974 **              DISPLAY 'Caseloads with spl inds found'
4974 **              SET WSS-USED-SPL-IND-CUR TO TRUE
4974 **              PERFORM 20400-SI-SNGL-CS-PGM-LOGIC
4974 **                 UNTIL WSS-END-C10-CURSOR

4974  * If there are no caseloads with spl inds found
4974 **           ELSE
4974 **              DISPLAY 'No Caseloads with spl inds found'
4974 **              SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974 **              PERFORM 10440-OPEN-C2-CURSOR
4974 **              PERFORM 10450-FETCH-C2-CURSOR
4974 **              PERFORM 20400-SI-SNGL-CS-PGM-LOGIC
4974 **                 UNTIL WSS-END-C2-CURSOR
4974 **           END-IF

4974  * If there are no special indicators on the case
4974 **        ELSE
4974 **           DISPLAY 'Case has no special indicators'
4974 **           SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
     **           PERFORM 10440-OPEN-C2-CURSOR
     **           PERFORM 10450-FETCH-C2-CURSOR
     **           PERFORM 20400-SI-SNGL-CS-PGM-LOGIC
     **              UNTIL WSS-END-C2-CURSOR
4974 **        END-IF

            PERFORM 69000-SRCH-BEST-CSLD

            EXIT PARAGRAPH
          END-IF

      ** Following IF Condition Logic is to update the caseload
      *      information for a given Case and Program Type code for Manage
      *      Case Assignment for override process and for undo transfer.

4012      IF WSS-OR-PROCESS-SINGLE-CS-PGM

              INITIALIZE WSI-SU-OR-PGM-IDX

              PERFORM VARYING WSI-SU-OR-PGM-IDX
               FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
               WSI-SU-OR-PGM-IDX  >  WSC-20    OR
      *        LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
      *        SPACES
               WSI-SU-OR-PGM-IDX  >  LNK-CA0001S-TOTAL-MASS-XFERS


               MOVE LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) TO
                    WSH-CUR-PGM-TYP-CD
                    LNK-CA0001S-PGM-TYP-CD
               PERFORM 10265-CHK-PGM-EXISTS

               MOVE WSD-CSLD-ID OF WSD-CS-PGM    TO WSH-CUR-CSLD-ID
               MOVE WSD-EFF-BGN-DT OF WSD-CS-PGM TO
                    LNK-CA0001S-EFF-BGN-DT
               MOVE WSD-UPD-DTM OF WSD-CS-PGM TO
                    LNK-CA0001S-UPD-DTM

               PERFORM 10310-CHK-CSLD-EXIST

               MOVE WSH-CUR-CSLD-ID TO WSH-ORIG-CSLD-ID
               MOVE WSH-CSLD-WRKR TO WSH-ORIG-CSLD-WRKR

               PERFORM 69800-1ST-UPDATE-CS-PGM
               PERFORM 69825-2ND-UPDATE-CS-PGM
               IF WSS-CNTY-PROC-LABOR-MTCH
                  PERFORM 69220-UPDATE-CASE-WEIGHTS
               END-IF

              END-PERFORM

          EXIT PARAGRAPH
4012      END-IF

4012      IF WSS-PROCESS-UNDO-XFER
              PERFORM 69800-1ST-UPDATE-CS-PGM
              PERFORM 69825-2ND-UPDATE-CS-PGM
              IF WSS-CNTY-PROC-LABOR-MTCH
                 PERFORM 69220-UPDATE-CASE-WEIGHTS
              END-IF
              EXIT PARAGRAPH
          END-IF

      **  Following IF Condition Logic is to update the caseload
      *       information for a given Case and Program Type code for Manage
      *       Case Assignment for Sugger User Process.

          IF WSS-SU-PROCESS-SINGLE-CS-PGM
4012  *        PERFORM 69850-SU-UPDATE-CS-PGM

               INITIALIZE WSI-SU-OR-PGM-IDX

               SET  WSS-FS-NOT-PROCESSED   TO TRUE
               SET  WSS-CW-NOT-PROCESSED   TO TRUE

               PERFORM VARYING WSI-SU-OR-PGM-IDX
                FROM WSC-ONE-NUM BY WSC-ONE-NUM UNTIL
                WSI-SU-OR-PGM-IDX  >  WSC-20    OR
      *         LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
      *         SPACES
                WSI-SU-OR-PGM-IDX  >  LNK-CA0001S-TOTAL-MASS-XFERS

                MOVE LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) TO
                     WSH-CUR-PGM-TYP-CD
                     LNK-CA0001S-PGM-TYP-CD
                IF((LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
                    WSC-FS-TYP-CD
                OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)  =
                   WSC-EX-TYP-CD
                OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)  =
                   WSC-DF-TYP-CD)
                AND WSS-FS-NOT-PROCESSED) OR
                  ((LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX) =
                    WSC-CW-TYP-CD
                OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)  =
                    WSC-CD-TYP-CD)
                AND WSS-CW-NOT-PROCESSED) OR
                   (LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)<>
                    WSC-FS-TYP-CD
                AND LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)<>
                    WSC-EX-TYP-CD
                AND LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)<>
                    WSC-DF-TYP-CD
                AND LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)<>
                    WSC-CW-TYP-CD
                AND LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)<>
                    WSC-CD-TYP-CD)

                  PERFORM 69850-SU-UPDATE-CS-PGM

                  IF LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)=
                     WSC-FS-TYP-CD
                  OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)=
                     WSC-EX-TYP-CD
                  OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)=
                     WSC-DF-TYP-CD
                    SET WSS-FS-PROCESSED  TO TRUE
                  END-IF

                  IF LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)=
                     WSC-CW-TYP-CD
                  OR LNK-CA0001S-OR-SU-SI-PGM(WSI-SU-OR-PGM-IDX)=
                     WSC-CD-TYP-CD
                    SET WSS-CW-PROCESSED  TO TRUE
                  END-IF

                END-IF
               END-PERFORM
            EXIT PARAGRAPH
          END-IF

      ** Following IF Logic for      assigning caseload for a given Case
      *      and Program Type code for Employment Services.

          IF WSS-ES-PROCESS-SINGLE-CS-PGM
            PERFORM 30305-XFR-FRM-USR-OFF
            PERFORM 10440-OPEN-C2-CURSOR

            PERFORM 10450-FETCH-C2-CURSOR

            PERFORM 20500-ES-SINGLE-CS-PGM-LOGIC
             UNTIL WSS-END-C2-CURSOR

            PERFORM 69000-SRCH-BEST-CSLD

            EXIT PARAGRAPH
          END-IF


      ** Following IF Logic for      Mass Transfer of Cases based 
      *      on AutoAssignment and/or Transfer all Cases in a Caseload

      ** MX Call from code used on first pass of mass transfers so that
      *  if necessary the error message will be displayed on the window.
      *  The second pass of mass transfer will now be called from a batch
      *  C program CA0001B that will process it as a separate transaction.
      *  This is to correct time-out issues in online when the user was 
      *  trying to transfer > 25 users at a time.  DACR 3014
          IF WSS-MT-TYPES-ASGN
           IF LNK-CA0001S-CALL-FRM-CD = WSC-MX

            PERFORM 30201-SET-IND-VAR

      * This will verify that the user has enough cases to be 
      * transferred by comparing the number that they have to the number
      * that is going to be transferred.  If there aren't enough, we'll
      * table each user id that didn't have enough and pass the information
      * back to the window to let the user performing the mass xfr know.

            IF LNK-CA0001S-XFER-NUM > ZEROES
             PERFORM 30220-VERIFY-NUM-OF-CASES
             VARYING WSI-NUM-CASES-IX FROM 1 BY 1
              UNTIL WSI-NUM-CASES-IX >
                LNK-CA0001S-TOTAL-MASS-XFERS
            END-IF

            IF WSA-ERROR-CNT > 0
             INITIALIZE WSI-NUM-ERRORS-IX

             PERFORM 30245-GET-ERROR-USR-NAME
             VARYING WSI-NUM-CASES-IX FROM 1 BY 1
              UNTIL WSI-NUM-CASES-IX > WSA-ERROR-CNT

             PERFORM 30255-NUM-CASES-ERROR
            END-IF

           ELSE

            INITIALIZE WSH-CUR-USR-ID
            MOVE LNK-CA0001S-XFER-USR-ID TO WSH-CUR-USR-ID
            EVALUATE TRUE
              WHEN WSS-TYPE1-MASS-XFER
             INITIALIZE WSI-MULT-XFR-IX
              PERFORM 30100-TYPE1-MT-LOGIC VARYING WSI-MULT-XFR-IX
                      FROM 1 BY 1
              UNTIL WSI-MULT-XFR-IX GREATER THAN
                    LNK-CA0001S-TOTAL-MASS-XFERS
                
            WHEN WSS-TYPE2-MASS-XFER
             INITIALIZE WSI-MULT-XFR-IX
             PERFORM 30200-TYPE2-4-MT-LOGIC VARYING
                 WSI-MULT-XFR-IX   FROM 1 BY 1
              UNTIL WSI-MULT-XFR-IX GREATER THAN
                      LNK-CA0001S-TOTAL-MASS-XFERS

            WHEN WSS-TYPE3-MASS-XFER
             INITIALIZE WSI-MULT-XFR-IX
             PERFORM 30300-TYPE3-MT-LOGIC VARYING
                     WSI-MULT-XFR-IX FROM 1 BY 1
               UNTIL WSI-MULT-XFR-IX GREATER THAN
                       LNK-CA0001S-TOTAL-MASS-XFERS

            WHEN WSS-TYPE4-MASS-XFER
             INITIALIZE WSI-MULT-XFR-IX
             PERFORM 30200-TYPE2-4-MT-LOGIC VARYING
                     WSI-MULT-XFR-IX FROM 1 BY 1
               UNTIL WSI-MULT-XFR-IX GREATER THAN
                     LNK-CA0001S-TOTAL-MASS-XFERS

4004        WHEN WSS-TYPEC-MASS-XFER
             INITIALIZE WSI-MULT-XFR-IX
             PERFORM 30100-TYPEC-MC-LOGIC VARYING
                     WSI-MULT-XFR-IX FROM 1 BY 1
               UNTIL WSI-MULT-XFR-IX GREATER THAN
4004                LNK-CA0001S-TOTAL-MASS-XFERS
            END-EVALUATE
            EXIT PARAGRAPH
           END-IF
            EXIT PARAGRAPH
          END-IF


      ** Following IF Logic finds the best QC User/Reviewer for a Case
      *      and Program Type code for Quality Control.

          IF WSS-QC-PROCESS-SINGLE-CS-PGM
            PERFORM 40000-FIND-QC-USR
            EXIT PARAGRAPH
          END-IF


      ** Following IF Logic finds the transfer caseload in the
      *  office of CHP+ vendor

2349       IF WSS-PE-PROCESS-SINGLE-CS-PGM
2349           PERFORM 44000-TRANSFER-CHP-ENROL
2349           EXIT PARAGRAPH
2349       END-IF

      ** Following IF Logic finds the transfer caseload in the
      *  office of CHP+ vendor

7043       IF WSS-MA-PROCESS-SINGLE-CS-PGM
7043           PERFORM 45000-TRANSFER-MA-PROGRAM
7043           EXIT PARAGRAPH
7043       END-IF

      ** Following IF Logic to transfer the closed case to the closed
      *      caseload, to the users office previously the case belonged to.

          IF WSS-PROCESS-CL-ASSGN
            PERFORM 42000-PROCESS-CL-ASSGN
            EXIT PARAGRAPH
          END-IF
 
      ** The following IF logic will flag an error if it didn't hit any 
      *  of the previous criteria.

          SET LNK-CA0001S-FAILURE TO TRUE
          MOVE ZEROES TO LNK-SQL-CODE
                         WSL-CALWIN-ERROR-CODE
          STRING 'ERROR IN 20000-APPLICATION-LOGIC' DELIMITED BY SIZE
            WSC-ASTERISK      DELIMITED BY SIZE
            'CALL FROM CODE = ' DELIMITED BY SIZE
            LNK-CA0001S-CALL-FRM-CD DELIMITED BY SIZE
            WSC-ASTERISK      DELIMITED BY SIZE
            'CS-ID = ' DELIMITED BY SIZE
            LNK-CA0001S-CS-ID DELIMITED BY SIZE
            WSC-ASTERISK      DELIMITED BY SIZE
            'PGM-TYP-CD = ' DELIMITED BY SIZE
            LNK-CA0001S-PGM-TYP-CD DELIMITED BY SIZE
            WSC-ASTERISK      DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
          END-STRING
          MOVE LNK-SQL-TEXT TO WSL-MISC-ERROR-TXT
          MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER

          SET WSL-FATAL TO TRUE
          MOVE 500 TO WSL-CALWIN-ERROR-CODE
                      LNK-AA0052C-CALWIN-ERROR-CD
          PERFORM 90000-CLOSE
          .

      ****************************************************************  G
      *** Case Assignment logic for Application Registration Generic    G
      *** Case Assignment
      * *************************************************************** G
       20100-AR-ALL-CS-PGM-LOGIC.
        MOVE '20100-AR-ALL-CS-PGM-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Application
      * Registration Generic Case Assignment

        PERFORM 60000-CASE-ASSIGNMENT-PROCESS

        PERFORM 10420-FETCH-C1-CURSOR
        .

      ****************************************************************  G
      *** Case Assignment Process for Application Registration          G
      ****************************************************************  G
       20200-AR-SNGL-CS-PGM-LOGIC.
        MOVE '20200-AR-SNGL-CS-PGM-LOGIC' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
2349       MOVE WSH-TEMP-USR-ID  TO  WSH-CUR-USR-ID
           CALL 'aa_SvcDebugMessageVar' USING
                BY REFERENCE DBG-PROG-NAME,
                BY VALUE 1,
                BY VALUE 1,
                BY REFERENCE
                "USR ID is: %.15s " & x"00",
                BY REFERENCE WSH-CUR-USR-ID
           END-CALL

           PERFORM 30305-XFR-FRM-USR-OFF

5445        IF WSH-CUR-PGM-TYP-CD = WSC-PE-TYP-CD
5445           PERFORM 20250-AR-PE-CS-PGM-LOGIC
5445C        ELSE
5445C           SET WSS-PE-CSLD-NOT-FOUND TO TRUE
5445        END-IF

5445B        IF WSS-PE-CSLD-NOT-FOUND

      * Perform the Case Assignment Process for the Application
      * Registration for a program by program

4974  * Determine if there are special indicators on the case
4974           PERFORM 10320-CHK-CS-SPL-IND-EXIST

4974  * If there are special indicators on the case
4974           IF WSS-CS-SPL-IND-EXISTS
4974              DISPLAY 'Case has special indicators'
4974                PERFORM 10730-OPEN-C10-CURSOR
4974              PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads found with spl inds
4974              IF WSS-NOT-END-C10-CURSOR
4974              DISPLAY 'Caseloads with spl inds found'
4974              SET WSS-USED-SPL-IND-CUR TO TRUE
4974              PERFORM 20205-AR-CS-PGM-LOGIC
4974                 UNTIL WSS-END-C10-CURSOR

4974  * If there are no caseloads with spl inds found
4974              ELSE
4974              DISPLAY 'No Caseloads with spl inds found'
4974              SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974              PERFORM 10440-OPEN-C2-CURSOR
4974              PERFORM 10450-FETCH-C2-CURSOR
4974              PERFORM 20205-AR-CS-PGM-LOGIC
4974                 UNTIL WSS-END-C2-CURSOR
4974              END-IF

4974  * If the case has no special indicators
4974           ELSE
4974              DISPLAY 'Case has no special indicators'
4974              SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
              PERFORM 10440-OPEN-C2-CURSOR
              PERFORM 10450-FETCH-C2-CURSOR
              PERFORM 20205-AR-CS-PGM-LOGIC
                 UNTIL WSS-END-C2-CURSOR
4974           END-IF
5445        END-IF

        PERFORM 69000-SRCH-BEST-CSLD

           INITIALIZE WSH-CSLD-TBL-ARRAY
                      WSI-CSLD

        PERFORM 10480-FETCH-C3-CURSOR
        .

      ****************************************************************  G
      *** AR Case Program Logic                                         G
      ****************************************************************  G
       20205-AR-CS-PGM-LOGIC.
        MOVE '20205-AR-CS-PGM-LOGIC' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Perform the Case Assignment Process for the Application
      * Registration for a program by program
        SET WSS-ASSGN     TO TRUE

      * If it's the first time through the code and it's a MA Site HLPG, 
      * and the user taking the app isn't an MA Site user, skip over the
      * case assignment process the first time through to save time
        IF  WSS-MASITE-HLPG
        AND NOT WSS-AR-COULD-NOT-ASSGN
        AND NOT WSS-MASITE-OFFICE
            MOVE WSC-MAX-51-CNT TO WSI-CSLD
        ELSE
            PERFORM 60000-CASE-ASSIGNMENT-PROCESS
        END-IF

        IF WSI-CSLD < WSC-MAX-51-CNT
4974           IF WSS-USED-SPL-IND-CUR
4974           PERFORM 10740-FETCH-C10-CURSOR
4974           ELSE
              PERFORM 10450-FETCH-C2-CURSOR
4974           END-IF
        ELSE
4974           IF WSS-USED-SPL-IND-CUR
4974           SET WSS-END-C10-CURSOR TO TRUE
4974           PERFORM 10750-CLOSE-C10-CURSOR
4974           ELSE
              SET WSS-END-C2-CURSOR TO TRUE
              PERFORM 10460-CLOSE-C2-CURSOR
4974           END-IF
        END-IF
        .

      ****************************************************************
      ***                    DACR 5445 START                       ***
      ****************************************************************
      ***New requirement for PE HLPG only - assign to the user     ***
      ***taking the application whenever possible.                 ***
      ****************************************************************
       20250-AR-PE-CS-PGM-LOGIC.
        MOVE '20250-AR-PE-CS-PGM-LOGIC' TO WSL-PARA-NAME
      *TEMP DISPLAY STATEMENTS MJP START
        DISPLAY WSL-PARA-NAME
        DISPLAY 'WSH-CUR-PGM-TYP-CD: ' WSH-CUR-PGM-TYP-CD
        DISPLAY 'WSH-CURRENT-DT: ' WSH-CURRENT-DT
        DISPLAY 'WSH-CUR-CS-MODE-CD: ' WSH-CUR-CS-MODE-CD
        DISPLAY 'WSH-CUR-OFF-ID: ' WSH-CUR-OFF-ID
        DISPLAY 'WSH-CUR-USR-ID: ' WSH-CUR-USR-ID
        INITIALIZE WST-AU-CSLD-ARRAY

           EXEC SQL
            SELECT UNIQUE A.CSLD_ID
           INTO :WST-AU-CSLDS    
              FROM SE_CSLD_PRM_USR  A
               ,SE_CSLD_PGM_TYP  B
               ,SE_CSLD            C
               ,SE_USR_UNT_OFF   D
               ,SE_USR            E
               ,RT_PGM            P
             WHERE P.PGM_CD            = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.PGM_TYP_CD     = P.CS_ASG_PGM
            AND A.CSLD_ID            = B.CSLD_ID
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND E.USR_ID          = A.USR_ID
            AND NVL(E.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                      AND E.NOT_ON_ASG_TO_DT)
                 OR E.NOT_ON_ASG_FRM_DT IS NULL
                 OR E.NOT_ON_ASG_TO_DT IS NULL
                )
            AND C.CSLD_ID          = B.CSLD_ID
            AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
            AND C.HAS_CS_SW    = :WSC-YES
            AND D.USR_ID          = E.USR_ID
            AND D.USR_ID          = A.USR_ID
            AND D.PRM_SW          = :WSC-YES
            AND D.OFF_ID          = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
            AND C.OFF_ID       = D.OFF_ID
            AND A.USR_ID          = RTRIM(:WSH-CUR-USR-ID)
            AND ROWNUM = 1
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
                   IF WST-AU-CSLD-ID(1) <> WSC-ZERO
                        MOVE WST-AU-CSLD-ID(1) 
                 TO WSH-CSLD-ID-MTCH(1)
                        MOVE WSH-CUR-CS-ID TO WSH-CS-ID-MTCH(1)
                        MOVE WSH-CUR-PGM-TYP-CD 
                 TO WSH-PGM-TYP-CD-MTCH(1)
                        MOVE WSH-CUR-USR-ID TO WSH-USR-ID-MTCH(1)
5445A                 SET WSS-PE-CSLD-FOUND TO TRUE
5445A             ELSE
5445A                 SET WSS-PE-CSLD-NOT-FOUND TO TRUE
             END-IF

            WHEN OTHER
             MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                   MOVE WSC-513                 TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING AU CASELOAD COUNT'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             SET WSL-FATAL          TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
         END-EVALUATE
            .
      ****************************************************************
      ***                      DACR 5445 END                       ***
      ****************************************************************

      ****************************************************************  G
      *** AU single Case Program Logic                                  G
      ****************************************************************  G
       20300-AU-SINGLE-CS-PGM-LOGIC.
        MOVE '20300-AU-SINGLE-CS-PGM-LOGIC' TO WSL-PARA-NAME
            DISPLAY WSL-PARA-NAME
         DISPLAY 'SAME WORKER SW: ' WSS-SAME-WRKR-AU-SW
      *    PERFORM 89999-DISPLAY-PARA
      * Perform the Case Assignment Process for the Authorization

        PERFORM 60000-CASE-ASSIGNMENT-PROCESS

        IF WSI-CSLD < WSC-MAX-51-CNT
            IF WSS-SAME-WRKR-NOT-ASSGND
4974            IF WSS-USED-SPL-IND-CUR
4974               PERFORM 10740-FETCH-C10-CURSOR
4974            ELSE
                  PERFORM 10450-FETCH-C2-CURSOR
4974            END-IF
            ELSE
            PERFORM 10710-FETCH-C9-CURSOR
            END-IF
        ELSE
            IF WSS-SAME-WRKR-NOT-ASSGND
4974            IF WSS-USED-SPL-IND-CUR
4974               SET WSS-END-C10-CURSOR TO TRUE
4974               PERFORM 10750-CLOSE-C10-CURSOR
4974            ELSE
                  SET WSS-END-C2-CURSOR TO TRUE
                  PERFORM 10460-CLOSE-C2-CURSOR
4974            END-IF
            ELSE
            SET WSS-END-C9-CURSOR TO TRUE
            PERFORM 10720-CLOSE-C9-CURSOR
            END-IF
        END-IF
        .

      ****************************************************************
      ***                                                          ***
      *** Count the number of caseloads that a specific user has   ***
      *** that matches all the caseload criteria from the C9 cur.  ***
      *** Used to determine if the authorized HLPG can be assgnd   ***
      *** to the same usr for ongoing as intake.  DACR 3415        ***
      ***                                                          ***
      ****************************************************************
       20350-CHK-SAME-WRKR-ASSGN.
        MOVE '20350-CHK-SAME-WRKR-ASSGN' TO WSL-PARA-NAME
      *TEMP DISPLAY STATEMENTS MJP START
        DISPLAY WSL-PARA-NAME
        DISPLAY 'WSH-CUR-PGM-TYP-CD: ' WSH-CUR-PGM-TYP-CD
        DISPLAY 'WSH-CURRENT-DT: ' WSH-CURRENT-DT
        DISPLAY 'WSH-CUR-CS-MODE-CD: ' WSH-CUR-CS-MODE-CD
        DISPLAY 'WSH-CUR-OFF-ID: ' WSH-CUR-OFF-ID
        DISPLAY 'WSH-CSLD-WRKR: ' WSH-CSLD-WRKR
      *    PERFORM 89999-DISPLAY-PARA
           EXEC SQL
            SELECT UNIQUE A.CSLD_ID
           INTO :WST-AU-CSLDS    
              FROM SE_CSLD_PRM_USR  A
               ,SE_CSLD_PGM_TYP  B
               ,SE_CSLD            C
               ,SE_USR_UNT_OFF   D
               ,SE_USR            E
               ,RT_PGM            P
             WHERE P.PGM_CD            = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.PGM_TYP_CD     = P.CS_ASG_PGM
            AND A.CSLD_ID            = B.CSLD_ID
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND E.USR_ID          = A.USR_ID
            AND NVL(E.OUTSTN_USR_SW, :WSC-NO)      <> :WSC-YES
            AND ((TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 NOT BETWEEN E.NOT_ON_ASG_FRM_DT
                      AND E.NOT_ON_ASG_TO_DT)
                 OR E.NOT_ON_ASG_FRM_DT IS NULL
                 OR E.NOT_ON_ASG_TO_DT IS NULL
                )
            AND C.CSLD_ID          = B.CSLD_ID
            AND C.CSLD_MODE_CD = :WSH-CUR-CS-MODE-CD
            AND C.HAS_CS_SW    = :WSC-YES
            AND D.USR_ID          = E.USR_ID
            AND D.USR_ID          = A.USR_ID
            AND D.PRM_SW          = :WSC-YES
            AND D.OFF_ID          = NVL(:WSH-CUR-OFF-ID,C.OFF_ID)
            AND C.OFF_ID       = D.OFF_ID
            AND A.USR_ID          = RTRIM(:WSH-CSLD-WRKR)
            END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
                   IF WST-AU-CSLD-ID(1) <> WSC-ZERO
                 SET WSS-SAME-WRKR-ASSGND TO TRUE
             ELSE
                 SET WSS-SAME-WRKR-NOT-ASSGND TO TRUE
             END-IF

            WHEN OTHER
             MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                   MOVE WSC-513                 TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING AU CASELOAD COUNT'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             SET WSL-FATAL          TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
         END-EVALUATE

         SET WSS-NO-AU-MTCH TO TRUE

         IF WSS-SAME-WRKR-ASSGND
          PERFORM 20375-CHECK-ALPHA-BREAKDOWN 
             VARYING WSI-AU-IDX FROM 1 BY 1
             UNTIL (WST-AU-CSLD-ID(WSI-AU-IDX) = WSC-ZERO)
             OR WSI-AU-IDX = WSC-26
             OR WSS-AU-MTCH-FND
         END-IF

4501  *If the same worker can be assigned, check to make sure that
4501  *they haven't reached the max crdt limit
               IF WSS-SAME-WRKR-ASSGND
          SET WSS-CHK-AU-MAX-CRDT TO TRUE
                 MOVE WSH-CUR-USR-ID TO WSH-TEMP-USR-ID
                    MOVE WSH-CSLD-WRKR  TO WSH-CUR-USR-ID
                    PERFORM 60510-CHECK-USR-ONGOING-CRDT
          SET WSS-NO-CHK-AU-MAX-CRDT TO TRUE
                    IF WSS-MAX-CRDT-NOT-RCH
                   SET WSS-SAME-WRKR-ASSGND TO TRUE
                    ELSE
                   SET WSS-SAME-WRKR-NOT-ASSGND TO TRUE
                    END-IF
                    MOVE WSH-TEMP-USR-ID TO WSH-CUR-USR-ID
               END-IF
            .

      ****************************************************************  G
      *** Verify that the user can take the program in ongoing          G
      *** by checking their alpha breakdown to the case last name.      G
      ****************************************************************  G
       20375-CHECK-ALPHA-BREAKDOWN.
        MOVE '20375-CHECK-ALPHA-BREAKDOWN' TO WSL-PARA-NAME
        DISPLAY WSL-PARA-NAME
        DISPLAY 'CSLD ID: ' WST-AU-CSLD-ID(WSI-AU-IDX)

5338  * Make sure we're using the current user assigned to check this,
5338  * not the usr_id of the person performing the authorization
5338         MOVE WSH-CUR-USR-ID TO WSH-TEMP-USR-ID
5338         MOVE WSH-CSLD-WRKR  TO WSH-CUR-USR-ID

      * Get the last name on the case for verifying alpha breakdown

        PERFORM 60610-GET-CASE-LAST-NAME

        DISPLAY 'CASE LAST NAME: ' WSH-CS-LAST-NAME

      * Verify that they user doen't have alpha breakdown that would
      * prevent them from being able to take the case.

        MOVE WST-AU-CSLD-ID(WSI-AU-IDX) TO WSH-TEMP-CSLD-ID

        PERFORM 60600-VERIFY-ALPHA-ASSIGNMENT

        IF WSS-ALPHA-MTCH
          DISPLAY 'ALPHA MATCH'
        ELSE
          DISPLAY 'NO ALPHA MATCH'
        END-IF
 
      * If the user doesn't have English language assigned in their
      * security or they don't have a language match between their
      * security and the case primary language, they cannot take the case.

        PERFORM 60100-VERIFY-CS-USR-LANG

        IF WSS-USR-LANG-MATCH
          DISPLAY 'SAME LANG MATCH'
        ELSE
          DISPLAY 'DIFF LANG'
        END-IF

        PERFORM 60110-CHK-USR-ENG-LANG

        IF WSS-USR-ENG-LANG-MTCH
          DISPLAY 'ENG LANG MATCH'
        ELSE
          DISPLAY 'NO ENG MATCH'
        END-IF

        IF (WSS-ALPHA-MTCH AND
           (WSS-USR-ENG-LANG-MTCH OR 
            WSS-USR-LANG-MATCH))
          SET WSS-SAME-WRKR-ASSGND TO TRUE
          SET WSS-AU-MTCH-FND TO TRUE
        ELSE
          SET WSS-SAME-WRKR-NOT-ASSGND TO TRUE
        END-IF

5338  * Reset the usr_id back to the logged in user
5338         MOVE WSH-TEMP-USR-ID TO WSH-CUR-USR-ID
        .

      ****************************************************************  G
      *** Suggest User Inquiry Case Program logic                       G
      ****************************************************************  G
       20400-SI-SNGL-CS-PGM-LOGIC.
        MOVE '20400-SI-SNGL-CS-PGM-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Suggest User Inquiry

        PERFORM 60000-CASE-ASSIGNMENT-PROCESS

        IF WSI-CSLD < WSC-MAX-51-CNT
4974 **        IF WSS-USED-SPL-IND-CUR
4974 **           PERFORM 10740-FETCH-C10-CURSOR
4974 **        ELSE
     **           PERFORM 10450-FETCH-C2-CURSOR
4974 **        END-IF
               CONTINUE
           ELSE
4974 **        IF WSS-USED-SPL-IND-CUR
4974 **           SET WSS-END-C10-CURSOR TO TRUE
4974 **           PERFORM 10750-CLOSE-C10-CURSOR
4974 **        ELSE
     **           SET WSS-END-C2-CURSOR TO TRUE
     **           PERFORM 10460-CLOSE-C2-CURSOR
4974 **        END-IF
               SET WSS-SKIP-PGM-LOOP TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Employment Services single case program logic                 G
      ****************************************************************  G
       20500-ES-SINGLE-CS-PGM-LOGIC.
        MOVE '20500-ES-SINGLE-CS-PGM-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Employment Services

        PERFORM 60000-CASE-ASSIGNMENT-PROCESS

        PERFORM 10450-FETCH-C2-CURSOR
        .

      ****************************************************************  G
      *** Type 1 Mass Transfer Type logic                               G
      ****************************************************************  G
       30100-TYPE1-MT-LOGIC.
        MOVE '30100-TYPE1-MT-LOGIC' TO WSL-PARA-NAME
        MOVE SPACES TO LNK-CA0001S-PGM-STS-CD

      * Perform the Case Assignment Process for the Mass Transfer Typ 1
           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZERO
              MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO 
              WSH-CUR-USR-ID
        END-IF

        PERFORM 10500-OPEN-C4-CURSOR

        PERFORM 10510-FETCH-C4-CURSOR

        IF WSS-END-C4-CURSOR
5707            ADD +1 TO WSH-MT-ERR-COUNT
            SET LNK-CA0001S-NO-XFR       TO TRUE

            MOVE SPACES TO  LNK-SQL-TEXT
                      WSL-MISC-ERROR-TXT

            STRING 'No Cases exist in '  DELIMITED BY SIZE
                 WSH-CUR-USR-ID         DELIMITED BY '  '
                 "'"              DELIMITED BY SIZE
                 's Caseload.'         DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING

               STRING
                  'USR_ID CSLD_ID PGM_CD, SE_CSLD_PRM_USR '
                  DELIMITED BY SIZE,
                  'CS_PGM RT_PGM'
                  DELIMITED BY SIZE
               INTO
                  LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
            MOVE LNK-SQL-TEXT         TO WSL-MISC-ERROR-TXT
            MOVE '10510-FETCH-C4-CURSOR' TO WSL-PARA-NAME
            MOVE WSC-NOT-FOUND         TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
               MOVE WSC-500                 TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
5707            SET  WSL-INFORMATIONAL         TO TRUE
5707               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
5707            MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
5707            MOVE LNK-AA0052C-USR-ID
5707               TO WSL-ADDL-KEY-2
5707            MOVE WSH-CUR-PGM-TYP-CD 
5707              TO WSL-ADDL-KEY-3
5707            SET WSL-CS              TO TRUE
5707            PERFORM 91000-ERROR
5707        ELSE
            PERFORM 30150-TYPE1-ASGN-LOGIC
                      UNTIL WSS-END-C4-CURSOR

            IF WSS-POPULATE-XFR-ARRAY
                      PERFORM 30170-POPL-FINAL-XFR-DATA
            END-IF

5707A * Commit final update if no error
5707A            IF WSS-NO-MT-ERR
5707A              PERFORM 75000-COMMIT
5707A            END-IF
        END-IF
        .

      ****************************************************************  G
      *** Type C Mass Transfer Type logic                               G
      ****************************************************************  G
4004   30100-TYPEC-MC-LOGIC.
           MOVE '30100-TYPEC-MC-LOGIC' TO WSL-PARA-NAME
           MOVE SPACES TO LNK-CA0001S-PGM-STS-CD

      * Perform the Case Assignment Process for the Mass Transfer Typ C
           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZERO
              MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO
              WSH-CUR-USR-ID
           END-IF

      * Move 100 cases in the linkage section to working storage

           INITIALIZE WST-CS-ID-ARRAY

           PERFORM VARYING WSI-MC-IDX FROM 1 BY 1
               UNTIL WSI-MC-IDX > WSC-100  OR
                     LNK-CA0001S-MC-CASEID(WSI-MC-IDX) = SPACES
               MOVE  LNK-CA0001S-MC-CASEID(WSI-MC-IDX)  TO
                     WST-CASES(WSI-MC-IDX)
           END-PERFORM

           PERFORM 10760-OPEN-MC-CURSOR

           PERFORM 10770-FETCH-MC-CURSOR

           IF WSS-END-MC-CURSOR
               ADD +1 TO WSH-MT-ERR-COUNT
               SET LNK-CA0001S-NO-XFR     TO TRUE

               MOVE SPACES TO  LNK-SQL-TEXT
                               WSL-MISC-ERROR-TXT

               STRING 'No Cases exist in '  DELIMITED BY SIZE
                       WSH-CUR-USR-ID       DELIMITED BY '  '
                       "'"                  DELIMITED BY SIZE
                       's Caseload.'        DELIMITED BY SIZE
               INTO LNK-SQL-TEXT
               END-STRING

               STRING
                  'USR_ID CSLD_ID PGM_CD, SE_CSLD_PRM_USR '
                  DELIMITED BY SIZE,
                  'CS_PGM RT_PGM'
                  DELIMITED BY SIZE
               INTO
                  LNK-AA0052C-CALWIN-ERROR-TEXT
               END-STRING
               MOVE LNK-SQL-TEXT            TO WSL-MISC-ERROR-TXT
               MOVE '10770-FETCH-MC-CURSOR' TO WSL-PARA-NAME
               MOVE WSC-NOT-FOUND           TO LNK-SQL-CODE
                                               WSL-ERROR-VALUE
               MOVE WSC-500                 TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
               SET  WSL-INFORMATIONAL       TO TRUE
               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
               MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
               MOVE LNK-AA0052C-USR-ID
                    TO WSL-ADDL-KEY-2
               MOVE WSH-CUR-PGM-TYP-CD
                    TO WSL-ADDL-KEY-3
               SET WSL-CS                   TO TRUE
               PERFORM 91000-ERROR
           ELSE
               PERFORM 30150-TYPEC-ASGN-LOGIC
                        UNTIL WSS-END-MC-CURSOR

               IF WSS-POPULATE-XFR-ARRAY
                        PERFORM 30170-POPL-FINAL-XFR-DATA
               END-IF

      * Commit final update if no error
               IF WSS-NO-MT-ERR
                    PERFORM 75000-COMMIT
               END-IF
           END-IF
           .
4004

4004  ****************************************************************  G
4004  *** TypeC Assignment logic                                        G
4004  ****************************************************************  G
4004   30150-TYPEC-ASGN-LOGIC.
           MOVE '30150-TYPEC-ASGN-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Mass Transfer Type C

           PERFORM 30155-TYPE1-ASGN-1ST-UPD

           IF WSS-NO-MT-ERR
              PERFORM 30160-TYPE1-ASGN-2ND-UPD
              IF WSS-MT-ERR
                 PERFORM 75001-ROLLBACK
                 SET WSS-NO-MT-ERR TO TRUE
              ELSE

                 IF WSS-POPULATE-XFR-ARRAY
                    PERFORM 30165-POPL-XFRED-CS-ARRAY
                 END-IF

      * DACR 3944 - Perform commit after each logical transaction
                 PERFORM 75000-COMMIT
              END-IF
           ELSE
              PERFORM 75001-ROLLBACK
              SET WSS-NO-MT-ERR TO TRUE
           END-IF

           PERFORM 10770-FETCH-MC-CURSOR
           .
4004

      ****************************************************************  G
      *** Type1 Assignment logic                                        G
      ****************************************************************  G
       30150-TYPE1-ASGN-LOGIC.
        MOVE '30150-TYPE1-ASGN-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Mass Transfer Type 1

        PERFORM 30155-TYPE1-ASGN-1ST-UPD

5707        IF WSS-NO-MT-ERR
           PERFORM 30160-TYPE1-ASGN-2ND-UPD
5707           IF WSS-MT-ERR
5707           PERFORM 75001-ROLLBACK
5707           SET WSS-NO-MT-ERR TO TRUE
5707           ELSE

              IF WSS-POPULATE-XFR-ARRAY
                 PERFORM 30165-POPL-XFRED-CS-ARRAY
              END-IF

      * DACR 3944 - Perform commit after each logical transaction
              PERFORM 75000-COMMIT
5707           END-IF
5707        ELSE
5707           PERFORM 75001-ROLLBACK
5707           SET WSS-NO-MT-ERR TO TRUE
5707        END-IF

        PERFORM 10510-FETCH-C4-CURSOR
        .

      ****************************************************************  G
      *** Type1 Assignment first update                                 G
      ****************************************************************  G
       30155-TYPE1-ASGN-1ST-UPD.
        MOVE '30155-TYPE1-ASGN-1ST-UPD' TO WSL-PARA-NAME

      * Update the Case Program Entity with Caseload Transfer Date and
      * Caseload Transfer Reason

        SET WSS-1ST-UPDATE-CS-PGM TO TRUE

        PERFORM 69995-CALL-CS-PGM-INIT
           PERFORM 69840-GET-XFR-DTM
5707          PERFORM 69830-GET-FETCH-DTM
        PERFORM 10340-GET-PGM-STS-CD

        INITIALIZE WSH-CUR-PGM-TYP-CD
        MOVE WSH-CUR-PGM-TYP-CD-TBL TO WSH-CUR-PGM-TYP-CD

        MOVE WSH-CUR-CS-ID      TO WSD-CS-ID       OF WSD-CS-PGM
        MOVE WSH-CUR-PGM-TYP-CD TO WSD-PGM-TYP-CD  OF WSD-CS-PGM
                        LNK-CA0001S-PGM-TYP-CD
        MOVE WSH-CUR-EFF-BGN-DT TO WSD-EFF-BGN-DT  OF WSD-CS-PGM
                          WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
        MOVE WSH-CURRENT-DTM    TO WSD-CSLD-XFR-DT OF WSD-CS-PGM
        MOVE WSH-CUR-UPD-DTM    TO LNK-CA0001S-UPD-DTM
        MOVE WSC-MASS-XFER-OVR-RSN
                       TO WSD-CSLD-XFR-RSN-CD OF WSD-CS-PGM
        MOVE LNK-CA0001S-PGM-STS-CD TO WSD-PGM-STS-CD OF WSD-CS-PGM

        MOVE WSH-CUR-EFF-END-DT TO WSD-EFF-END-DT   OF WSD-CS-PGM

        IF  WSH-CUR-EFF-END-DT <> WSC-HIGH-DT
            MOVE ZEROES        TO WSD-EFF-END-DT-I OF WSD-CS-PGM
        ELSE
            MOVE -1              TO WSD-EFF-END-DT-I OF WSD-CS-PGM
        END-IF

        MOVE ZEROES     TO WSD-CS-ID-I           OF WSD-CS-PGM
                  WSD-PGM-TYP-CD-I      OF WSD-CS-PGM
                  WSD-EFF-BGN-DT-I      OF WSD-CS-PGM
                  WSD-CSLD-XFR-RSN-CD-I OF WSD-CS-PGM
                  WSD-CSLD-XFR-DT-I      OF WSD-CS-PGM
                  WSD-OLD-EFF-BGN-DT-I  OF WSD-CS-PGM
                  WSD-PGM-STS-CD-I      OF WSD-CS-PGM

        MOVE -2     TO WSD-APP-ID-I           OF WSD-CS-PGM
                  WSD-PGM-REQ-DT-I      OF WSD-CS-PGM
                  WSD-STS-DT-I           OF WSD-CS-PGM
                  WSD-CSLD-ID-I      OF WSD-CS-PGM
                  WSD-CRT-USR-ID-I      OF WSD-CS-PGM
                  WSD-CRT-DTM-I      OF WSD-CS-PGM
                  WSD-LAST-RTRV-DT-I      OF WSD-CS-PGM
                  WSD-APP-OVRRDE-DT-I      OF WSD-CS-PGM
                  WSD-APP-OVRRDE-RSN-CD-I OF WSD-CS-PGM


      * This section will get the current caseload and caseload
      * worker which is needed to determine if we are to generate
      * some of the notices and interface trigger.  Since there
      * are potentially multiple pgm typ cds being reassigned, we
      * need to do this in each iteration of the loop.

        PERFORM 10305-GET-CUR-CSLD-ID
        PERFORM 10310-CHK-CSLD-EXIST
        MOVE WSH-CUR-CSLD-ID TO WSH-ORIG-CSLD-ID
        MOVE WSH-CSLD-WRKR TO WSH-ORIG-CSLD-WRKR
        MOVE LNK-CA0001S-ASSGN-TO-CSLD TO WSH-CUR-CSLD-ID
 
        PERFORM 70000-UPDATE-CSLD-INFO
        .

      ****************************************************************  G
      *** TYPE1 assignment 2nd update                                   G
      ****************************************************************  G
       30160-TYPE1-ASGN-2ND-UPD.
        MOVE '30160-TYPE1-ASGN-2ND-UPD' TO WSL-PARA-NAME

      * Update the Case Program Entity with Caseload id

        SET WSS-2ND-UPDATE-CS-PGM TO TRUE

        PERFORM 69830-GET-FETCH-DTM

        MOVE WSD-UPD-DTM OF WSD-CS-PGM TO LNK-CA0001S-UPD-DTM

        PERFORM 69995-CALL-CS-PGM-INIT

        MOVE WSH-CUR-CS-ID      TO WSD-CS-ID        OF WSD-CS-PGM
        MOVE WSH-CUR-PGM-TYP-CD TO WSD-PGM-TYP-CD   OF WSD-CS-PGM
        MOVE LNK-CA0001S-ASSGN-TO-CSLD
                       TO WSD-CSLD-ID      OF WSD-CS-PGM
        MOVE WSH-CURRENT-DT     TO WSD-EFF-BGN-DT   OF WSD-CS-PGM

        MOVE WSH-CUR-EFF-BGN-DT TO LNK-CA0001S-EFF-BGN-DT

        PERFORM 69835-GET-DIFF-IN-DT

           IF WSH-DIFF-IN-DT-NUM = ZERO
            MOVE -1            TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
        ELSE
            MOVE ZEROES     TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
            MOVE LNK-CA0001S-EFF-BGN-DT
                      TO WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
        END-IF

        MOVE WSH-CUR-EFF-END-DT TO WSD-EFF-END-DT   OF WSD-CS-PGM

        IF  WSH-CUR-EFF-END-DT <> WSC-HIGH-DT
            MOVE ZEROES        TO WSD-EFF-END-DT-I OF WSD-CS-PGM
        ELSE
            MOVE -1             TO WSD-EFF-END-DT-I OF WSD-CS-PGM
            MOVE SPACES        TO WSD-EFF-END-DT   OF WSD-CS-PGM
        END-IF

        MOVE ZEROES             TO WSD-CS-ID-I      OF WSD-CS-PGM
                          WSD-PGM-TYP-CD-I OF WSD-CS-PGM
                          WSD-EFF-BGN-DT-I OF WSD-CS-PGM
                          WSD-CSLD-ID-I    OF WSD-CS-PGM

        MOVE -1             TO WSD-CSLD-XFR-RSN-CD-I
                          WSD-CSLD-XFR-DT-I

        PERFORM 70000-UPDATE-CSLD-INFO

4993        IF  WSS-CNTY-PROC-LABOR-MTCH 
4993        AND WSS-ASSGN
            PERFORM 69220-UPDATE-CASE-WEIGHTS
        END-IF
        .

      ****************************************************************  G
      *** Populate transferred case array                               G
      ****************************************************************  G
       30165-POPL-XFRED-CS-ARRAY.
        MOVE '30165-POPL-XFRED-CS-ARRAY' TO WSL-PARA-NAME.

      * Populate the Linkage variable for each caseload that are
      * transferred

        COMPUTE WSI-XFR-IX  =   WSI-XFR-IX + WSC-ONE
           END-COMPUTE

        MOVE WSH-CUR-CS-ID        TO
            LNK-CA0001S-XFR-CS-ID(WSI-XFR-IX)
        MOVE WSH-CUR-PGM-TYP-CD TO
            LNK-CA0001S-XFR-PGM-TYP-CD(WSI-XFR-IX)
        MOVE LNK-CA0001S-ASSGN-TO-CSLD  TO
            LNK-CA0001S-XFR-CSLD-ID(WSI-XFR-IX)
        .

      ****************************************************************  G
      *** Populate final transferred data                               G
      ****************************************************************  G
       30170-POPL-FINAL-XFR-DATA.
        MOVE '30170-POPL-FINAL-XFR-DATA' TO WSL-PARA-NAME

      * Populate the Linkage variable for each caseload that are
      * transferred including the case name and caseload name

        PERFORM VARYING WSI-XFR-IX FROM 1 BY 1
            UNTIL(LNK-CA0001S-XFR-CSLD-ID(WSI-XFR-IX) = ZEROES)
            OR
              (LNK-CA0001S-XFR-CS-ID(WSI-XFR-IX) = SPACES)
                  OR WSI-XFR-IX > WSC-101

            MOVE LNK-CA0001S-XFR-CS-ID(WSI-XFR-IX) TO
              WSH-CUR-CS-ID
            MOVE LNK-CA0001S-XFR-CSLD-ID(WSI-XFR-IX) TO
              WSH-CUR-CSLD-ID

            IF WSH-CUR-CS-ID <> WSH-TEMP-CS-ID
             MOVE WSH-CUR-CS-ID TO WSH-TEMP-CS-ID

             INITIALIZE WSH-XFR-CS-FUL-NM
      * Select concatenated name from Case table
             EXEC SQL
                 SELECT
                  RPAD(
                  (LAST_NM        ||
                  ', '             ||
                  FIRST_NM        ||
                  ' '             ||
                  MI             ||
                  ' '             ||
                  NM_SUFX), 55,' ')
                 INTO
                  :WSH-XFR-CS-FUL-NM
                 FROM
                  CS
                 WHERE
                  CS_ID = :WSH-CUR-CS-ID
                 AND EFF_BGN_DT <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                 AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             END-EXEC

             EVALUATE SQLCODE
                 WHEN WSC-SQL-OK
                  CONTINUE

                 WHEN OTHER
                   MOVE SQLCODE     TO LNK-SQL-CODE
                              WSL-ERROR-VALUE
                            MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                            MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   MOVE 'ERROR SELECTING CS'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL         TO TRUE
                   MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
             END-EVALUATE
            END-IF

            MOVE WSH-XFR-CS-FUL-NM TO
              LNK-CA0001S-XFR-CS-NM(WSI-XFR-IX)


            IF WSH-CUR-CSLD-ID <> WSH-TEMP-CSLD-ID
             MOVE WSH-CUR-CSLD-ID TO WSH-TEMP-CSLD-ID

             INITIALIZE WSH-XFR-USR-FUL-NM

      * Select concatenated name from User table
               EXEC SQL
                SELECT
                    RPAD(
                    (B.LAST_NM          ||
                    ', '               ||
                    B.FIRST_NM          ||
                    ' '               ||
                    B.MI               ||
                    ' '               ||
                    B.NM_SUFX), 55,' ')
                INTO
                    :WSH-XFR-USR-FUL-NM
                FROM
                    SE_CSLD_PRM_USR A
                   ,SE_USR B
                WHERE
                   A.CSLD_ID = :WSH-CUR-CSLD-ID
                  AND A.EFF_BGN_DT <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND B.USR_ID = A.USR_ID
              END-EXEC

              EVALUATE SQLCODE
                WHEN WSC-SQL-OK
                CONTINUE
                WHEN OTHER
                 MOVE SQLCODE     TO LNK-SQL-CODE
                       WSL-ERROR-VALUE
                       MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                                LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR CONCATENATING USER NAME'
                          TO WSL-MISC-ERROR-TXT
                    LNK-SQL-TEXT
                       MOVE SPACES TO
                                LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL            TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
              END-EVALUATE

            END-IF

            MOVE WSH-XFR-USR-FUL-NM TO
              LNK-CA0001S-XFR-USR-NM(WSI-XFR-IX)

        END-PERFORM
        .

      ****************************************************************  G
      *** Mass Transfer type 2 and 4 logic                              G
      ****************************************************************  G
       30200-TYPE2-4-MT-LOGIC.
        MOVE '30200-TYPE2-4-MT-LOGIC' TO WSL-PARA-NAME

      * DACR 4439 - status code should not be blanked out.  It keeps MT
      * from correctly transferring cases based on status.
      *
4439  *   MOVE SPACES TO LNK-CA0001S-PGM-STS-CD
        MOVE ZEROES TO WSA-TYPE2-FTCH-CNT
                  WSA-TYPE4-FTCH-CNT
                 WSA-ERROR-CNT
                 WSI-NUM-ERRORS-IX

        PERFORM 30201-SET-IND-VAR
 

      * Perform the Case Assignment Process for the Mass Transfer Type 2
      * and 4
           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZERO
          MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO 
                WSH-CUR-USR-ID
        END-IF
 
        IF  LNK-CA0001S-XFER-NUM = ZEROES AND
            LNK-CA0001S-XFER-PCT > ZEROES

            PERFORM 30205-CONV-PCT-CS-NUM
        END-IF

        IF LNK-CA0001S-XFER-SPL-IND = SPACES

5707  * Need to set cursor sw for spl ind's to end to correct defect 
5707  * later in the code
5707            SET WSS-END-C6-CURSOR TO TRUE

            PERFORM 10530-OPEN-C5-CURSOR
            PERFORM 10540-FETCH-C5-CURSOR

            IF WSS-END-C5-CURSOR
            MOVE '10540-FETCH-C5-CURSOR' TO WSL-PARA-NAME
            PERFORM 30206-POPL-MT-ERROR-MSG
            END-IF

            IF WSS-TYPE2-MASS-XFER
            PERFORM 30210-TYPE2-ASGN-LOGIC
                 UNTIL WSS-END-C5-CURSOR
            ELSE
            PERFORM 30410-TYPE4-ASGN-LOGIC
                 UNTIL WSS-END-C5-CURSOR
            END-IF
        ELSE

5707  * Need to set cur sw for NO spl ind's to end to correct defect 
5707  * later in the code
5707            SET WSS-END-C5-CURSOR TO TRUE

4439            MOVE LNK-CA0001S-XFER-SPL-IND TO WSH-CUR-SPL-IND
            PERFORM 10620-OPEN-C6-CURSOR
            PERFORM 10630-FETCH-C6-CURSOR

            IF WSS-END-C6-CURSOR
            MOVE '10630-FETCH-C6-CURSOR' TO WSL-PARA-NAME
            PERFORM 30206-POPL-MT-ERROR-MSG
            END-IF

            IF WSS-TYPE2-MASS-XFER
             PERFORM 30210-TYPE2-ASGN-LOGIC
                  UNTIL WSS-END-C6-CURSOR
            ELSE
             PERFORM 30410-TYPE4-ASGN-LOGIC
                 UNTIL WSS-END-C6-CURSOR
            END-IF
        END-IF

        IF WSS-POPULATE-XFR-ARRAY
            PERFORM 30170-POPL-FINAL-XFR-DATA
        END-IF

5707A * Commit final update if no error
5707A        IF WSS-NO-MT-ERR
5707A          PERFORM 75000-COMMIT
5707A        END-IF
        .

      ****************************************************************  G
      *** Set Indicator Variable                                        G
      ****************************************************************  G
       30201-SET-IND-VAR.
        MOVE '30201-SET-IND-VAR' TO WSL-PARA-NAME

      * Set the Indicator variable to select the number of cases to be
      * transferred

        IF LNK-CA0001S-XFER-LANG = SPACES
            MOVE -1 TO WSH-PRM-LANG-I
        ELSE
            MOVE LNK-CA0001S-XFER-LANG TO WSH-CUR-PRM-LANG-CD
               MOVE ZERO TO WSH-PRM-LANG-I
4993            SET WSS-CHECK-HLPG TO TRUE
        END-IF

5707  * Changed to used saved off linkage pgm typ cd as the linkage
5707  * variable was being overwritten in later processing and then
5707  * causing subsequent user's data to be transferred by 
5707  * pgm typ cd erroneously
5707        IF WSH-MT-PGM-TYP-CD = SPACES
            MOVE -1 TO WSH-PGM-TYP-I
        ELSE
            MOVE WSH-MT-PGM-TYP-CD TO WSH-CUR-PGM-TYP-CD
               MOVE ZERO TO WSH-PGM-TYP-I
4993            SET WSS-CHECK-HLPG TO TRUE
        END-IF

5707        IF WSH-MT-PGM-STS-CD = SPACES
            MOVE -1 TO WSH-PGM-STS-I
        ELSE
5707            MOVE WSH-MT-PGM-STS-CD TO WSH-CUR-CS-STS-CD
               MOVE ZERO TO WSH-PGM-STS-I
4993            SET WSS-CHECK-HLPG TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Convert the percentage into the number of case programs       G
      ****************************************************************  G
       30205-CONV-PCT-CS-NUM.
        MOVE '30205-CONV-PCT-CS-NUM' TO WSL-PARA-NAME

      * If the Transfer is by Percentage, convert the percentage into
      * the number of case programs to be tranferred.

        INITIALIZE WSH-CS-COUNT

        IF LNK-CA0001S-XFER-SPL-IND = SPACES
      * Select Case count
            EXEC SQL
             SELECT
                 COUNT(DISTINCT(A.CS_ID))
             INTO
                 :WSH-CS-COUNT
             FROM
               CS_PGM              A
                 ,CS              B
                 ,SE_CSLD_PRM_USR         D
                 ,RT_PGM              P
             WHERE
                 D.USR_ID            = RTRIM(:WSH-CUR-USR-ID)
             AND D.EFF_BGN_DT    <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND A.CSLD_ID     = D.CSLD_ID
             AND P.CS_ASG_PGM     =
      *          NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
      *          NVL(:WSH-CUR-PGM-TYP-CD
                NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
                  ,P.CS_ASG_PGM)
             AND A.PGM_STS_CD     =
      *          NVL(:WSH-CUR-PGM-STS-CD:WSH-PGM-STS-I
      *          NVL(:WSH-CUR-PGM-STS-CD
                NVL(CASE :WSH-CUR-PGM-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-STS-CD
                    END
                  ,A.PGM_STS_CD)
             AND A.EFF_BGN_DT     <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND B.CS_ID          = A.CS_ID
             AND B.PRM_LANG_CD     =
      *          NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
                 NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                  ,B.PRM_LANG_CD)
             AND B.EFF_BGN_DT     <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND P.PGM_CD = A.PGM_TYP_CD
             AND P.EFF_BGN_DT    <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            END-EXEC
        ELSE
      * Select case count
            EXEC SQL
             SELECT
                 COUNT(DISTINCT(A.CS_ID))
             INTO
                 :WSH-CS-COUNT
             FROM
               CS_PGM              A
                 ,CS              B
                 ,CS_SPL_SITN         C
                 ,SE_CSLD_PRM_USR         D
                 ,RT_PGM              P
             WHERE
                 D.USR_ID            = RTRIM(:WSH-CUR-USR-ID)
             AND D.EFF_BGN_DT    <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND A.CSLD_ID     = D.CSLD_ID
             AND P.CS_ASG_PGM     =
      *          NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
      *          NVL(:WSH-CUR-PGM-TYP-CD
                 NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
                  ,P.CS_ASG_PGM)
             AND A.PGM_STS_CD     =
      *          NVL(:WSH-CUR-PGM-STS-CD:WSH-PGM-STS-I
      *          NVL(:WSH-CUR-PGM-STS-CD
                 NVL(CASE :WSH-CUR-PGM-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-STS-CD
                    END
                  ,A.PGM_STS_CD)
             AND A.EFF_BGN_DT     <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND B.CS_ID          = A.CS_ID
             AND B.PRM_LANG_CD     =
      *          NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
      *          NVL(:WSH-CUR-PRM-LANG-CD
                 NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                  ,B.PRM_LANG_CD)
             AND B.EFF_BGN_DT     <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND P.PGM_CD = A.PGM_TYP_CD
             AND P.EFF_BGN_DT    <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND C.CS_ID          = A.CS_ID
             AND C.EFF_BGN_DT     <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(C.EFF_END_DT, F_HIGH_DT()) <>
                 C.EFF_BGN_DT
             AND C.SITN_TYP_CD     = :WSH-CUR-SPL-IND
            END-EXEC
          END-IF

          MOVE '30205-CONV-PCT-CS-NUM' TO WSL-PARA-NAME

          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
                   IF WSH-CS-COUNT > ZERO
                 COMPUTE WSH-CS-XFER-PCT-COUNT
                 = WSH-CS-COUNT * (LNK-CA0001S-XFER-PCT/100)
                 END-COMPUTE

                       IF WSH-CS-XFER-PCT-COUNT > ZERO
                 CONTINUE
                 ELSE
                 PERFORM 30206-POPL-MT-ERROR-MSG
                 END-IF
             ELSE
                 PERFORM 30206-POPL-MT-ERROR-MSG
             END-IF

            WHEN OTHER
             MOVE SQLCODE               TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                   MOVE WSC-513                 TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING CS,CS_PGM,CS_SPL_SITN,RT_PGM'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE     TO TRUE
             SET WSL-FATAL          TO TRUE
             MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
          END-EVALUATE
          .

      ****************************************************************  G
      *** Populate Mass transfer error message                          G
      ****************************************************************  G
       30206-POPL-MT-ERROR-MSG.

      *       Populate the Mass Transfer Error Message in case any errors.

5707        ADD +1 TO WSH-MT-ERR-COUNT
        MOVE SQLCODE                  TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
           MOVE WSC-513                    TO WSL-CALWIN-ERROR-CODE
                                       LNK-AA0052C-CALWIN-ERROR-CD
           MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
        MOVE 'NO CASES FOUND IN THE USERS CASELOAD FOR MASS TRANSFER'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
5707        SET  WSL-INFORMATIONAL         TO TRUE
5707           MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
5707        MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
5707        MOVE LNK-AA0052C-USR-ID
5707          TO WSL-ADDL-KEY-2
5707        MOVE WSH-CUR-PGM-TYP-CD 
5707         TO WSL-ADDL-KEY-3
5707        SET WSL-CS              TO TRUE
5707        PERFORM 91000-ERROR
        .

      ****************************************************************  G
      *** Type2 Assignment logic                                        G
      ****************************************************************  G
       30210-TYPE2-ASGN-LOGIC.
        MOVE '30210-TYPE2-ASGN-LOGIC' TO WSL-PARA-NAME
        MOVE SPACES TO LNK-CA0001S-PGM-STS-CD

        PERFORM 30211-TYPE2-ASGN-SUPLMT

        IF LNK-CA0001S-XFER-NUM = WSA-TYPE2-FTCH-CNT OR
           WSH-CS-XFER-PCT-COUNT = WSA-TYPE2-FTCH-CNT

           PERFORM 30415-CHK-NXT-FTCH-SAME-CS-PGM
                UNTIL WSS-CHK-NXT-FTCH-END

           IF WSS-NOT-END-C5-CURSOR OR
           WSS-NOT-END-C6-CURSOR

           SET WSS-END-C5-CURSOR TO TRUE
           SET WSS-END-C6-CURSOR TO TRUE

           IF LNK-CA0001S-XFER-SPL-IND = SPACES
              PERFORM 10550-CLOSE-C5-CURSOR
           ELSE
              PERFORM 10640-CLOSE-C6-CURSOR
           END-IF
           END-IF
      * DACR 3944 - Perform commit after each logical transaction
           PERFORM 75000-COMMIT
           EXIT PARAGRAPH
        END-IF

        IF LNK-CA0001S-XFER-SPL-IND = SPACES
           PERFORM 10540-FETCH-C5-CURSOR
        ELSE
           PERFORM 10630-FETCH-C6-CURSOR
        END-IF
        .

      ****************************************************************     G
      *** Type2 Assignment logic                         G
      ****************************************************************     G
       30211-TYPE2-ASGN-SUPLMT.
        MOVE '30211-TYPE2-ASGN-SUPLMT' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Mass Transfer Type 2

        IF WSH-CUR-PGM-TYP-CD   <> WSH-PREV-PGM-TYP-CD 
4993           IF WSH-CUR-CS-ID        <> WSH-PREV-CS-ID
5707           IF WSH-PREV-CS-ID <> SPACES
      * DACR 3944 - Perform commit after each case
                     PERFORM 75000-COMMIT
5707           END-IF
              MOVE WSH-CUR-CS-ID      TO WSH-PREV-CS-ID
              MOVE WSH-CUR-PGM-TYP-CD TO WSH-PREV-PGM-TYP-CD
4993              SET WSS-NEW-CS-ID      TO TRUE
5707           SET WSS-NO-MT-ERR      TO TRUE
4993           ELSE
4993           MOVE WSH-CUR-PGM-TYP-CD TO WSH-PREV-PGM-TYP-CD
4993           SET WSS-SAME-CS-ID      TO TRUE
4993           END-IF
4993        ELSE
4993           IF WSH-CUR-CS-ID     <> WSH-PREV-CS-ID
5707           IF WSH-PREV-CS-ID <> SPACES
      * DACR 3944 - Perform commit after each case
                     PERFORM 75000-COMMIT
5707           END-IF
4993           MOVE WSH-CUR-CS-ID      TO WSH-PREV-CS-ID
4993           SET WSS-NEW-CS-ID      TO TRUE
5707           SET WSS-NO-MT-ERR      TO TRUE
4993           ELSE
4993           SET WSS-SAME-CS-ID      TO TRUE
4993           END-IF
        END-IF

5707  *******************************************************************
5707  * If any programs in the case have errored, rollback any previous
5707  * updates to the case and bypass the remaining program on the
5707  * case in order to ensure that the correct number of cases are 
5707  * transferred.  Error flag is only reset when it gets to the next
5707  * case id.
5707  *******************************************************************
5707        IF WSS-NO-MT-ERR
           PERFORM 30155-TYPE1-ASGN-1ST-UPD

5707           IF WSS-NO-MT-ERR
              PERFORM 30160-TYPE1-ASGN-2ND-UPD
5707              IF WSS-MT-ERR
5707              PERFORM 75001-ROLLBACK
5707              END-IF
5707           ELSE
5707              PERFORM 75001-ROLLBACK
5707           END-IF
5707        END-IF
        

4993  *****************************************************************
4993  * Only increment the count if it's a new case as the window is 
4993  * at the case and not HLPG level
4993  *****************************************************************
4993        IF  WSS-NEW-CS-ID
5707        AND WSS-NO-MT-ERR
             COMPUTE WSA-TYPE2-FTCH-CNT
            = WSA-TYPE2-FTCH-CNT + WSC-ONE
             END-COMPUTE
4993        END-IF

        IF WSS-POPULATE-XFR-ARRAY
            PERFORM 30165-POPL-XFRED-CS-ARRAY
        END-IF
        .

      ****************************************************************  G
      *** This paragraph will be the driver to determine whether the    G
      *** user ids selected for mass transfer by number have enough     G
      *** cases to transfer based on the number selected on the window. G
      ****************************************************************  G

       30220-VERIFY-NUM-OF-CASES.
     
        MOVE '30220-VERIFY-NUM-OF-CASES' TO WSL-PARA-NAME

        MOVE LNK-CA0001S-MT-USERID(WSI-NUM-CASES-IX) TO
          WSH-CUR-USR-ID

        IF LNK-CA0001S-XFER-SPL-IND = SPACES
           PERFORM 30230-NUM-CS-NO-SPL-IND
        ELSE
4439           MOVE LNK-CA0001S-XFER-SPL-IND TO WSH-CUR-SPL-IND
           PERFORM 30240-NUM-CS-SPL-IND
        END-IF

        IF LNK-CA0001S-XFER-NUM > WSH-CASE-COUNT
           ADD +1 TO WSA-ERROR-CNT
           ADD +1 TO WSI-NUM-ERRORS-IX
           MOVE WSH-CUR-USR-ID TO WST-USER-ID(WSI-NUM-ERRORS-IX)
        END-IF
        .

      ****************************************************************  G
      *** This paragraph will count the number of cases available to    G
      *** be transferred for the current user id without taking special G
      *** indicators into account.                                      G
      ****************************************************************  G       
        
       30230-NUM-CS-NO-SPL-IND.

        MOVE '30230-NUM-CS-NO-SPL-IND' TO WSL-PARA-NAME
     
        INITIALIZE WSH-CASE-COUNT

           EXEC SQL
            SELECT
             COUNT(UNIQUE(A.CS_ID))
            INTO
                :WSH-CASE-COUNT
            FROM
             CS_PGM            A
            ,CS                 B
            ,SE_CSLD_PRM_USR     D
            ,RT_PGM            P
            WHERE
                D.USR_ID           = RTRIM(:WSH-CUR-USR-ID)
            AND D.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.CSLD_ID            = D.CSLD_ID
            AND P.CS_ASG_PGM     =
      *         NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
      *         NVL(:WSH-CUR-PGM-TYP-CD
                NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
                 ,P.CS_ASG_PGM)
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.CS_ID            = A.CS_ID
4439            AND B.CS_STS_CD     =
4439  *             NVL(:WSH-CUR-CS-STS-CD:WSH-PGM-STS-I
      *             NVL(:WSH-CUR-CS-STS-CD
                NVL(CASE :WSH-CUR-CS-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-CS-STS-CD
                    END
                 ,B.CS_STS_CD)
            AND B.PRM_LANG_CD    =
      *         NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
      *         NVL(:WSH-CUR-PRM-LANG-CD
                NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                 ,B.PRM_LANG_CD)
            AND B.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD = A.PGM_TYP_CD
            AND P.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            ORDER BY A.CS_ID, P.CS_ASG_PGM
           END-EXEC

         EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              CONTINUE

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
              INITIALIZE LNK-AA0052C-CALWIN-ERROR-TEXT
                      WSL-MISC-ERROR-TXT
                      LNK-SQL-TEXT

              MOVE 'ERROR SELECTING CASE COUNT'  
               TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE    TO TRUE
              MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
              SET WSL-CS                 TO TRUE
              SET WSL-FATAL            TO TRUE
              PERFORM 90000-CLOSE
         END-EVALUATE
         .


      ****************************************************************  G
      *** This paragraph will count the number of cases available to    G
      *** be transferred for the current user id while taking special   G
      *** indicators into account.                                      G
      ****************************************************************  G       
        
       30240-NUM-CS-SPL-IND.

        MOVE '30240-NUM-CS-SPL-IND' TO WSL-PARA-NAME
     
        INITIALIZE WSH-CASE-COUNT

           EXEC SQL
            SELECT
             COUNT(UNIQUE(A.CS_ID))
            INTO
                :WSH-CASE-COUNT
            FROM
             CS_PGM            A
            ,CS                 B
            ,CS_SPL_SITN            C
            ,SE_CSLD_PRM_USR     D
            ,RT_PGM            P
            WHERE
                D.USR_ID           = RTRIM(:WSH-CUR-USR-ID)
            AND D.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(D.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.CSLD_ID            = D.CSLD_ID
            AND P.CS_ASG_PGM     =
                NVL(CASE :WSH-CUR-PGM-TYP-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PGM-TYP-CD
                    END
      *         NVL(:WSH-CUR-PGM-TYP-CD:WSH-PGM-TYP-I
      *         NVL(:WSH-CUR-PGM-TYP-CD
                 ,P.CS_ASG_PGM)
            AND A.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.CS_ID            = A.CS_ID
4439            AND B.CS_STS_CD     =
4439  *             NVL(:WSH-CUR-CS-STS-CD:WSH-PGM-STS-I
      *             NVL(:WSH-CUR-CS-STS-CD
                NVL(CASE :WSH-CUR-CS-STS-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-CS-STS-CD
                    END
                 ,B.CS_STS_CD)
            AND B.PRM_LANG_CD    =
      *         NVL(:WSH-CUR-PRM-LANG-CD:WSH-PRM-LANG-I
      *         NVL(:WSH-CUR-PRM-LANG-CD
                NVL(CASE :WSH-CUR-PRM-LANG-CD
                    WHEN '  ' THEN NULL
                    ELSE :WSH-CUR-PRM-LANG-CD
                    END
                 ,B.PRM_LANG_CD)
            AND B.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD = A.PGM_TYP_CD
            AND P.EFF_BGN_DT    <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND C.CS_ID         = A.CS_ID
            AND C.EFF_BGN_DT     <=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(C.EFF_END_DT, F_HIGH_DT()) <>
                C.EFF_BGN_DT
            AND C.SITN_TYP_CD    = :WSH-CUR-SPL-IND
            ORDER BY A.CS_ID, P.CS_ASG_PGM
           END-EXEC

         EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              CONTINUE

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
              INITIALIZE LNK-AA0052C-CALWIN-ERROR-TEXT
                      WSL-MISC-ERROR-TXT
                      LNK-SQL-TEXT

              MOVE 'ERROR SELECTING CASE COUNT'  
               TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE    TO TRUE
              MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
              SET WSL-CS                 TO TRUE
              SET WSL-FATAL            TO TRUE
              PERFORM 90000-CLOSE
         END-EVALUATE
         .

      ****************************************************************  G
      *** This paragraph will get the user name for all of the userid's G
      *** that didn't have enough cases to transfer to prepare them for G
      *** error messaging.                                              G
      ****************************************************************  G

       30245-GET-ERROR-USR-NAME.

        MOVE '30245-GET-ERROR-USR-NAME' TO WSL-PARA-NAME

        MOVE WST-USER-ID(WSI-NUM-CASES-IX) TO
          WSH-CUR-USR-ID

        PERFORM 30250-GET-USER-NAME
        .

      ****************************************************************  G
      *** Get the concatenated user name.                               G
      ****************************************************************  G

       30250-GET-USER-NAME.

        MOVE '30250-GET-USER-NAME' TO WSL-PARA-NAME

      * Select concatenated name from User table
           EXEC SQL
            SELECT
             RPAD(
             (FIRST_NM          ||
             ' '               ||
             LAST_NM), 55,' ')
            INTO
             :WSH-XFR-USR-FUL-NM
            FROM
             SE_USR 
            WHERE
             USR_ID = RTRIM(:WSH-CUR-USR-ID)
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE
            WHEN OTHER
              MOVE SQLCODE     TO LNK-SQL-CODE
                    WSL-ERROR-VALUE
                    MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                                LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR CONCATENATING USER NAME'
                          TO WSL-MISC-ERROR-TXT
                    LNK-SQL-TEXT
                    MOVE SPACES TO
                                LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-USR-ID         TO WSL-IDENTIFIER
              SET WSL-USER         TO TRUE
              PERFORM 90000-CLOSE
        END-EVALUATE

        IF WSA-ERROR-CNT > 0
           ADD +1 TO WSI-NUM-ERRORS-IX
           MOVE WSH-XFR-USR-FUL-NM TO
          WST-USER-NAME(WSI-NUM-ERRORS-IX)
        END-IF
        .

      ****************************************************************  G
      *** Format the error message for MT when not enough cases are     G
      *** available to transfer for a user.                             G
      ****************************************************************  G

       30255-NUM-CASES-ERROR.

        MOVE '30255-NUM-CASES-ERROR' TO WSL-PARA-NAME

        INITIALIZE WSI-NUM-CASES-IX

        ADD +1 TO WSI-NUM-CASES-IX
        STRING
           WST-USER-NAME(WSI-NUM-CASES-IX)
            DELIMITED BY WSC-2-SPACES
           ' does not have enough cases'
                DELIMITED BY SIZE
           INTO WSL-MISC-ERROR-TXT
        END-STRING

        MOVE ZEROES                  TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
           MOVE WSC-513                    TO WSL-CALWIN-ERROR-CODE
                                       LNK-AA0052C-CALWIN-ERROR-CD
           MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
        MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
        SET LNK-CA0001S-FAILURE     TO TRUE
        SET WSL-FATAL            TO TRUE
        MOVE WSH-CUR-USR-ID            TO WSL-IDENTIFIER
        SET WSL-USER                 TO TRUE
        PERFORM 90000-CLOSE
        .


      ****************************************************************  G
      *** Mass Transfer Type 3 logic                                    G
      ****************************************************************  G
       30300-TYPE3-MT-LOGIC.
        MOVE '30300-TYPE3-MT-LOGIC' TO WSL-PARA-NAME
        MOVE SPACES TO LNK-CA0001S-PGM-STS-CD

      
      * Perform the Case Assignment Process for the Mass Transfer Type 3

           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZERO
           MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO 
                   WSH-CUR-USR-ID
           END-IF

        PERFORM 30305-XFR-FRM-USR-OFF

        INITIALIZE WSH-CUR-PGM-TYP-CD
               ,WSH-PREV-PGM-TYP-CD
               ,WSH-PREV-CSLD-ID

        PERFORM 10500-OPEN-C4-CURSOR

        PERFORM 10510-FETCH-C4-CURSOR

        IF WSS-END-C4-CURSOR
5707            ADD +1 TO WSH-MT-ERR-COUNT
            SET LNK-CA0001S-FAILURE        TO TRUE

            MOVE SPACES TO  LNK-SQL-TEXT
                      WSL-MISC-ERROR-TXT

            STRING 'No Cases exists in ' DELIMITED BY SIZE
                 WSH-CUR-USR-ID         DELIMITED BY '  '
                 "'"              DELIMITED BY SIZE
                 's Caseload.'         DELIMITED BY SIZE
            INTO LNK-SQL-TEXT
            END-STRING

            MOVE LNK-SQL-TEXT         TO WSL-MISC-ERROR-TXT
            SET  WSL-FATAL              TO TRUE
            MOVE '10510-FETCH-C4-CURSOR' TO WSL-PARA-NAME
            MOVE WSC-NOT-FOUND         TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
            MOVE 513                   TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
5707            SET WSL-INFORMATIONAL         TO TRUE
5707               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
5707            MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
5707            MOVE LNK-AA0052C-USR-ID
5707               TO WSL-ADDL-KEY-2
5707            MOVE WSH-CUR-PGM-TYP-CD 
5707              TO WSL-ADDL-KEY-3
5707            SET WSL-CS              TO TRUE
5707            PERFORM 91000-ERROR
5707        ELSE
5707            PERFORM 30310-TYPE3-ASGN-LOGIC
                UNTIL WSS-END-C4-CURSOR
            IF WSS-POPULATE-XFR-ARRAY
                      PERFORM 30170-POPL-FINAL-XFR-DATA
            END-IF
5707A * Commit final update if no error
5707A            IF WSS-NO-MT-ERR
5707A              PERFORM 75000-COMMIT
5707A            END-IF
        END-IF

        .

      ****************************************************************  G
      *** Transfer from user office                                     G
      ****************************************************************  G
       30305-XFR-FRM-USR-OFF.
        MOVE '30305-XFR-FRM-USR-OFF' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        INITIALIZE WSH-CUR-OFF-ID

      *Get the office id for the user
      *SQL - 150
           EXEC SQL
            SELECT
             OFF_ID
            INTO
             :WSH-CUR-OFF-ID
            FROM
             SE_USR_UNT_OFF
            WHERE
             USR_ID = RTRIM(:WSH-CUR-USR-ID)
            AND PRM_SW = :WSC-YES
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE

            WHEN WSC-NOT-FOUND
             PERFORM 30360-GET-CUR-OFF-ID

            WHEN OTHER
             MOVE SQLCODE                 TO LNK-SQL-CODE
                                WSL-ERROR-VALUE
                   MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE WSL-MISC-ERROR-TXT
                     LNK-SQL-TEXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT

             STRING
                 'ERROR SELECTING SE_USR_UNT_OFF*'
                 WSH-CUR-USR-ID        DELIMITED BY SIZE
                 WSC-ASTERISK        DELIMITED BY SIZE
                 WSC-YES             DELIMITED BY SIZE
                 WSC-ASTERISK        DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Type3 assignment logic                                        G
      ****************************************************************  G
       30310-TYPE3-ASGN-LOGIC.
        MOVE '30310-TYPE3-ASGN-LOGIC' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Mass Transfer Type 3

        IF WSH-CUR-PGM-TYP-CD <> WSC-CS-PGM-TYP-SPACE

            PERFORM 30315-CHK-CS-STS
            PERFORM 10320-CHK-CS-SPL-IND-EXIST

4925            MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO 
4925                            WSH-CUR-USR-ID
4925                         WSH-NOT-THIS-USR-ID


4993  ***************************************************************
4993  * Commented out IF statement - should execute every time
4993  ***************************************************************
4993  *            IF WSH-CUR-PGM-TYP-CD   <> WSH-PREV-PGM-TYP-CD OR
4993  *                WSH-CUR-CS-ID         <> WSH-PREV-CS-ID

                MOVE WSH-CUR-CS-ID      TO WSH-PREV-CS-ID
                MOVE WSH-CUR-PGM-TYP-CD TO WSH-PREV-PGM-TYP-CD

             PERFORM 30305-XFR-FRM-USR-OFF

4974  * If there are special indicators on the case
4974                IF WSS-CS-SPL-IND-EXISTS
4974                DISPLAY 'Case has special indicators'
4974                PERFORM 10730-OPEN-C10-CURSOR
4974                PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads with special indicators
4974                IF WSS-NOT-END-C10-CURSOR
4974                DISPLAY 'Caseloads with spl inds found'
4974                 SET WSS-USED-SPL-IND-CUR TO TRUE
4974                PERFORM 30320-TYPE3-AUTO-ASGN-LOGIC
4974                   UNTIL WSS-END-C10-CURSOR

4974  * If there are no caseloads with special indicators
4974                ELSE
4974                DISPLAY 'No Caseloads with spl inds found'
4974                SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974                PERFORM 10440-OPEN-C2-CURSOR
4974                PERFORM 10450-FETCH-C2-CURSOR
4974                PERFORM 30320-TYPE3-AUTO-ASGN-LOGIC
4974                   UNTIL WSS-END-C2-CURSOR
4974                END-IF

4974  * If the case has no special indicators
4974             ELSE
4974                DISPLAY 'Case has no special indicators'
4974                SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
                PERFORM 10440-OPEN-C2-CURSOR
                PERFORM 10450-FETCH-C2-CURSOR
                PERFORM 30320-TYPE3-AUTO-ASGN-LOGIC
                    UNTIL WSS-END-C2-CURSOR
4974             END-IF

             PERFORM 69000-SRCH-BEST-CSLD

4993  *            END-IF

            PERFORM 30316-TYPE3-UPD-TBL

            IF WSS-POPULATE-XFR-ARRAY
             PERFORM 30165-POPL-XFRED-CS-ARRAY
            END-IF

        END-IF

        PERFORM 10510-FETCH-C4-CURSOR
        .

      ****************************************************************  G
      *** Check Case status                                             G
      ****************************************************************  G
       30315-CHK-CS-STS.
        MOVE '30315-CHK-CS-STS' TO WSL-PARA-NAME

      *Get the Case Status of a Case
      *SQL-160
           EXEC SQL
            SELECT
             CS_STS_CD
            INTO
            :WSS-CS-MODE-SW
            FROM
             CS
            WHERE
             CS_ID      = :WSH-CUR-CS-ID
            AND EFF_BGN_DT      <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

         EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              INITIALIZE WSH-CUR-CS-MODE-CD

              IF WSS-INTAKE
               MOVE WSC-INTAKE      TO WSH-CUR-CS-MODE-CD
              ELSE
               MOVE WSC-ONGOING TO WSH-CUR-CS-MODE-CD
              END-IF

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
              INITIALIZE LNK-AA0052C-CALWIN-ERROR-TEXT
                      WSL-MISC-ERROR-TXT
                      LNK-SQL-TEXT

              MOVE 'ERROR SELECTING CS'  TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE    TO TRUE
              MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
              SET WSL-CS                 TO TRUE
              SET WSL-FATAL            TO TRUE
              PERFORM 90000-CLOSE
         END-EVALUATE
        .

      ****************************************************************  G
      *** Type3 update table                                            G
      ****************************************************************  G
       30316-TYPE3-UPD-TBL.
        MOVE '30316-TYPE3-UPD-TBL' TO WSL-PARA-NAME

      * Perform the Case Assignment Process for the Mass Transfer Type 3

       INITIALIZE LNK-CA0001S-ASSGN-TO-CSLD
4993               WSH-FINAL-CSLD-ID

       PERFORM 69252-CHK-SKP-ON-CSLD-OR-NOT

       IF WSH-FINAL-CSLD-ID = ZEROES
          MOVE WSH-PREV-CSLD-ID TO LNK-CA0001S-ASSGN-TO-CSLD
       ELSE
          MOVE WSH-FINAL-CSLD-ID TO LNK-CA0001S-ASSGN-TO-CSLD
                                   WSH-PREV-CSLD-ID
       END-IF

5707  * Should only be calling the updates if we're assigning something
5707      IF WSS-ASSGN
          PERFORM 30155-TYPE1-ASGN-1ST-UPD

5707          IF WSS-NO-MT-ERR
             PERFORM 30160-TYPE1-ASGN-2ND-UPD
5707             IF WSS-MT-ERR
5707                PERFORM 75001-ROLLBACK
5707                SET WSS-NO-MT-ERR TO TRUE
5707             ELSE

      * DACR 3944 - Perform commit after each logical transaction
                PERFORM 75000-COMMIT
5707             END-IF
5707          ELSE
5707             PERFORM 75001-ROLLBACK
5707             SET WSS-NO-MT-ERR TO TRUE
5707          END-IF
5707       END-IF

       INITIALIZE WSH-CSLD-TBL-ARRAY
               , WSI-CSLD
          .
      ****************************************************************  G
      *** Type3 auto assignment logic                                   G
      ****************************************************************  G
       30320-TYPE3-AUTO-ASGN-LOGIC.
        MOVE '30320-TYPE3-AUTO-ASGN-LOGIC' TO WSL-PARA-NAME

      *     WHEN THERE ARE MULTIPLE TRANSFER FROM USERID'S, MAKE SURE THAT 
      * NONE OF THEM MATCH THE 
      *     LIST PASSED INTO THE PROGRAM.  IF THERE'S A MATCH ON USERID'S, 
      * FETCH THE CURSOR AGAIN TO GET 
      *     THE NEXT MATCH


        SET WSS-MASS-XFER-NOT-FOUND TO TRUE 
        IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZEROES
        PERFORM 30350-SEARCH-MASS-XFER-LIST VARYING WSI-MASS-XFER 
                    FROM 1 BY 1 UNTIL WSI-MASS-XFER GREATER THAN 
                    LNK-CA0001S-TOTAL-MASS-XFERS
              OR WSS-MASS-XFER-FOUND
        END-IF
     
        EVALUATE TRUE
          WHEN WSS-MASS-XFER-FOUND
5707  * Check for max of 50 caseloads was missing and causing an array
5707  * out of bounds condition.
5707                  IF WSI-CSLD < WSC-MAX-51-CNT
4974                  IF WSS-USED-SPL-IND-CUR
4974                  PERFORM 10740-FETCH-C10-CURSOR
4974                  ELSE
                  PERFORM 10450-FETCH-C2-CURSOR
4974                  END-IF
4974               ELSE
4974                      IF WSS-USED-SPL-IND-CUR
4974                    SET WSS-END-C10-CURSOR TO TRUE
4974                    PERFORM 10750-CLOSE-C10-CURSOR
4974                      ELSE
                       SET WSS-END-C2-CURSOR TO TRUE
                       PERFORM 10460-CLOSE-C2-CURSOR
4974                      END-IF
5707               END-IF
          WHEN OTHER
               PERFORM 60000-CASE-ASSIGNMENT-PROCESS
5707                  IF WSI-CSLD < WSC-MAX-51-CNT
4974                  IF WSS-USED-SPL-IND-CUR
4974                  PERFORM 10740-FETCH-C10-CURSOR
4974                  ELSE
                  PERFORM 10450-FETCH-C2-CURSOR
4974                  END-IF
4974               ELSE
4974                      IF WSS-USED-SPL-IND-CUR
4974                    SET WSS-END-C10-CURSOR TO TRUE
4974                    PERFORM 10750-CLOSE-C10-CURSOR
4974                      ELSE
                       SET WSS-END-C2-CURSOR TO TRUE
                       PERFORM 10460-CLOSE-C2-CURSOR
4974                      END-IF
5707               END-IF
        END-EVALUATE
        .

      ****************************************************************  G
      *** This paragraph is used to determine if the cur-usr-id from theG
      *** SQL to see if it is one of the transfer from userid's.  If it G
      *** is, we set the switch to found, so that we know not to put    G
      *** this caseload into the list of potential caseloads to assign  G
      *** the case/program group to.                                    G
      ****************************************************************  G
        
       30350-SEARCH-MASS-XFER-LIST.

        MOVE '30350-SEARCH-MASS-XFER-LIST' TO WSL-PARA-NAME

      * COMPARES THE USER ID FROM THE SQL AGAINST THE LIST OF TRANSFER FROM
      * USERS.  IF THERE'S A MATCH, SET THE SWITCH TO FOUND

        IF WSD-USR-ID OF WSD-SE-CSLD-PRM-USR = 
              LNK-CA0001S-MT-USERID(WSI-MASS-XFER)
          SET WSS-MASS-XFER-FOUND TO TRUE
        END-IF          
         .

      ****************************************************************  G
      *** Get the office ID associated with the caseload that a progrm  G
      *** group is currently assigned to.                               G
      ****************************************************************  G
 
       30360-GET-CUR-OFF-ID.

        MOVE '30360-GET-CUR-OFF-ID' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        INITIALIZE WSH-OFF-PGM-TYP-CD
                WSH-AU-CSLD-ID

        EVALUATE WSH-CUR-PGM-TYP-CD
          WHEN WSC-FS-TYP-CD
          WHEN WSC-FT-TYP-CD
          WHEN WSC-EX-TYP-CD
          WHEN WSC-DF-TYP-CD
             MOVE WSC-FS-TYP-CD TO WSH-OFF-PGM-TYP-CD
          WHEN WSC-CW-TYP-CD
          WHEN WSC-WW-TYP-CD
          WHEN WSC-CD-TYP-CD
             MOVE WSC-CW-TYP-CD TO WSH-OFF-PGM-TYP-CD
          WHEN OTHER
             MOVE WSH-CUR-PGM-TYP-CD TO WSH-OFF-PGM-TYP-CD
        END-EVALUATE

           EXEC SQL
            SELECT
             B.OFF_ID
            ,B.CSLD_ID
            ,C.CNTY_CD
            INTO
            :WSH-CUR-OFF-ID
           ,:WSH-AU-CSLD-ID
           ,:WSH-CSLD-CNTY-CD
            FROM
             CS_PGM A
            ,SE_CSLD B
            ,SE_OFF C
            WHERE
             A.CS_ID      = :WSH-CUR-CS-ID
            AND A.PGM_TYP_CD  = :WSH-OFF-PGM-TYP-CD
            AND A.EFF_BGN_DT      <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.CSLD_ID     = B.CSLD_ID
            AND B.OFF_ID      = C.OFF_ID
           END-EXEC

         EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              IF WSS-PROCESS-AU-ASSGN
5380              OR WSS-TYPE3-MASS-XFER
5380              OR WSS-TYPE4-MASS-XFER
                 MOVE WSH-AU-CSLD-ID TO
                    WSH-CUR-CSLD-ID
              END-IF

            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                            LNK-AA0052C-CALWIN-ERROR-CD
              INITIALIZE LNK-AA0052C-CALWIN-ERROR-TEXT
                      WSL-MISC-ERROR-TXT
                      LNK-SQL-TEXT

              MOVE 'ERROR SELECTING OFF_ID'  TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE    TO TRUE
              MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
              SET WSL-CS                 TO TRUE
              SET WSL-FATAL            TO TRUE
              PERFORM 90000-CLOSE
         END-EVALUATE

         IF WSS-CHECK-MASITE
                EXEC SQL
                SELECT
                CNTY_CD
                INTO
                :WSH-SAVE-MASITE-CNTY-CD
                FROM
                 SE_OFF 
                WHERE
                 OFF_ID = :WSH-CUR-OFF-ID
              END-EXEC

            EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               IF WSH-SAVE-MASITE-CNTY-CD = WSC-MASITE-CNTY-CD
                  SET WSS-MASITE-OFFICE TO TRUE
               ELSE
                  SET WSS-NOT-MASITE-OFFICE TO TRUE
               END-IF
          
               SET WSS-NO-CHECK-MASITE TO TRUE

               WHEN OTHER
               SET LNK-CA0001S-FAILURE TO TRUE
               MOVE SQLCODE          TO LNK-SQL-CODE
               MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                                   LNK-AA0052C-CALWIN-ERROR-CD
               INITIALIZE      LNK-SQL-TEXT
                            WSL-MISC-ERROR-TXT
                               LNK-AA0052C-CALWIN-ERROR-TEXT
               STRING 'Error reading SE_OFF '
               WSH-CUR-CS-ID     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               SQLERRM          DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               WSH-CUR-PGM-TYP-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE

               LNK-CA0001S-PGM-STS-CD     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               
               WSH-CURRENT-DT     DELIMITED BY SIZE
               WSC-ASTERISK     DELIMITED BY SIZE
               INTO LNK-SQL-TEXT
               END-STRING
 
               MOVE LNK-SQL-TEXT      TO WSL-MISC-ERROR-TXT
               SET WSL-CS          TO TRUE
               MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
               SET WSL-FATAL     TO TRUE
               PERFORM 90000-CLOSE
                END-EVALUATE
         END-IF
         .



      ****************************************************************  G
      *** Type4 assignment logic                                        G
      ****************************************************************  G
       30410-TYPE4-ASGN-LOGIC.
        MOVE '30410-TYPE4-ASGN-LOGIC' TO WSL-PARA-NAME

        PERFORM 30411-TYPE4-ASGN-LOGIC-SUPLMT

4993  ****************************************************************
4993  * Changed logic to only increment the ftch-cnt if we actually
4993  * assigned something, so we need to only check the count if it's
4993  * greater than zero
4993  ****************************************************************

4993        IF WSA-TYPE4-FTCH-CNT > ZEROES
          IF LNK-CA0001S-XFER-NUM = WSA-TYPE4-FTCH-CNT OR
          WSH-CS-XFER-PCT-COUNT = WSA-TYPE4-FTCH-CNT

           PERFORM 30415-CHK-NXT-FTCH-SAME-CS-PGM
             UNTIL WSS-CHK-NXT-FTCH-END

             IF WSS-NOT-END-C5-CURSOR OR
               WSS-NOT-END-C6-CURSOR
               SET WSS-END-C5-CURSOR TO TRUE
               SET WSS-END-C6-CURSOR TO TRUE

                 IF LNK-CA0001S-XFER-SPL-IND = SPACES
                  PERFORM 10550-CLOSE-C5-CURSOR
                 ELSE
                  PERFORM 10640-CLOSE-C6-CURSOR
                 END-IF
             END-IF
4993  ******************************************************************
4993  *  Perform commit of final update in case we weren't able to  
4993  *  assign one or more transactions and the service does a rollback
4993  *  because we need to return an error in order for it to write
4993  *  the failure alert
4993  ******************************************************************
             PERFORM 75000-COMMIT
           EXIT PARAGRAPH
         END-IF
4993       END-IF

        IF LNK-CA0001S-XFER-SPL-IND = SPACES
           PERFORM 10540-FETCH-C5-CURSOR
        ELSE
           PERFORM 10630-FETCH-C6-CURSOR
        END-IF
           .

      ****************************************************************     G
      *** Type4 auto assignment logic                         G
      ****************************************************************     G
       30411-TYPE4-ASGN-LOGIC-SUPLMT.
        MOVE '30411-TYPE4-ASGN-LOGIC-SUPLMT' TO WSL-PARA-NAME
      * Perform the Case Assignment Process for the Mass Transfer Type 4

4925        MOVE LNK-CA0001S-MT-USERID(WSI-MULT-XFR-IX) TO 
4925                            WSH-CUR-USR-ID
4925                         WSH-NOT-THIS-USR-ID

        PERFORM 30305-XFR-FRM-USR-OFF
        PERFORM 30315-CHK-CS-STS
        PERFORM 10320-CHK-CS-SPL-IND-EXIST

4993  ***************************************************************
4993  * Moved the END-IF up on this IF statement as other code should
4993  * always be executed.  Added new case switch to determine if 
4993  * we need to increment the the counter - bad previous code 
4993  * incremented for each HLPG, but the window is supposed to be
4993  * at the case level not HLPG level.
4993  ***************************************************************
4993          IF WSH-CUR-PGM-TYP-CD   <> WSH-PREV-PGM-TYP-CD 
4993             IF WSH-CUR-CS-ID        <> WSH-PREV-CS-ID 
5707           IF WSH-PREV-CS-ID <> SPACES
      * DACR 3944 - Perform commit after each case
                     PERFORM 75000-COMMIT
5707           END-IF
4993                MOVE WSH-CUR-CS-ID      TO WSH-PREV-CS-ID
4993              MOVE WSH-CUR-PGM-TYP-CD TO WSH-PREV-PGM-TYP-CD
4993           SET  WSS-NEW-CS-ID      TO TRUE
5707           SET  WSS-NO-MT-ERR      TO TRUE
4993          ELSE
4993           MOVE WSH-CUR-PGM-TYP-CD TO WSH-PREV-PGM-TYP-CD
4993           IF WSS-ASSGN
4993              SET  WSS-SAME-CS-ID  TO TRUE
4993           ELSE
4993              SET  WSS-NEW-CS-ID   TO TRUE
4993           END-IF
4993          END-IF
4993        ELSE
4993             IF WSH-CUR-CS-ID        <> WSH-PREV-CS-ID 
5707           IF WSH-PREV-CS-ID <> SPACES
      * DACR 3944 - Perform commit after each case
                     PERFORM 75000-COMMIT
5707           END-IF
4993                MOVE WSH-CUR-CS-ID      TO WSH-PREV-CS-ID
4993           SET  WSS-NEW-CS-ID      TO TRUE
5707           SET  WSS-NO-MT-ERR      TO TRUE
4993          ELSE
4993           IF WSS-ASSGN
4993              SET  WSS-SAME-CS-ID  TO TRUE
4993           ELSE
4993              SET  WSS-NEW-CS-ID   TO TRUE
4993           END-IF
4993           END-IF
4993          END-IF

5707  * We only want to go through auto assignment if there
5707  * were no previous errors on the current case
5707        IF WSS-MT-ERR
5707          CONTINUE
5707        ELSE

4974  * If there are special indicators on the case
4974          IF WSS-CS-SPL-IND-EXISTS
4974             DISPLAY 'Case has special indicators'
4974             PERFORM 10730-OPEN-C10-CURSOR
4974             PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads with special indicators found
4974             IF WSS-NOT-END-C10-CURSOR
4974                DISPLAY 'Caseloads with spl inds found'
4974                SET WSS-USED-SPL-IND-CUR TO TRUE
4974                PERFORM 30420-TYPE4-AUTO-ASGN-LOGIC
4974                UNTIL WSS-END-C10-CURSOR

4974  * If there are no caseloads with special indicators found
4974             ELSE
4974                DISPLAY 'No Caseloads with spl inds found'
4974                SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974                PERFORM 10440-OPEN-C2-CURSOR
4974                PERFORM 10450-FETCH-C2-CURSOR
4974                PERFORM 30420-TYPE4-AUTO-ASGN-LOGIC
4974                UNTIL WSS-END-C2-CURSOR
4974             END-IF

4974  * If case has no special indicators
4974          ELSE
4974             DISPLAY 'Case has no special indicators'
4974             SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
             PERFORM 10440-OPEN-C2-CURSOR
             PERFORM 10450-FETCH-C2-CURSOR
             PERFORM 30420-TYPE4-AUTO-ASGN-LOGIC
                UNTIL WSS-END-C2-CURSOR
4974          END-IF

          PERFORM 69000-SRCH-BEST-CSLD

          INITIALIZE LNK-CA0001S-ASSGN-TO-CSLD

          PERFORM 69252-CHK-SKP-ON-CSLD-OR-NOT

          IF WSH-FINAL-CSLD-ID = ZEROES
            MOVE WSH-PREV-CSLD-ID TO LNK-CA0001S-ASSGN-TO-CSLD
          ELSE
            MOVE WSH-FINAL-CSLD-ID TO LNK-CA0001S-ASSGN-TO-CSLD
                              WSH-PREV-CSLD-ID
          END-IF

5707  * Should only be calling the updates if we're assigning something
5707         IF WSS-ASSGN
            PERFORM 30155-TYPE1-ASGN-1ST-UPD

5707            IF WSS-NO-MT-ERR
                PERFORM 30160-TYPE1-ASGN-2ND-UPD
5707                IF WSS-MT-ERR
5707                PERFORM 75001-ROLLBACK
5707                END-IF
5707            ELSE
5707                PERFORM 75001-ROLLBACK
5707            END-IF

5707          END-IF
5707        END-IF

4993  *****************************************************************
4993  * Only update the count if we actually assigned one of the HLPG's
4993  * on the case
4993  *****************************************************************
4993       IF  WSS-ASSGN
4993        AND WSS-NEW-CS-ID
5707        AND WSS-NO-MT-ERR
            COMPUTE WSA-TYPE4-FTCH-CNT
             = WSA-TYPE4-FTCH-CNT + WSC-ONE
            END-COMPUTE
4993       END-IF

        INITIALIZE  WSH-CSLD-TBL-ARRAY
                ,WSI-CSLD

        IF WSS-POPULATE-XFR-ARRAY
            PERFORM 30165-POPL-XFRED-CS-ARRAY
        END-IF
        .


      ****************************************************************     G
      *** Check Next Fetch is same as the previous Case 
      ****************************************************************     G
       30415-CHK-NXT-FTCH-SAME-CS-PGM.
        MOVE '30415-CHK-NXT-FTCH-SAME-CS-PGM' TO WSL-PARA-NAME

        SET WSS-CHK-NXT-FTCH-NOT-END TO TRUE

        IF LNK-CA0001S-XFER-SPL-IND = SPACES
           PERFORM 10540-FETCH-C5-CURSOR
        ELSE
           PERFORM 10630-FETCH-C6-CURSOR
        END-IF

        IF WSS-NOT-END-C5-CURSOR
4993       OR WSS-NOT-END-C6-CURSOR
4993  ******************************************************************
4993  * Code should've been looking at both cursors for this logic.  It
4993  * also should've only been looking at the pgm-cd level when it is
4993  * transferring based on specific information (i.e. parameters on
4993  * the Mass Transfer window when they don't select all cases)
4993  *******************************************************************
            IF WSH-CUR-CS-ID            = WSH-PREV-CS-ID
            IF WSS-CHECK-HLPG
            OR WSS-CS-SPL-IND-EXISTS
               IF WSH-CUR-PGM-TYP-CD = WSH-PREV-PGM-TYP-CD
                  IF WSS-TYPE2-MASS-XFER
                     PERFORM 30211-TYPE2-ASGN-SUPLMT
                  END-IF

                  IF WSS-TYPE4-MASS-XFER
                     PERFORM 30411-TYPE4-ASGN-LOGIC-SUPLMT
                  END-IF
      * DACR 3944 - Perform commit after each logical transaction
                     PERFORM 75000-COMMIT
                 ELSE
                  SET WSS-CHK-NXT-FTCH-END TO TRUE
                 END-IF
4993              ELSE
               IF WSS-TYPE2-MASS-XFER
                  PERFORM 30211-TYPE2-ASGN-SUPLMT
               END-IF

               IF WSS-TYPE4-MASS-XFER
                  PERFORM 30411-TYPE4-ASGN-LOGIC-SUPLMT
               END-IF
      * DACR 3944 - Perform commit after each logical transaction
                  PERFORM 75000-COMMIT
4993           END-IF
4993            ELSE
4993               SET WSS-CHK-NXT-FTCH-END TO TRUE
4993            END-IF
        ELSE
            SET WSS-CHK-NXT-FTCH-END TO TRUE
        END-IF
        .


      ****************************************************************     G
      *** Type4 auto assignment logic                         G
      ****************************************************************  G
       30420-TYPE4-AUTO-ASGN-LOGIC.
        MOVE '30420-TYPE4-AUTO-ASGN-LOGIC' TO WSL-PARA-NAME

      * WHEN THERE ARE MULTIPLE TRANSFER FROM USERID'S, MAKE SURE THAT NONE 
      * OF THEM MATCH THE LIST PASSED INTO THE PROGRAM.
      * IF THERE'S A MATCH ON USERID'S, FETCH THE CURSOR AGAIN TO GET 
      * THE NEXT MATCH


           SET WSS-MASS-XFER-NOT-FOUND TO TRUE 
           IF LNK-CA0001S-TOTAL-MASS-XFERS GREATER THAN ZEROES
                   
           PERFORM 30350-SEARCH-MASS-XFER-LIST VARYING WSI-MASS-XFER
                FROM 1 BY 1
          UNTIL WSI-MASS-XFER GREATER THAN 
                         LNK-CA0001S-TOTAL-MASS-XFERS
               OR WSS-MASS-XFER-FOUND
        END-IF
     
        EVALUATE TRUE
          WHEN WSS-MASS-XFER-FOUND
5707  * Check for max of 50 caseloads was missing and causing an array
5707  * out of bounds condition.
5707                  IF WSI-CSLD < WSC-MAX-51-CNT
4974                  IF WSS-USED-SPL-IND-CUR
4974                  PERFORM 10740-FETCH-C10-CURSOR
4974                  ELSE
                  PERFORM 10450-FETCH-C2-CURSOR
4974                  END-IF
4974               ELSE
4974                      IF WSS-USED-SPL-IND-CUR
4974                    SET WSS-END-C10-CURSOR TO TRUE
4974                    PERFORM 10750-CLOSE-C10-CURSOR
4974                      ELSE
                       SET WSS-END-C2-CURSOR TO TRUE
                       PERFORM 10460-CLOSE-C2-CURSOR
4974                      END-IF
5707               END-IF
          WHEN OTHER
               PERFORM 60000-CASE-ASSIGNMENT-PROCESS
5707                  IF WSI-CSLD < WSC-MAX-51-CNT
4974                  IF WSS-USED-SPL-IND-CUR
4974                  PERFORM 10740-FETCH-C10-CURSOR
4974                  ELSE
                  PERFORM 10450-FETCH-C2-CURSOR
4974                  END-IF
4974               ELSE
4974                      IF WSS-USED-SPL-IND-CUR
4974                    SET WSS-END-C10-CURSOR TO TRUE
4974                    PERFORM 10750-CLOSE-C10-CURSOR
4974                      ELSE
                       SET WSS-END-C2-CURSOR TO TRUE
                       PERFORM 10460-CLOSE-C2-CURSOR
4974                      END-IF
5707               END-IF
        END-EVALUATE
           .

      ****************************************************************     G
      *** Find QC User                                   G
      ****************************************************************     G
       40000-FIND-QC-USR.
        MOVE '40000-FIND-QC-USR' TO WSL-PARA-NAME

      * Perform the QC Reviewer Logic for QC Assignment

        PERFORM 40010-GET-CS-LANG
        PERFORM 10560-OPEN-C7-CURSOR
        PERFORM 10570-FETCH-C7-CURSOR

        IF WSS-END-C7-CURSOR
            MOVE WSC-ENGLISH-LANG-CD       TO WSH-CUR-PRM-LANG-CD
            SET WSS-NOT-END-C7-CURSOR TO TRUE

            PERFORM 10560-OPEN-C7-CURSOR
            PERFORM 10570-FETCH-C7-CURSOR

            IF WSS-END-C7-CURSOR
             SET LNK-CA0001S-FAILURE TO TRUE
            END-IF
        END-IF


        PERFORM 40020-QC-USR-LOGIC
            UNTIL WSS-END-C7-CURSOR
        .

      ****************************************************************  G
      *** Get Case Language                                             G
      ****************************************************************  G
       40010-GET-CS-LANG.
        MOVE '40010-GET-CS-LANG' TO WSL-PARA-NAME

        INITIALIZE WSH-CUR-PRM-LANG-CD

      *Get the Primary Language of the Case
      *SQL-170
           EXEC SQL
            SELECT
             PRM_LANG_CD
            INTO
             :WSH-CUR-PRM-LANG-CD
            FROM
             CS
            WHERE
             CS_ID       = :WSH-CUR-CS-ID
            AND EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT,F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE
            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                      LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR SELECTING CS'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Get Case user office                                          G
      ****************************************************************  G
       40015-GET-CS-USR-OFF.
        MOVE '40015-GET-CS-USR-OFF' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        MOVE LNK-CA0001S-CSLD-ID TO WSH-CUR-CSLD-ID

      *Get the Office Id for the User for the caseload ID
      *SQL-180

           EXEC SQL
            SELECT
             OFF_ID
            INTO
             :WSH-CUR-OFF-ID
            FROM
             SE_CSLD_PRM_USR A
            ,SE_USR_UNT_OFF B
            WHERE
             A.CSLD_ID        = :WSH-CUR-CSLD-ID
            AND A.EFF_BGN_DT        <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND B.USR_ID        = A.USR_ID
            AND B.PRM_SW        = :WSC-YES
           END-EXEC


        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE
            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR SELECT SE_CSLD_PRM_USR,SE_USR_UNT_OFF'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** QC User logic                                                 G
      ****************************************************************  G
       40020-QC-USR-LOGIC.
        MOVE '40020-QC-USR-LOGIC' TO WSL-PARA-NAME

      * Based on the county Process control, perform the Match QC
      * Individual Max and Match QC user office with the Case User
      * Office

        IF WSS-MATQMAX
           IF WSH-QC-USR-CNT < WSH-MAX-QC-REVW-CNT
           SET WSS-NO-SKIP TO TRUE
           ELSE
           SET WSS-SKIP      TO TRUE
           END-IF
        END-IF

        IF WSS-MATQOFF AND WSS-NO-SKIP
            PERFORM 40030-GET-QC-USR-OFF
            PERFORM 40015-GET-CS-USR-OFF
            IF WSH-CUR-OFF-ID <> WSH-QC-USR-OFF-ID
            SET WSS-SKIP TO TRUE
            ELSE
            SET WSS-NO-SKIP TO TRUE
            END-IF
        END-IF

        IF WSS-NO-SKIP
            SET WSS-END-C7-CURSOR   TO TRUE
            SET LNK-CA0001S-SUCCESS TO TRUE
            MOVE WSH-QC-USR-ID      TO LNK-CA0001S-QC-USR-ID
            PERFORM 10580-CLOSE-C7-CURSOR
        ELSE
            PERFORM 10570-FETCH-C7-CURSOR
        END-IF
        .

      ****************************************************************  G
      *** Get QC user office                                            G
      ****************************************************************  G
       40030-GET-QC-USR-OFF.
        MOVE '40030-GET-QC-USR-OFF' TO WSL-PARA-NAME

      * Get the QC Reviwer Office

           EXEC SQL
            SELECT
               OFF_ID
            INTO
               :WSH-QC-USR-OFF-ID
            FROM
               SE_USR_UNT_OFF
            WHERE
                USR_ID = RTRIM(:WSH-QC-USR-ID)
            AND PRM_SW = :WSC-YES
           END-EXEC

          EVALUATE SQLCODE
          WHEN WSC-SQL-OK
              CONTINUE

          WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
              INITIALIZE WSL-MISC-ERROR-TXT
                      LNK-AA0052C-CALWIN-ERROR-TEXT
                      LNK-SQL-TEXT
              STRING
                 'ERROR SELECTING SE_USR_UNT_OFF*'
                 WSH-QC-USR-ID   DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSC-YES            DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSH-CURRENT-DT  DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
              INTO WSL-MISC-ERROR-TXT
              END-STRING

              MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              SET WSL-CS              TO TRUE
              SET WSL-FATAL         TO TRUE
              PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************     G
      *** Get a closed caseload within the current office.          G
      ****************************************************************  G
       40050-GET-OFF-DFLT-CLOSD-CSLD.
           MOVE '40050-GET-OFF-DFLT-CLOSD-CSLD' TO WSL-PARA-NAME

      *   SELECT A CLOSED CASELOAD FROM THE CURRENT OFFICE

           EXEC SQL
            SELECT
             A.CSLD_ID
            INTO
             :WSH-CLOSED-CSLD-ID
            FROM
             SE_CSLD A
            ,RT_CS_MODE B
            WHERE
             A.OFF_ID            = :WSH-CUR-OFF-ID
            AND B.CASE_MODE_CD      = :WSC-CLOSE-CSLD-IND
            AND A.CSLD_MODE_CD      = B.CASE_MODE_CD
               AND ROWNUM = 1
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             SET WSS-CLOSED-CSLD-FOUND TO TRUE
                DISPLAY 'FOUND CLOSED CSLD ' WSH-CLOSED-CSLD-ID

           WHEN WSC-NOT-FOUND
             SET WSS-CLOSED-CSLD-NOT-FOUND TO TRUE
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             STRING 'NO CLOSED CASELOAD FOR OFFICE ' 
                    DELIMITED BY SIZE 
                    WSH-CUR-OFF-ID-X DELIMITED BY SIZE
             INTO  WSL-MISC-ERROR-TXT
             END-STRING
             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             PERFORM 91000-ERROR
             SET LNK-CA0001S-SUCCESS TO TRUE
             MOVE SPACES             TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             PERFORM 90000-CLOSE

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR IN SE_CSLD, RT_CS_MODE'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE SPACES             TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .


      ****************************************************************     G
      *** Update the closed case with default closed caseload.          G
      ****************************************************************
       40075-UPD-CLOSD-CS-PGM-INFO.
        MOVE '40075-UPD-CLOSD-CS-PGM-INFO' TO WSL-PARA-NAME

        INITIALIZE WSI-CLOSD-CNT
        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-CLOSD-CNT FROM 1 BY 1
          UNTIL WSI-CLOSD-CNT = WSC-26
          OR WSS-PROCESS-COMPLETE

      ** Code needed to be moved to get the off-id for EACH HLPG
      ** because they could be split over multiple offices

      ** BEGINNING OF MOVED CODE BLOCK - DACR20000000

DACR0             IF WST-CS-ID(WSI-CLOSD-CNT) <> WSH-CUR-CS-ID
             SET WSS-PROCESS-COMPLETE TO TRUE
            ELSE

             IF WST-CSLD-ID(WSI-CLOSD-CNT) = ZEROES
                 STRING
                 'Missing caseload for program '
                    DELIMITED BY SIZE
                 'group ' DELIMITED BY SIZE
                 WST-PGM-TYP-CD(WSI-CLOSD-CNT)
                    DELIMITED BY SIZE
                 INTO WSL-MISC-ERROR-TXT
                 END-STRING
                 MOVE WST-CS-ID(WSI-CLOSD-CNT) TO
                  WSL-IDENTIFIER
                 SET WSL-INFORMATIONAL TO TRUE
                 MOVE SPACES TO WSL-CALWIN-ERROR-CODE
                 MOVE ZEROES TO
                    LNK-AA0052C-CALWIN-ERROR-CD
                    LNK-AA0052C-CALWIN-ERROR-TEXT
                           WSL-ERROR-VALUE
                    LNK-SQL-CODE
                 PERFORM 91000-ERROR
                 MOVE SPACES TO WSL-MISC-ERROR-TXT
                         WSL-IDENTIFIER
                 ELSE
                 MOVE WST-CSLD-ID(WSI-CLOSD-CNT) TO
                   WSH-CUR-CSLD-ID
                   LNK-CA0001S-CSLD-ID

                 PERFORM 42027-CHK-CSLD-ID-MODE

                 IF WSH-TEMP-CSLD-MODE-CD <> WSC-CLSD-CSLD-MOD-CD
                  PERFORM 41500-GET-CSLD-OFF



                       IF WSH-CUR-OFF-ID > ZEROES

DACR0                       PERFORM 43000-DETERMINE-CLOSED-CSLD

                       IF WSS-CLOSED-CSLD-FOUND
DACR0                          PERFORM 41000-CLOSD-CS-PGM-UPDT
                       END-IF

                       END-IF
5003  * Moved End If to ensure that cases are only moved if not 
5003  * currently assigned to a closed caseload
5003                END-IF
             END-IF
            END-IF

      ** END OF MOVED CODE BLOCK - DACR20000000

        END-PERFORM

        INITIALIZE WST-TABLES
                WSI-CLOSD-CNT
                WST-USR-ONGNG-CS-CR-DATA
        .

      ****************************************************************
      *** Call the update to CS_PGM to move the HLPG to a closed csld
      ****************************************************************
       41000-CLOSD-CS-PGM-UPDT.
        MOVE '41000-CLOSD-CS-PGM-UPDT' TO WSL-PARA-NAME

        DISPLAY WSL-PARA-NAME

        IF WST-CS-ID(WSI-CLOSD-CNT) <> WSH-CUR-CS-ID
           SET WSS-PROCESS-COMPLETE TO TRUE
        ELSE
           MOVE WST-CS-ID(WSI-CLOSD-CNT)     TO
             WSH-CUR-CS-ID
             MOVE WST-PGM-TYP-CD(WSI-CLOSD-CNT) TO
          WSH-CUR-PGM-TYP-CD
            MOVE WST-EFF-BGN-DT(WSI-CLOSD-CNT) TO
          LNK-CA0001S-EFF-BGN-DT
           MOVE WST-EFF-END-DT(WSI-CLOSD-CNT) TO
          LNK-CA0001S-EFF-END-DT
           MOVE WST-UPD-DTM(WSI-CLOSD-CNT)     TO
          LNK-CA0001S-UPD-DTM
           MOVE WST-FETCH-DTM(WSI-CLOSD-CNT)     TO
          LNK-CA0001S-FETCH-DTM
           MOVE WSC-CLOSED-CS-XFR-RSN          TO
          LNK-CA0001S-OVR-RSN-CD

           PERFORM 69800-1ST-UPDATE-CS-PGM

           PERFORM 69825-2ND-UPDATE-CS-PGM

           MOVE WST-CSLD-ID(WSI-CLOSD-CNT)    TO
          WSH-CUR-CSLD-ID
           PERFORM 69220-UPDATE-CASE-WEIGHTS
        END-IF
           .

      ****************************************************************  G
      *** Get Case user office                                          G
      ****************************************************************  G
       41500-GET-CSLD-OFF.
        MOVE '41500-GET-CSLD-OFF' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        MOVE LNK-CA0001S-CSLD-ID TO WSH-CUR-CSLD-ID
5003        INITIALIZE WSH-CUR-OFF-ID

      *Get the Office Id for the User for the caseload ID
      *SQL-180

           EXEC SQL
            SELECT
             A.OFF_ID
            INTO
             :WSH-CUR-OFF-ID
            FROM
             SE_CSLD A
            ,RT_OFF B
            WHERE
             A.CSLD_ID        = :WSH-CUR-CSLD-ID
            AND A.OFF_ID        = B.OFF_ID
            AND B.EFF_BGN_DT        <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC


        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE
            WHEN OTHER
              MOVE SQLCODE          TO LNK-SQL-CODE
                                 WSL-ERROR-VALUE
                    MOVE WSC-513                TO WSL-CALWIN-ERROR-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR SELECTING RT_OFF, SE_CSLD'
                              TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
              MOVE WSH-CUR-CSLD-ID    TO WSL-ADDL-KEY-1
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************     G
      *** Process Closed Case Assignment                    G
      ****************************************************************
       42000-PROCESS-CL-ASSGN.
        MOVE '42000-PROCESS-CL-ASSGN' TO WSL-PARA-NAME

        DISPLAY WSL-PARA-NAME

        PERFORM 42025-GET-CLOSED-CS-PGM

        IF WSS-PROCESS-CLOSED-CS
           PERFORM 40075-UPD-CLOSD-CS-PGM-INFO
5277  ***  END DATE THE SPECIAL INDICATORS ON THE CASE
5277           PERFORM 81000-END-DT-SPL-INDS
        ELSE
            SET LNK-CA0001S-SUCCESS TO TRUE
        END-IF
        .

      ****************************************************************     G
      *** Get all the closed case program information               G
      ****************************************************************
       42025-GET-CLOSED-CS-PGM.
        MOVE '42025-GET-CLOSED-CS-PGM' TO WSL-PARA-NAME

        INITIALIZE WST-TABLES

           EXEC SQL
            SELECT
             CS_ID
            ,PGM_TYP_CD
            ,TO_CHAR(EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
            ,NVL(CSLD_ID, 0)
            ,PGM_STS_CD
            INTO
            :WST-CS-PGM-UPD-DATA
            FROM
             CS_PGM
            WHERE
             CS_ID        = :WSH-CUR-CS-ID
            AND EFF_BGN_DT      <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
           WHEN WSC-NOT-FOUND
             IF WST-CS-ID(1) <> SPACES
                 MOVE ZEROES                 TO SQLCODE
                 SET WSS-PROCESS-CLOSED-CS       TO TRUE
               DISPLAY 'PROCESS CLOSED CS'
             ELSE
                 SET WSS-PROCESS-NO-CLOSED-CS    TO TRUE
             END-IF

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT
                     LNK-SQL-TEXT
             STRING
                 'ERROR SELECTING CS_PGM*'
                 WSH-CUR-CS-ID   DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSH-CURRENT-DT  DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************     G
      *** Check whether the caseload the case was assigned is not the
      *** Closed caseload
      ****************************************************************
       42027-CHK-CSLD-ID-MODE.
        MOVE '42027-CHK-CSLD-ID-MODE' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
           EXEC SQL
            SELECT
            CSLD_MODE_CD
            INTO
            :WSH-TEMP-CSLD-MODE-CD
            FROM
            SE_CSLD
            WHERE
             CSLD_ID     = :WSH-CUR-CSLD-ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE

            WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT
                     LNK-SQL-TEXT
             STRING
                 'ERROR SELECTING SE_CSLD*'
                 WSH-CUR-CS-ID   DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSH-CURRENT-DT  DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************     
      *** This paragraph determines the best closed caseload to 
      *** assign the HLPG to
      ****************************************************************
       43000-DETERMINE-CLOSED-CSLD.

        MOVE '43000-DETERMINE-CLOSED-CSLD' TO WSL-PARA-NAME

        PERFORM 43010-GET-ACTIVE-CSLD-CNT

        IF WSS-GOOD-CLOSED-CSLD
          PERFORM 43020-GET-GOOD-CLOSED-CSLD
        END-IF

        IF WSS-OK-CLOSED-CSLD
          PERFORM 43030-GET-OK-CLOSED-CSLD
        END-IF

        IF WSS-BAD-CLOSED-CSLD
          PERFORM 40050-GET-OFF-DFLT-CLOSD-CSLD
        END-IF
        .

      ****************************************************************     
      *** This paragraph determines does a count to determine what
      *** the best available closed caseload criteria is.
      *** The best closed caseloads have both an active primary user
      *** and the has_cs_sw on se_csld = 'Y'
      ****************************************************************
       43010-GET-ACTIVE-CSLD-CNT.

        MOVE '43010-GET-ACTIVE-CSLD-CNT' TO WSL-PARA-NAME

      * Default the switch to ignore has_cs_sw and primary user
      * when determining the close caseload

        SET WSS-BAD-CLOSED-CSLD TO TRUE

           EXEC SQL
           SELECT
            COUNT(DISTINCT(A.CSLD_ID))
           INTO
            :WSH-ACTIVE-CSLD-CNT
           FROM
             SE_CSLD A
            ,SE_CSLD_PRM_USR B
            ,SE_CSLD_PRM_USR_K C
           WHERE
               A.OFF_ID = :WSH-CUR-OFF-ID
           AND A.CSLD_MODE_CD = :WSC-CLOSE-CSLD-IND
           AND A.HAS_CS_SW = :WSC-YES
           AND A.CSLD_ID = B.CSLD_ID
           AND B.EFF_BGN_DT = C.LTST_EFF_BGN_DT
           AND C.LTST_EFF_END_DT IS NULL
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
      * If the count is > 0 there are active closed cslds available
      * that have a valid primary user
             IF WSH-ACTIVE-CSLD-CNT > 0
                SET WSS-GOOD-CLOSED-CSLD TO TRUE
             END-IF

            WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT
                     LNK-SQL-TEXT
             STRING
                 'ERROR SELECTING SE_CSLD FOR CLOSED CSLD*'
                 WSH-CUR-CS-ID   DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSH-CURRENT-DT  DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE

        IF NOT WSS-GOOD-CLOSED-CSLD
           EXEC SQL
           SELECT
            COUNT(A.CSLD_ID)
           INTO
            :WSH-ACTIVE-CSLD-CNT
           FROM
             SE_CSLD A
           WHERE
               A.OFF_ID = :WSH-CUR-OFF-ID
           AND A.CSLD_MODE_CD = :WSC-CLOSE-CSLD-IND
           AND A.HAS_CS_SW = :WSC-YES
           END-EXEC

          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
      * If the count is > 0 there are active closed cslds available
      * but do not have a valid primary user
             IF WSH-ACTIVE-CSLD-CNT > 0
                SET WSS-OK-CLOSED-CSLD TO TRUE
             END-IF

            WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             INITIALIZE WSL-MISC-ERROR-TXT
                     LNK-AA0052C-CALWIN-ERROR-TEXT
                     LNK-SQL-TEXT
             STRING
                 'ERROR SELECTING SE_CSLD FOR CLOSED CSLD*'
                 WSH-CUR-CS-ID   DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
                 WSH-CURRENT-DT  DELIMITED BY SIZE
                 WSC-ASTERISK    DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-CS             TO TRUE
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
          END-EVALUATE
        END-IF
        .

      ****************************************************************     
      *** This paragraph selects the closed caseload that has a valid
      *** primary user and the has_cs_sw = 'y'
      ****************************************************************
       43020-GET-GOOD-CLOSED-CSLD.

        MOVE '43020-GET-GOOD-CLOSED-CSLD' TO WSL-PARA-NAME

           EXEC SQL
           SELECT
            DISTINCT(A.CSLD_ID)
           INTO
            :WSH-CLOSED-CSLD-ID
           FROM
             SE_CSLD A
            ,SE_CSLD_PRM_USR B
            ,SE_CSLD_PRM_USR_K C
           WHERE
                A.OFF_ID = :WSH-CUR-OFF-ID
            AND A.CSLD_MODE_CD = :WSC-CLOSE-CSLD-IND
            AND A.HAS_CS_SW = :WSC-YES
            AND A.CSLD_ID = B.CSLD_ID
            AND B.EFF_BGN_DT = C.LTST_EFF_BGN_DT
            AND C.LTST_EFF_END_DT IS NULL
            AND ROWNUM = 1
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             SET WSS-CLOSED-CSLD-FOUND TO TRUE
                DISPLAY 'FOUND CLOSED CSLD ' WSH-CLOSED-CSLD-ID

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR IN SE_CSLD, SE_CSLD_PRM_USR'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE SPACES             TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             MOVE WSH-CUR-OFF-ID         TO WSL-ADDL-KEY-1
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************     
      *** This paragraph selects the closed caseload where the 
      *** has_cs_sw = 'y' but no valid primary user
      ****************************************************************
       43030-GET-OK-CLOSED-CSLD.

        MOVE '43030-GET-OK-CLOSED-CSLD' TO WSL-PARA-NAME

           EXEC SQL
           SELECT
            A.CSLD_ID
           INTO
            :WSH-CLOSED-CSLD-ID
           FROM
             SE_CSLD A
           WHERE
              A.OFF_ID = :WSH-CUR-OFF-ID
           AND A.CSLD_MODE_CD = :WSC-CLOSE-CSLD-IND
           AND A.HAS_CS_SW = :WSC-YES
           AND ROWNUM = 1
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             SET WSS-CLOSED-CSLD-FOUND TO TRUE
                DISPLAY 'FOUND CLOSED CSLD ' WSH-CLOSED-CSLD-ID

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
             MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                          LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR IN SE_CSLD, SE_CSLD_PRM_USR'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE SPACES             TO
                            LNK-AA0052C-CALWIN-ERROR-TEXT
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             MOVE WSH-CUR-OFF-ID         TO WSL-ADDL-KEY-1
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      *****************************************************************
      * Read the transfer caseload and override reason and call para to
      * update cs_pgm
      *****************************************************************
2349   44000-TRANSFER-CHP-ENROL.
           MOVE '44000-TRANSFER-CHP-ENROL' TO WSL-PARA-NAME
      * Retrieve Transfer Caseload  for CHP Vendor
           EXEC SQL
                SELECT
                      XFER_CSLD_ID
                INTO
                      :WSH-XFR-CSLD-ID
                FROM
                      RT_CNTY_OFF_XFER_CSLD
                WHERE
                      CNTY_CD    = :WSC-MASITE-CNTY-CD
                AND CHP_VEND_SW  = :WSC-YES
                AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING XFER CSLD FOR CHP VENDOR'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE
      *  Retrieve Override Reason of Inter County Transfer
           MOVE  WSC-INTER-CNTY-XFR-RSN  TO
                 LNK-CA0001S-OVR-RSN-CD
      *  Retrieve the CS PGM for the case and chp+ program and upd dtm
      *  for soft lock
           EXEC SQL
                SELECT
                  CS_ID,
                  PGM_TYP_CD,
                  TO_CHAR(EFF_BGN_DT, 'YYYY-MM-DD') ,
                  TO_CHAR(NVL(EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD'),
                  TO_CHAR(UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
                INTO
                  :WSH-CUR-CS-ID,
                  :WSH-CUR-PGM-TYP-CD,
                  :LNK-CA0001S-EFF-BGN-DT,
                  :LNK-CA0001S-EFF-END-DT,
                  :LNK-CA0001S-UPD-DTM
                FROM
                  CS_PGM
                WHERE
                    CS_ID           = :LNK-CA0001S-CS-ID
                AND PGM_TYP_CD      = :LNK-CA0001S-PGM-TYP-CD
                AND EFF_BGN_DT     <=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING CS PGM FOR CHP PROGRAM'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE

           PERFORM 44010-UPD-CHP-CS-PGM-INFO
           .

      ******************************************************************
      * UPDATE CS PGM RECORDS FOR CHP PENDING ENROLMENT
      ******************************************************************
       44010-UPD-CHP-CS-PGM-INFO.
           MOVE '44010-UPD-CHP-CS-PGM-INFO' TO WSL-PARA-NAME
           SET WSS-NO-MT-ERR TO TRUE
           SET WSS-MT-TYPES-ASGN TO TRUE
           PERFORM 69800-1ST-UPDATE-CS-PGM

           IF WSS-NO-MT-ERR
              PERFORM 69825-2ND-UPDATE-CS-PGM
              IF WSS-MT-ERR
                 PERFORM 75001-ROLLBACK
              END-IF
           ELSE
              PERFORM 75001-ROLLBACK
           END-IF
           .


      *****************************************************************
      * Read the transfer caseload and override reason and call para to
      * update cs_pgm
      *****************************************************************
7043   45000-TRANSFER-MA-PROGRAM.
           MOVE '45000-TRANSFER-MA-PROGRAM' TO WSL-PARA-NAME

           IF LNK-CA0001S-CNTY-OF-RES = WSC-MASITE-CNTY-CD

      * Retrieve Transfer Caseload  for MA Site Vendor
            EXEC SQL
                SELECT
                      XFER_CSLD_ID
                INTO
                      :WSH-XFR-CSLD-ID
                FROM
                      RT_CNTY_OFF_XFER_CSLD
                WHERE
                      CNTY_CD    = :WSC-MASITE-CNTY-CD
                AND CHP_VEND_SW  = :WSC-YES
                AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

            END-EXEC
            EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING XFER CSLD FOR MA SITE VENDOR'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
            END-EVALUATE

           ELSE

      * Retrieve Transfer Caseload  for County of Residence
            EXEC SQL
                SELECT
                      XFER_CSLD_ID
                INTO
                      :WSH-XFR-CSLD-ID
                FROM
                      RT_CNTY_OFF_XFER_CSLD
                WHERE
                      CNTY_CD    = :LNK-CA0001S-CNTY-OF-RES
      *         AND CHP_VEND_SW  = :WSC-YES
                AND EFF_BGN_DT       <=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')

            END-EXEC
            EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING XFER CSLD FOR County of Res'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
            END-EVALUATE

           END-IF

      *  Retrieve Override Reason of MA program Transfer
           MOVE  WSC-MA-XFR-RSN  TO
                 LNK-CA0001S-OVR-RSN-CD
      *  Retrieve the CS PGM for the case and chp+ program and upd dtm
      *  for soft lock
           EXEC SQL
                SELECT
                  CS_ID,
                  PGM_TYP_CD,
                  TO_CHAR(EFF_BGN_DT, 'YYYY-MM-DD') ,
                  TO_CHAR(NVL(EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD'),
                  TO_CHAR(UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
                INTO
                  :WSH-CUR-CS-ID,
                  :WSH-CUR-PGM-TYP-CD,
                  :LNK-CA0001S-EFF-BGN-DT,
                  :LNK-CA0001S-EFF-END-DT,
                  :LNK-CA0001S-UPD-DTM
                FROM
                  CS_PGM
                WHERE
                    CS_ID           = :LNK-CA0001S-CS-ID
                AND PGM_TYP_CD      = :LNK-CA0001S-PGM-TYP-CD
                AND EFF_BGN_DT     <=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN WSC-NOT-FOUND
               WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                            LNK-SQL-CODE
                 MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING CS PGM FOR MA PROGRAM'
                                         TO WSL-MISC-ERROR-TXT
                                            LNK-SQL-TEXT
                 MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE

           PERFORM 44010-UPD-CHP-CS-PGM-INFO
           .

      ****************************************************************  G
      *** Case assignment process                                       G
      ****************************************************************  G
       60000-CASE-ASSIGNMENT-PROCESS.
           MOVE '60000-CASE-ASSIGNMENT-PROCESS' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Case Assignment Logic that includes
      *       Language
      *       Special Indicator
      *       Culture
      *       Schedule
      *       Labor Agreement


        SET WSS-ASSGN-CSLD TO TRUE

           IF WSI-CSLD = ZEROES
            COMPUTE WSI-CSLD = WSI-CSLD + WSC-ONE
            END-COMPUTE
        END-IF

      ** Match the Case Language with the User/Caseload Language
        PERFORM 60100-VERIFY-CS-USR-LANG

        IF WSS-USR-LANG-MATCH
            MOVE WSC-YES TO WSH-LANG-MTCH(WSI-CSLD)
        ELSE
            MOVE WSC-NO TO WSH-LANG-MTCH(WSI-CSLD)
        END-IF

      * Check the User Speak English Language
        PERFORM 60110-CHK-USR-ENG-LANG

        IF WSS-USR-ENG-LANG-MTCH
            MOVE WSC-YES TO WSH-CSLD-USR-ENG-MTCH(WSI-CSLD)
        ELSE
            MOVE WSC-NO TO WSH-CSLD-USR-ENG-MTCH(WSI-CSLD)
        END-IF

      ** Match the Case special Situations  with the User/Caseload
      *      Special Situations
        IF WSS-CS-SPL-IND-EXISTS
            PERFORM 60200-VERIFY-CS-USR-SPL-IND

            IF WSS-CS-SPL-IND-MATCH
             MOVE WSC-YES TO WSH-SPL-IND-MTCH(WSI-CSLD)
            ELSE
             MOVE WSC-NO TO WSH-SPL-IND-MTCH(WSI-CSLD)
            END-IF
        ELSE
            MOVE WSC-NO TO WSH-SPL-IND-MTCH(WSI-CSLD)
        END-IF


      ** Match the Case/Individual Ethnicity  with the User/Caseload
      *      Ethnicity

        PERFORM 60300-VERIFY-CS-CULTURE-MATCH

        IF WSS-CS-ETHN-USR-MATCH
           MOVE WSC-YES TO WSH-ETHN-MTCH(WSI-CSLD)
           MOVE WSH-NO-OF-ETHN-MTCHS TO WSH-NUM-ETHN-MTCHS(WSI-CSLD)
        ELSE
           MOVE WSC-NO TO WSH-ETHN-MTCH(WSI-CSLD)
           MOVE ZERO TO WSH-NUM-ETHN-MTCHS(WSI-CSLD)
        END-IF

      ** Determine if the current caseload has already been assigned 
      *  other HLPG's for the current case and increase the total
      *  ranking by the number of HLPG's already assigned.  Used to
      *  give the caseloads that have already been assigned HLPG's on 
      *  the case a higher ranking so that they will be sorted to the
      *  top during final assignment.  DACR 3415

           PERFORM 60520-GET-CUR-HLPG-CNT

      ** Appointment Scheduling Process will be called to check the
      *      availability of the User

      *Removed call to application scheduling 

      *IF WSS-SI-PROCESS-SINGLE-CS-PGM AND
      *     LNK-CA0001S-CS-MODE-CD = WSC-INTAKE
      *     PERFORM 60400-CALL-USR-SCHDLE
      *ELSE
        MOVE WSC-YES TO WSH-USR-SCH-MTCH(WSI-CSLD)
      *END-IF

        IF NOT WSS-NOT-ASSGN-CSLD
            PERFORM 60500-CALL-LABOR-PROCESS
        END-IF

        IF WSS-NOT-ASSGN-CSLD
            MOVE ZEROES TO WSH-CSLD-ID-MTCH(WSI-CSLD)
            MOVE SPACES TO WSH-LANG-MTCH(WSI-CSLD)
            MOVE SPACES TO WSH-SPL-IND-MTCH(WSI-CSLD)
            MOVE SPACES TO WSH-ETHN-MTCH(WSI-CSLD)
            MOVE SPACES TO WSH-USR-SCH-MTCH(WSI-CSLD)
            MOVE SPACES TO WSH-MAX-CRD-CNT-RCH(WSI-CSLD)
            MOVE SPACES TO WSH-LANG-CNT-RCH(WSI-CSLD)
            MOVE WSH-CUR-USR-ID TO WSH-USR-ID-MTCH(WSI-CSLD)
         ELSE
            MOVE WSH-CUR-CSLD-ID TO WSH-CSLD-ID-MTCH(WSI-CSLD)
            MOVE WSH-CUR-CS-ID TO WSH-CS-ID-MTCH(WSI-CSLD)
            MOVE WSH-CUR-PGM-TYP-CD TO WSH-PGM-TYP-CD-MTCH(WSI-CSLD)
            MOVE WSH-CUR-USR-ID TO WSH-USR-ID-MTCH(WSI-CSLD)

            PERFORM 60530-ARRAY-NUM-ASGN

            COMPUTE WSI-CSLD = WSI-CSLD + WSC-ONE
            END-COMPUTE
        END-IF
        .

      ****************************************************************  G
      *** Verify Case User Language                                     G
      ****************************************************************  G
       60100-VERIFY-CS-USR-LANG.
        MOVE '60100-VERIFY-CS-USR-LANG' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      **(Based on the County Process Control Table, If the county
      *      requires to Match Case language with Caseload Language
      *      following Select is executed)
      ** SQL-120

        IF WSS-CNTY-PROC-LANG-MTCH
            PERFORM 60105-GET-CS-USR-LANG
        ELSE
            SET WSS-USR-LANG-MATCH TO TRUE
        END-IF
        .

      ****************************************************************  G
      *** Procedure division copybook for paragraphs 60105 & 60110      G
      ****************************************************************  G
       COPY CA0004C.

      ****************************************************************  G
      *** Verify Case User Special Indicator                            G
      ****************************************************************  G
       60200-VERIFY-CS-USR-SPL-IND.
        MOVE '60200-VERIFY-CS-USR-SPL-IND' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      **(Based on the County Process Control Table, If the county
      *        requires to Match Case Special Characteristics with Caseload
      *        Special Characteristics the following Select is executed)
      ** SQL-200

        INITIALIZE SQLCA, WSH-DUMMY
               WSH-CSLD-SPL-IND-COUNT

        IF  WSS-CNTY-PROC-SPL-IND-MTCH
            EXEC SQL

          SELECT COUNT(Y.CHAR_NM_CD)
            INTO
                 :WSH-CSLD-SPL-IND-COUNT
            FROM SE_CSLD_CHAR Y
                ,RT_SPL_CHAR Z
           WHERE Y.CSLD_ID = :WSH-CUR-CSLD-ID
             AND Z.CS_ASGN_SW = :WSC-YES
             AND Y.CHAR_NM_CD = Z.SPL_CHAR_CD
             AND Z.EFF_BGN_DT            <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(Z.EFF_END_DT, F_HIGH_DT()) >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND Y.CHAR_NM_CD IN
               (SELECT
                      X.SITN_TYP_CD
                  FROM
                      CS_SPL_SITN X
                      ,RT_SPL_CHAR W
                  WHERE
                      X.CS_ID             = :WSH-CUR-CS-ID
                  AND X.EFF_BGN_DT        <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(X.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(X.EFF_END_DT, F_HIGH_DT()) <>
                      X.EFF_BGN_DT
                  AND X.SITN_TYP_CD        = W.SPL_CHAR_CD
                  AND W.CS_ASGN_SW        = :WSC-YES
                  AND W.EFF_BGN_DT        <=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                  AND NVL(W.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
                )
            END-EXEC

            EVALUATE SQLCODE
             WHEN WSC-SQL-OK
             WHEN WSC-NOT-FOUND
               IF WSH-CSLD-SPL-IND-COUNT > 0
                         SET WSS-CS-SPL-IND-MATCH TO TRUE
               ELSE
                         SET WSS-CS-SPL-IND-NOT-MATCH TO TRUE
               END-IF

             WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                       MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                    LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR SELECTING CS_SPL_SITN'
                                TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                       MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL            TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE

            END-EVALUATE
           ELSE
             SET WSS-CS-SPL-IND-NOT-MATCH TO TRUE 
           END-IF
        .

      ****************************************************************  G
      *** Varify Case Culture Match                                     G
      ****************************************************************  G
       60300-VERIFY-CS-CULTURE-MATCH.
          MOVE '60300-VERIFY-CS-CULTURE-MATCH' TO WSL-PARA-NAME
      *   PERFORM 89999-DISPLAY-PARA
      ** (Based on the County Process Control Table, If the county
      *    requires to Match Case Culture with Caseload Culture the
      *    following Select is executed)

      * SQL-210
  
          INITIALIZE SQLCA, WSH-DUMMY
  
         IF WSS-CNTY-PROC-CULT-MTCH
            EXEC SQL
              SELECT
                  COUNT(B.CWIN)
           INTO
            :WSH-NO-OF-ETHN-MTCHS
              FROM
                   CS A
                  ,INDV_ETHN B
                  ,SE_CSLD_CULT C
              WHERE
                  A.CS_ID         =  :WSH-CUR-CS-ID
              AND A.EFF_BGN_DT    <=
                  TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND NVL(A.EFF_END_DT, F_HIGH_DT())   >=
                   TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
              AND B.CWIN          = A.APP_CWIN
              AND C.CSLD_ID       = :WSH-CUR-CSLD-ID
              AND C.CULT_NM_CD    = B.ETHN_CD
           END-EXEC
  
             EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   SET WSS-CS-ETHN-USR-MATCH TO TRUE
  
               WHEN WSC-NOT-FOUND
                   SET WSS-CS-ETHN-USR-NOT-MATCH TO TRUE
  
               WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                                              LNK-SQL-CODE
                   MOVE 513                TO WSL-CALWIN-ERROR-CODE
                         LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING CS-USR-CULTURE '
                                           TO WSL-MISC-ERROR-TXT
                                              LNK-SQL-TEXT
                   SET WSL-FATAL           TO TRUE
                   SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
            END-EVALUATE
           
          .

      ****************************************************************  G
      *** Call User Schedule                                            G
      ****************************************************************  G
       60400-CALL-USR-SCHDLE.
        MOVE '60400-CALL-USR-SCHDLE' TO WSL-PARA-NAME

      * Check the Schedule of the user only in the Suggest User Inquiry
      * Process

      *    SET     WSS-USR-SCH-MATCH TO TRUE

      *    INITIALIZE WSH-AS0200S-VARIABLES

      *    SET LNK-AS0200S-USR-AVAIL-88 TO TRUE
      *    SET LNK-AS0200S-PRRTY-SW-YES-88 TO TRUE

      *    MOVE WSH-CUR-USR-ID            TO LNK-AS0200S-USER-ID
      *    MOVE WSC-INTAKE            TO LNK-AS0200S-APPT-TYP-CD
      *    MOVE WSH-CUR-OFF-ID            TO LNK-AS0200S-OFFICE-ID
      *    MOVE LNK-CA0001S-SUGST-DT   TO LNK-AS0200S-BGN-DT
      *                       LNK-AS0200S-END-DT
      *                       LNK-AS0200S-SUGG-DT

      *    MOVE WSH-SCHD-CUR-TM           TO LNK-AS0200S-CURRENT-TM
      *    IF  LNK-CA0001S-SUGST-TM    = WSC-DFLT-TIME
      *        MOVE SPACES             TO LNK-AS0200S-SUGG-BGN-TM
      *    ELSE
      *        MOVE LNK-CA0001S-SUGST-TM   TO LNK-AS0200S-SUGG-BGN-TM
      *    END-IF

      * Call subroutine AS0200S
      *        CALL WSC-AS0200S USING  LNK-COMMON-PARMS
      *                      ,WSH-AS0200S-VARIABLES
      *        END-CALL
      *
      *        EVALUATE TRUE
      *            WHEN LNK-AS0200S-AVAILABLE-88
      *            WHEN LNK-AS0200S-SUCCESS-88
      *              CONTINUE
      *
      *            WHEN LNK-AS0200S-NOT-AVAILABLE-88
      *              SET WSS-NOT-ASSGN-CSLD TO TRUE
      *
      *            WHEN OTHER
      *              MOVE LNK-SQL-CODE         TO WSL-ERROR-VALUE
      *             MOVE WSC-501            TO WSL-CALWIN-ERROR-CODE
      *                                  LNK-AA0052C-CALWIN-ERROR-CD
      *              STRING
      *               'Error in Scheduling* '
      *               WSH-CUR-USR-ID DELIMITED BY '  '
      *              WSC-ASTERISK   DELIMITED BY SIZE
      *               LNK-CA0001S-SUGST-DT
      *              WSC-ASTERISK   DELIMITED BY SIZE
      *               LNK-AS0200S-SUGG-BGN-TM
      *              WSC-ASTERISK   DELIMITED BY SIZE
      *               WSH-SCHD-CUR-TM
      *              WSC-ASTERISK   DELIMITED BY SIZE
      *               LNK-AS0200S-ORA-ERR-MSG DELIMITED BY '  '
      *              INTO WSL-MISC-ERROR-TXT
      *              END-STRING
      *             MOVE 'AS0200S' TO LNK-AA0052C-CALWIN-ERROR-TEXT
      *              MOVE WSL-MISC-ERROR-TXT TO     LNK-SQL-TEXT
      *              SET LNK-CA0001S-FAILURE TO TRUE
      *              PERFORM 90000-CLOSE
      *
      *        END-EVALUATE
               .

      ****************************************************************  G
      *** Call labor process                                            G
      ****************************************************************  G
       60500-CALL-LABOR-PROCESS.
        MOVE '60500-CALL-LABOR-PROCESS' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      ** Based on the County Process Control Table, If the county
      *      requires to match the Labor Agreement for the Caseload, the
      *      following process is executed

        IF WSS-CNTY-PROC-LABOR-MTCH
            IF WSH-CUR-CS-MODE-CD = WSC-INTAKE
             PERFORM 60505-CHECK-USR-INTAKE-CRDT
            ELSE
             PERFORM 60510-CHECK-USR-ONGOING-CRDT
            END-IF
        ELSE
            MOVE WSC-NO TO WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
        END-IF
        .

      ****************************************************************  G
      *** Check User intake credit                                      G
      ****************************************************************  G
       60505-CHECK-USR-INTAKE-CRDT.
        MOVE '60505-CHECK-USR-INTAKE-CRDT' TO WSL-PARA-NAME

      *Get the Total Intake Case Credit for a User
      *SQL-240

           EXEC SQL
            SELECT
             NVL(SUM(CR_VAL),0)
            INTO
             :WSH-INTAKE-USR-CR
            FROM
             CA_USR_INTK_CS_CR
            WHERE
5001             USR_ID  = RTRIM(:WSH-CUR-USR-ID)
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
      * DACR 4501 - No longer check the max intake credit - assign 
      * no matter what the user's credit limit is at
      *              IF WSH-INTAKE-USR-CR  < WSH-MAX-INTAKE-CR
                 SET WSS-MAX-CRDT-NOT-RCH        TO TRUE
                 SET WSS-ASSGN-CSLD        TO TRUE
                 MOVE WSC-NO TO WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
                 MOVE WSH-INTAKE-USR-CR TO
                   WSH-CSLD-CRDT-VAL(WSI-CSLD)

      *              ELSE
      *                 SET WSS-MAX-CRDT-RCH        TO TRUE
      *                 SET WSS-NOT-ASSGN-CSLD        TO TRUE
      *                 MOVE WSC-YES TO WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
      *                 MOVE ZEROES TO  WSH-CSLD-CRDT-VAL(WSI-CSLD)

      *              END-IF

            WHEN WSC-NOT-FOUND
              SET WSS-ASSGN-CSLD          TO TRUE
              SET WSS-MAX-CRDT-NOT-RCH     TO TRUE
              MOVE WSC-NO TO WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
              MOVE ZEROES TO  WSH-CSLD-CRDT-VAL(WSI-CSLD)

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR IN SELECTING CA_USR_INTK_CS_CR '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE  TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Check User ongoing credit                                     G
      ****************************************************************  G
       60510-CHECK-USR-ONGOING-CRDT.
        MOVE '60510-CHECK-USR-ONGOING-CRDT' TO WSL-PARA-NAME

      *Get the Total ongoing Case Credit for the User
      *SQL-230

           EXEC SQL
            SELECT
             NVL(SUM(CR_VAL),0)
            INTO
             :WSH-ONGOING-USR-CR
            FROM
             CA_USR_ONGNG_CS_CR
            WHERE
5001             USR_ID  = RTRIM(:WSH-CUR-USR-ID)
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
      * DACR 4501 - No longer check the max ongoing credit - assign 
      * no matter what the user's credit limit is at
4501  *             IF WSH-ONGOING-USR-CR  < WSH-MAX-ONGOING-CR
                 SET WSS-MAX-CRDT-NOT-RCH        TO TRUE
                 SET WSS-ASSGN-CSLD        TO TRUE

4501                   IF WSS-NO-CHK-AU-MAX-CRDT
                   MOVE WSC-NO TO 
                   WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
                   MOVE WSH-ONGOING-USR-CR TO
                   WSH-CSLD-CRDT-VAL(WSI-CSLD)
4501                    END-IF

4501  *             ELSE
4501  *                 SET WSS-MAX-CRDT-RCH        TO TRUE
4501  *                 SET WSS-NOT-ASSGN-CSLD        TO TRUE
4501  *                 IF NOT WSS-PROCESS-AU-ASSGN
4501  *                   MOVE WSC-YES TO 
4501  *                   WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
4501  *                   MOVE WSH-ONGOING-USR-CR TO
4501  *                   WSH-CSLD-CRDT-VAL(WSI-CSLD)
4501  *                 END-IF
4501  *             END-IF

            WHEN WSC-NOT-FOUND
              SET WSS-ASSGN-CSLD          TO TRUE
              SET WSS-MAX-CRDT-NOT-RCH     TO TRUE
4501                IF NOT WSS-NO-CHK-AU-MAX-CRDT
                MOVE WSC-NO TO 
                   WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
                MOVE WSH-ONGOING-USR-CR TO
                   WSH-CSLD-CRDT-VAL(WSI-CSLD)
4501                END-IF

            WHEN OTHER
             MOVE SQLCODE              TO WSL-ERROR-VALUE
                   MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                LNK-SQL-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR IN SELECTING CA_USR_ONGNG_CR '
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE WSH-CUR-USR-ID         TO WSL-IDENTIFIER
             SET WSL-USER              TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      *****************************************************************
      ***                                                           ***
      *** Count HLPG's currently assigned to this caseload for the  ***
      *** current case.                                             ***
      ***                                                           ***
      *****************************************************************
       60520-GET-CUR-HLPG-CNT.
        MOVE '60520-GET-CUR-HLPG-CNT' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
           INITIALIZE WSH-HLPG-CNT

           EXEC SQL
           SELECT
           COUNT(UNIQUE A.PGM_TYP_CD)
           INTO
           :WSH-HLPG-CNT
           FROM
            CS_PGM A
           ,SE_CSLD B
           ,RT_PGM P
           WHERE
            A.CS_ID      = :WSH-CUR-CS-ID
           AND A.PGM_TYP_CD = P.PGM_CD
           AND A.EFF_BGN_DT <=
              TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND NVL(A.EFF_END_DT,F_HIGH_DT()) >=
              TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           AND B.CSLD_ID = :WSH-CUR-CSLD-ID
           AND B.CSLD_ID = A.CSLD_ID
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             IF WSH-HLPG-CNT > 0
                MOVE WSC-YES TO WSH-HLPG-CNT-MTCH(WSI-CSLD)
             ELSE
                MOVE WSC-NO  TO WSH-HLPG-CNT-MTCH(WSI-CSLD)
             END-IF

            WHEN OTHER
             MOVE SQLCODE              TO WSL-ERROR-VALUE
                   MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                LNK-SQL-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
             MOVE 'ERROR IN SELECTING HLPG COUNT '
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Array number assignment                                       G
      ****************************************************************  G
       60530-ARRAY-NUM-ASGN.
        MOVE '60530-ARRAY-NUM-ASGN' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Increment the array assignment number based on the Match

        MOVE ZEROES TO WSH-CSLD-SLCT-IND(WSI-CSLD)

        IF WSH-LANG-MTCH(WSI-CSLD) = WSC-YES
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
            = WSH-CSLD-SLCT-IND(WSI-CSLD) + WSC-ONE
            END-COMPUTE
        END-IF

4974  * Change to add the total number of special ind 
4974  * matches to the total caseload score
4974        IF WSH-SPL-IND-MTCH(WSI-CSLD) = WSC-YES
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
              = WSH-CSLD-SLCT-IND(WSI-CSLD) 
4974              + WSH-CSLD-SPL-IND-COUNT
            END-COMPUTE
        END-IF

        IF WSH-ETHN-MTCH(WSI-CSLD) = WSC-YES
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
            = WSH-CSLD-SLCT-IND(WSI-CSLD) 
            + WSH-NUM-ETHN-MTCHS(WSI-CSLD)
            END-COMPUTE
        END-IF

        IF WSH-USR-SCH-MTCH(WSI-CSLD) = WSC-YES
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
            = WSH-CSLD-SLCT-IND(WSI-CSLD) + WSC-ONE
            END-COMPUTE
        END-IF

        IF WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD) = WSC-NO
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
            = WSH-CSLD-SLCT-IND(WSI-CSLD) + WSC-ONE
            END-COMPUTE
        END-IF

        IF WSH-LANG-CNT-RCH(WSI-CSLD) = WSC-NO
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD)
            = WSH-CSLD-SLCT-IND(WSI-CSLD) + WSC-ONE
            END-COMPUTE
        END-IF

        IF WSH-HLPG-CNT-MTCH(WSI-CSLD) = WSC-YES
            COMPUTE WSH-CSLD-SLCT-IND(WSI-CSLD) 
               = WSH-CSLD-SLCT-IND(WSI-CSLD) 
               + WSH-HLPG-CNT
            END-COMPUTE
            MOVE WSH-HLPG-CNT TO
             WSH-NUM-HLPG-MTCH(WSI-CSLD)
        END-IF

        DISPLAY 'CSLD ID ' WSH-CSLD-ID-MTCH(WSI-CSLD)
        DISPLAY 'LANG MTCH ' WSH-LANG-MTCH(WSI-CSLD)
        DISPLAY 'SPL IND MTCH ' WSH-CSLD-SPL-IND-COUNT
        DISPLAY 'ETHN MTCH ' WSH-ETHN-MTCH(WSI-CSLD)
        DISPLAY 'SCHED MTCH ' WSH-USR-SCH-MTCH(WSI-CSLD)
        DISPLAY 'MAX CRD CNT RCH ' WSH-MAX-CRD-CNT-RCH(WSI-CSLD)
        DISPLAY 'MAX LANG CNT ' WSH-LANG-CNT-RCH(WSI-CSLD)
        DISPLAY 'CSLD MAX RCH ' WSH-CSLD-CRDT-MAX-RCH(WSI-CSLD)
        DISPLAY 'ENG MTCH ' WSH-CSLD-USR-ENG-MTCH(WSI-CSLD)
        DISPLAY 'HLPG COUNT ' WSH-NUM-HLPG-MTCH(WSI-CSLD)
        DISPLAY 'CSLD CRDT VAL ' WSH-CSLD-CRDT-VAL(WSI-CSLD)
        DISPLAY 'CSLD RANKING ' WSH-CSLD-SLCT-IND(WSI-CSLD)
        .

      **********************************************************************
      ** Do a Count of SE_CSLD_ALPHA to determine if the caseload has any
      ** alpha breakdown parameters to use the cursor on.  If not, they are
      ** not restricted to certain cases, so set the alpha match switch true
      **********************************************************************

       60600-VERIFY-ALPHA-ASSIGNMENT.

           MOVE '60600-VERIFY-ALPHA-ASSIGNMENT' TO WSL-PARA-NAME.
      *    PERFORM 89999-DISPLAY-PARA
        SET WSS-NOT-ALPHA-MTCH TO TRUE


           EXEC SQL

           SELECT COUNT(*)
           INTO   :WSH-ALPHA-BKDN-CNT
           FROM SE_CSLD_ALPHA
           WHERE  CSLD_ID = :WSH-TEMP-CSLD-ID

           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
              CONTINUE
            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR IN SELECTING COUNT ON SE_CSLD_ALPHA'
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE '60600-VERIFY-ALPHA-ASSIGNMENT' 
                              TO WSL-PARA-NAME
              SET LNK-CA0001S-FAILURE  TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              MOVE WSH-TEMP-CSLD-ID    TO WSL-ADDL-KEY-1
              PERFORM 90000-CLOSE
        END-EVALUATE      

        IF WSH-ALPHA-BKDN-CNT > 0
           PERFORM 60605-ALPHA-ASSIGNMENT-CURSOR
        ELSE
          SET WSS-ALPHA-MTCH TO TRUE
        END-IF
        .

      **********************************************************************
      ** Check the SE_CSLD_ALPHA table to see if the case can be assigned to 
      ** the current caseload based on the users alpha breakdown assignment
      ** parameters. The last 5 characters of the applicants last name are 
      ** compared to the parameters on the table to see if it is within the
      ** range that can be assigned. Where there is a beginning value, 
      ** but no ending value for a table entry, move 
      ** WSC-ALPHA-HIGH-VAL which has a value of ZZZZZ to the end 
      ** value before comparing.
      **********************************************************************

       60605-ALPHA-ASSIGNMENT-CURSOR.

      * Moved this code from 60600 and it will only be called if they actually
      * have at least on entry on se_csld_alpha

           PERFORM 10670-OPEN-C8-CURSOR

           PERFORM 10680-FETCH-C8-CURSOR 
     
        PERFORM UNTIL WSS-END-C8-CURSOR OR WSS-ALPHA-MTCH
          OR WSD-CSLD-ID OF WSD-SE-CSLD-ALPHA > WSH-TEMP-CSLD-ID
          INSPECT WSD-CSLD-ALPHA-END OF WSD-SE-CSLD-ALPHA
               REPLACING ALL SPACES BY WSC-Z
          IF WSH-COMPARE-LAST-NAME >= 
             WSD-CSLD-ALPHA-BGN OF WSD-SE-CSLD-ALPHA
          AND WSH-COMPARE-LAST-NAME <= 
             WSD-CSLD-ALPHA-END OF WSD-SE-CSLD-ALPHA
               SET WSS-ALPHA-MTCH TO TRUE
          ELSE
               PERFORM 10680-FETCH-C8-CURSOR
          END-IF
        END-PERFORM


        PERFORM 10690-CLOSE-C8-CURSOR
        .

      ****************************************************************
      ** Get the last name on the current case to use in comparison to 
      ** the alpha breakdown parameters to determine if a given 
      ** caseworker can be assigned the case
      ****************************************************************
     
       60610-GET-CASE-LAST-NAME.
      *        MOVE '60610-GET-CASE-LAST-NAME' TO WSL-PARA-NAME


           EXEC SQL

            SELECT UPPER(LAST_NM)
            INTO   :WSH-CS-LAST-NAME
            FROM CS
            WHERE  CS_ID = :WSH-CUR-CS-ID
             AND EFF_BGN_DT <= 
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(EFF_END_DT,F_HIGH_DT()) >= 
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR IN SELECTING CS_PGM, CS FOR LAST_NM '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE '60610-GET-CASE-LAST-NAME' TO WSL-PARA-NAME
              SET LNK-CA0001S-FAILURE  TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
         .

      ****************************************************************  G
      *** Search Best caseload                                          G
      ****************************************************************  G
       69000-SRCH-BEST-CSLD.
        MOVE '69000-SRCH-BEST-CSLD' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Search the best caseload

        SORT WSH-CSLD-ARRAY ON DESCENDING WSH-CSLD-SLCT-IND
                      ON ASCENDING  WSH-CSLD-CRDT-VAL
           WITH DUPLICATES IN ORDER.

        PERFORM 69200-FINAL-ASSGN-PROCESS
        .

      ****************************************************************  G
      *** Final assignment process                                      G
      ****************************************************************  G
       69200-FINAL-ASSGN-PROCESS.
        MOVE '69200-FINAL-ASSGN-PROCESS' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      *        Final update for Generic Case in Case Clearance Process

        IF WSS-AR-PROCESS-ALL-CS-PGM AND WSS-CNTY-AUTO-ASGN
           PERFORM 69210-FINAL-AR-ALL-PGM-ASGN
        END-IF


      *        Final update for non Generic Case in Case Clearance Process

        IF WSS-AR-PROCESS-SINGLE-CS-PGM AND WSS-CNTY-AUTO-ASGN
           PERFORM 69208-FINAL-AR-SNGL-ASGN
        END-IF


      *        Final update of Case Program for the Authorization Process

        IF WSS-PROCESS-AU-ASSGN
           PERFORM 69250-FINAL-AU-SNGL-ASGN
        END-IF


        IF WSS-PROCESS-ES-ASSGN
           CONTINUE
        END-IF


      *        Final Caseload list for the Suggest Inquiry Process

        IF WSS-SI-PROCESS-SINGLE-CS-PGM
           PERFORM 69300-SI-ASGN-PARAM
        END-IF
        .

      ****************************************************************  G
      *** Final AR SNGL assignment                                      G
      ****************************************************************  G
       69208-FINAL-AR-SNGL-ASGN.
        MOVE '69208-FINAL-AR-SNGL-ASGN' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        INITIALIZE WST-TABLES

      *Get all the Programs, effective begin/end date, update date time
      *for a Case and program
      *SQL-250

           EXEC SQL
           SELECT
             A.CS_ID
            ,A.PGM_TYP_CD
            ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(A.UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
            ,NVL(CSLD_ID, 0)
            ,PGM_STS_CD
           INTO
             :WST-CS-PGM-UPD-DATA
           FROM
             CS_PGM A
            ,RT_PGM P
          WHERE
             A.CS_ID        = :WSH-CUR-CS-ID
            AND A.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.PGM_TYP_CD        = P.PGM_CD
            AND P.CS_ASG_PGM        = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CS-ID(1) <> SPACES
                 MOVE ZEROES TO SQLCODE
             ELSE
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                       MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                 LNK-SQL-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR IN SELECTING CS_PGM, RT_PGM '
                                TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                       MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE     TO TRUE
                 SET WSL-FATAL             TO TRUE
                 MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
                 MOVE WSH-CUR-PGM-TYP-CD     TO WSL-ADDL-KEY-1
                 PERFORM 90000-CLOSE
             END-IF

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
              MOVE 'ERROR IN SELECTING CS_PGM, RT_PGM '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              SET LNK-CA0001S-FAILURE  TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              MOVE WSH-CUR-PGM-TYP-CD  TO WSL-ADDL-KEY-1
              PERFORM 90000-CLOSE
        END-EVALUATE

        PERFORM 69211-UPDATE-AR-DATA
        .

      ****************************************************************  G
      *** Final AR all program assignment                               G
      ****************************************************************  G
       69210-FINAL-AR-ALL-PGM-ASGN.
        MOVE '69210-FINAL-AR-ALL-PGM-ASGN' TO WSL-PARA-NAME

      *Get all the Programs, effective begin/end date, update date time
      *for a Case
      *SQL-260

           EXEC SQL
            SELECT
             CS_ID
             ,PGM_TYP_CD
             ,TO_CHAR(EFF_BGN_DT, 'YYYY-MM-DD')
             ,TO_CHAR(NVL(EFF_END_DT,F_HIGH_DT()), 'YYYY-MM-DD')
             ,TO_CHAR(UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
             ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
             ,NVL(CSLD_ID, 0)
            ,PGM_STS_CD
            INTO
             :WST-CS-PGM-UPD-DATA
            FROM
             CS_PGM
            WHERE
             CS_ID = :WSH-CUR-CS-ID
            AND EFF_BGN_DT  <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT())       >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CS-ID(1) <> SPACES
                 MOVE ZEROES TO SQLCODE
             ELSE
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                       MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                 LNK-SQL-CODE
                                           LNK-AA0052C-CALWIN-ERROR-CD
                       MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 MOVE 'ERROR IN SELECTING CS_PGM '
                                TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                 SET LNK-CA0001S-FAILURE     TO TRUE
                 SET WSL-CS          TO TRUE
                 MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
                 SET WSL-FATAL          TO TRUE
                 PERFORM 90000-CLOSE
             END-IF

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                       LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR IN SELECTING CS_PGM '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE  TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER     
              PERFORM 90000-CLOSE
        END-EVALUATE

        PERFORM 69211-UPDATE-AR-DATA
        .

      ****************************************************************  G
      *** Update AR data                                                G
      ****************************************************************  G
       69211-UPDATE-AR-DATA.
        MOVE '69211-UPDATE-AR-DATA' TO WSL-PARA-NAME
      *    DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      *        Update the Case Program Data for the Case Clearance Process

        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-FIN-CNT FROM 1 BY 1
        UNTIL WSI-FIN-CNT = WSC-26
           OR WSS-PROCESS-COMPLETE
           IF WST-CS-ID(WSI-FIN-CNT) NOT =  WSH-CUR-CS-ID
          SET WSS-PROCESS-COMPLETE TO TRUE
           ELSE

             PERFORM 69995-CALL-CS-PGM-INIT

             MOVE WST-CS-ID(WSI-FIN-CNT)        TO
                      WSD-CS-ID OF WSD-CS-PGM
             MOVE WST-PGM-TYP-CD(WSI-FIN-CNT)        TO
                      WSD-PGM-TYP-CD OF WSD-CS-PGM
             MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)        TO
                      LNK-CA0001S-EFF-BGN-DT
             MOVE WST-UPD-DTM(WSI-FIN-CNT)        TO
                      LNK-CA0001S-UPD-DTM
             MOVE WST-FETCH-DTM(WSI-FIN-CNT)        TO
                      WSD-FETCH-DTM
             MOVE WSH-CURRENT-DT             TO
                      WSD-EFF-BGN-DT OF WSD-CS-PGM

            

             PERFORM 69252-CHK-SKP-ON-CSLD-OR-NOT

              PERFORM 69835-GET-DIFF-IN-DT

             IF WSH-DIFF-IN-DT-NUM = 0
             MOVE -1        TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
             ELSE
             MOVE ZEROES        TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
             MOVE LNK-CA0001S-EFF-BGN-DT
                       TO WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
             END-IF

             MOVE WST-EFF-END-DT(WSI-FIN-CNT)
                           TO WSD-EFF-END-DT   OF WSD-CS-PGM

             IF WST-EFF-END-DT(WSI-FIN-CNT) <> WSC-HIGH-DT
             MOVE ZEROES            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             ELSE
             MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             MOVE SPACES            TO WSD-EFF-END-DT   OF WSD-CS-PGM
             END-IF

             MOVE ZEROES TO  WSD-CSLD-ID-I            OF WSD-CS-PGM
                      WSD-EFF-BGN-DT-I            OF WSD-CS-PGM
                      WSD-PGM-TYP-CD-I            OF WSD-CS-PGM
                      WSD-CS-ID-I            OF WSD-CS-PGM

             PERFORM 70000-UPDATE-CSLD-INFO
           END-IF
        END-PERFORM

        IF WSS-CNTY-PROC-LABOR-MTCH AND WSS-ASSGN
            PERFORM 69220-UPDATE-CASE-WEIGHTS
        END-IF
        .

      ****************************************************************  G
      *** Driver paragraph to set up what gets passed to CA0003S to     G
      *** update case weighting.                                        G
      ****************************************************************  G

       69220-UPDATE-CASE-WEIGHTS.
        MOVE '69220-UPDATE-CASE-WEIGHTS' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
4188  * The CA0003S variables were not being initialized
4188        INITIALIZE WSH-CA0003S-VARIABLES

        MOVE WSH-CUR-CS-ID           TO LNK-CA0003S-CS-ID
        MOVE WSH-CUR-PGM-TYP-CD     TO LNK-CA0003S-PGM-TYP-CD
        MOVE WSS-PROCESS-TYPE-SW     TO LNK-CA0003S-PROCESS-SW
        MOVE LNK-AA0052C-CALWIN-CURRENT-DT
                         TO LNK-CA0003S-CURRENT-DT
        MOVE LNK-AA0052C-USR-ID     TO LNK-CA0003S-UPD-USR-ID
        MOVE WSH-BILNGL-CRDT-FCTR     TO LNK-CA0003S-BILNGL-CRDT-FCTR
        MOVE WSH-NON-ENG-CRDT-FCTR     TO LNK-CA0003S-NON-ENG-CRDT-FCTR

4188  * If the csld is null, just move spaces to mode code
4188        IF WSH-CUR-CSLD-ID = ZEROES
4188          MOVE SPACES TO WSH-TEMP-CSLD-MODE-CD
4188        ELSE        
4188          PERFORM 42027-CHK-CSLD-ID-MODE
4188        END-IF

        EVALUATE TRUE
          WHEN WSS-PROCESS-AR-ASSGN
            MOVE WSH-CUR-CSLD-ID          TO LNK-CA0003S-AFTR-CSLD-ID
            MOVE WSH-TEMP-CSLD-MODE-CD TO LNK-CA0003S-AFTR-MODE-CD

          WHEN WSS-PROCESS-CL-ASSGN
            MOVE WSH-CUR-CSLD-ID       TO LNK-CA0003S-BFR-CSLD-ID
            MOVE WSH-TEMP-CSLD-MODE-CD TO LNK-CA0003S-BFR-MODE-CD

          WHEN OTHER
            MOVE WSH-CUR-CSLD-ID       TO LNK-CA0003S-AFTR-CSLD-ID
            MOVE WSH-TEMP-CSLD-MODE-CD TO LNK-CA0003S-AFTR-MODE-CD
            MOVE WSH-ORIG-CSLD-ID      TO WSH-CUR-CSLD-ID
4188            IF WSH-CUR-CSLD-ID = SPACES
4188               MOVE SPACES TO WSH-TEMP-CSLD-MODE-CD
4188            ELSE
4188               PERFORM 42027-CHK-CSLD-ID-MODE
4188            END-IF
            MOVE WSH-CUR-CSLD-ID          TO LNK-CA0003S-BFR-CSLD-ID
            MOVE WSH-TEMP-CSLD-MODE-CD TO LNK-CA0003S-BFR-MODE-CD
            IF WSS-PROCESS-AU-ASSGN
               MOVE WSH-CUR-PGM-STS-CD TO LNK-CA0003S-PGM-STS-CD
            END-IF
        END-EVALUATE        

      * Call CA0003S to determine case weights for equitable assignment
              CALL WSC-CA0003S
                  USING LNK-COMMON-PARMS
                    ,WSH-CA0003S-VARIABLES
              END-CALL

              IF LNK-CA0003S-FAILURE
                  MOVE LNK-CA0003S-SQL-CODE       TO WSL-ERROR-VALUE
               MOVE LNK-CA0003S-ERROR-CODE     TO WSL-CALWIN-ERROR-CODE
                                   LNK-AA0052C-CALWIN-ERROR-CD
               MOVE SPACES             TO LNK-AA0052C-CALWIN-ERROR-TEXT         
                  MOVE LNK-CA0003S-ERROR-TEXT
                                 TO WSL-MISC-ERROR-TXT
                                   LNK-SQL-TEXT
            MOVE 'ERROR CALLING CA0003S' TO WSL-PARA-NAME 
                  SET LNK-CA0001S-FAILURE TO TRUE
            SET WSL-FATAL            TO TRUE
            MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
            MOVE LNK-CA0003S-PROCESS-SW TO WSL-ADDL-KEY-1
            MOVE LNK-CA0003S-BFR-CSLD-ID TO WSL-ADDL-KEY-2
            MOVE LNK-CA0003S-AFTR-CSLD-ID TO WSL-ADDL-KEY-3
                  PERFORM 90000-CLOSE
              END-IF 
           .

      ****************************************************************  G
      *** Final AU single assignment                                    G
      ****************************************************************  G
       69250-FINAL-AU-SNGL-ASGN.
        MOVE '69250-FINAL-AU-SNGL-ASGN' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        INITIALIZE WST-TABLES
      * Select Case Id, Program type code, begin date, end date,
      * caseload id, etc
           EXEC SQL
           SELECT
             A.CS_ID
            ,A.PGM_TYP_CD
            ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(A.UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
            ,NVL(CSLD_ID, 0)
            ,PGM_STS_CD
           INTO
             :WST-CS-PGM-UPD-DATA
           FROM
             CS_PGM A
            ,RT_PGM P
           WHERE
             A.CS_ID        = :WSH-CUR-CS-ID
            AND A.PGM_STS_CD        = :WSC-APPROVED
            AND A.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.PGM_TYP_CD        = P.PGM_CD
            AND P.CS_ASG_PGM        = :WSH-CUR-PGM-TYP-CD
            AND P.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CS-ID(1) <> SPACES
                 MOVE ZEROES TO SQLCODE
             ELSE
                 MOVE SQLCODE       TO WSL-ERROR-VALUE
                 MOVE WSC-513       TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                           LNK-AA0052C-CALWIN-ERROR-CD

                 INITIALIZE        WSL-MISC-ERROR-TXT
                            LNK-SQL-TEXT
                            LNK-AA0052C-CALWIN-ERROR-TEXT
                 STRING
                 'ERROR IN SELECTING CS_PGM, RT_PGM'
                  WSC-ASTERISK            DELIMITED BY SIZE
                  WSH-CUR-CS-ID
                  WSC-ASTERISK            DELIMITED BY SIZE
                  WSH-CUR-PGM-TYP-CD
                  WSC-ASTERISK            DELIMITED BY SIZE
                  WSC-APPROVED
                  WSC-ASTERISK            DELIMITED BY SIZE
                 INTO WSL-MISC-ERROR-TXT
                 END-STRING

                 MOVE WSL-MISC-ERROR-TXT     TO LNK-SQL-TEXT
                 SET WSL-CS          TO TRUE
                 MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
                 MOVE WSH-CUR-PGM-TYP-CD     TO WSL-ADDL-KEY-1
                 SET LNK-CA0001S-FAILURE     TO TRUE
                 SET WSL-FATAL          TO TRUE

                 PERFORM 90000-CLOSE
             END-IF

            WHEN OTHER
             MOVE SQLCODE           TO WSL-ERROR-VALUE
             MOVE WSC-513           TO WSL-CALWIN-ERROR-CODE
                            LNK-SQL-CODE
                       LNK-AA0052C-CALWIN-ERROR-CD

             INITIALIZE            WSL-MISC-ERROR-TXT
                           LNK-SQL-TEXT
                           LNK-AA0052C-CALWIN-ERROR-TEXT
             STRING
             'ERROR IN SELECTING CS_PGM, RT_PGM'
                 WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-CUR-CS-ID
                 WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-CUR-PGM-TYP-CD
                 WSC-ASTERISK        DELIMITED BY SIZE
                 WSC-APPROVED
                 WSC-ASTERISK        DELIMITED BY SIZE
             INTO WSL-MISC-ERROR-TXT
             END-STRING

             MOVE WSL-MISC-ERROR-TXT  TO LNK-SQL-TEXT
             SET WSL-CS              TO TRUE
             MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
             MOVE WSH-CUR-PGM-TYP-CD  TO WSL-ADDL-KEY-1
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL         TO TRUE

             PERFORM 90000-CLOSE
        END-EVALUATE

      *     DISPLAY 'WST-CS-ID ' WST-CS-ID(1)
      *     DISPLAY 'WST-PGM-TYP-CD ' WST-PGM-TYP-CD(1)
      *     DISPLAY 'WST-EFF-BGN-DT ' WST-EFF-BGN-DT(1)
      *     DISPLAY 'WST-EFF-END-DT ' WST-EFF-END-DT(1)
      *     DISPLAY 'WST-EFF-END-DT ' WST-EFF-END-DT(1)
      *     DISPLAY 'WST-UPD-DTM ' WST-UPD-DTM(1)
      *     DISPLAY 'WST-FETCH-DTM ' WST-FETCH-DTM(1)
      *     DISPLAY 'WST-CSLD-ID ' WST-CSLD-ID(1)
      *     DISPLAY 'WST-PGM-STS-CD ' WST-PGM-STS-CD(1)

      *** Commented out per Jaime B. on 2/18.  Should always upd AU.
      *   IF WSS-CNTY-PROC-LABOR-MTCH
            PERFORM 69251-UPDATE-AU-DATA
      *   END-IF
        .

      ****************************************************************  G
      *** Update Authorization data                                     G
      ****************************************************************  G
       69251-UPDATE-AU-DATA.
        MOVE '69251-UPDATE-AU-DATA' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
2349  *    If CHP+/AwDC transfer flag is set in 20000- para the skp 69252-
2349  *    and set final caseload to transfer caseload of the vendor
2349       IF WSS-NO-XFR-CSLD
      *        Check whether the Caseload exist for updating into the Case
      *        Program for the Authorisation Process
            PERFORM 69252-CHK-SKP-ON-CSLD-OR-NOT
2349       END-IF
      *
2349       IF WSS-XFR-CSLD
2349        MOVE WSH-MA-FINAL-CSLD TO WSH-FINAL-CSLD-ID
2349       END-IF

      *        Update the Case Program data with the Caseload Transfer
      *        reason code and Caseload Transfer Date.
        PERFORM 69253-1ST-UPD-AU-DATA

      *        Check User has credit to the same case
        IF WSS-CNTY-PROC-LABOR-MTCH
           MOVE WSD-PGM-STS-CD OF WSD-CS-PGM TO WSH-CUR-PGM-STS-CD
           PERFORM 69220-UPDATE-CASE-WEIGHTS
        END-IF
        .

      ****************************************************************  G
      *** Check skip on caseload or not                                 G
      ****************************************************************  G
       69252-CHK-SKP-ON-CSLD-OR-NOT.
        MOVE '69252-CHK-SKP-ON-CSLD-OR-NOT' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      *     DISPLAY WSL-PARA-NAME

      ** Determines the best caseload to assign the case to based on language
      ** and alpha breakdown parameters.

           SET WSS-NO-SKIP TO TRUE
           SET WSS-FIRST-LNG-MTCH TO TRUE
           SET WSS-ASSGN TO TRUE
           MOVE WSH-CUR-USR-ID TO WSH-HOLD-USR-ID
           INITIALIZE  WSI-I
                       WSH-CUR-USR-ID
                       WSS-CS-LNG-USR-LNG-SW
                       WSH-AUTO-ASGN-USR-ID
                       WSH-AUTO-ASGN-INDEX

5445A      IF WSH-CUR-PGM-TYP-CD NOT EQUAL WSC-PE-TYP-CD
5445B      OR WSS-PE-CSLD-NOT-FOUND

           PERFORM 60610-GET-CASE-LAST-NAME

           PERFORM VARYING WSI-I FROM 1 BY 1
          UNTIL WSS-SKIP OR WSH-CSLD-ID-MTCH(WSI-I) = ZEROES

          MOVE WSH-CSLD-ID-MTCH(WSI-I) TO WSH-TEMP-CSLD-ID

          IF WSH-LANG-MTCH(WSI-I) = WSC-NO
            IF WSH-CSLD-USR-ENG-MTCH(WSI-I) = WSC-YES
               SET WSS-EN-USR-LNG-DIF-CS-LNG TO TRUE
              IF WSS-FIRST-LNG-MTCH
                 MOVE WSH-USR-ID-MTCH(WSI-I) TO
                         WSH-AUTO-ASGN-USR-ID
                 MOVE WSI-I TO WSH-AUTO-ASGN-INDEX
                 SET WSS-NOT-FIRST-LNG-MTCH TO TRUE
              END-IF
                    IF WSS-ALBRKDN
               PERFORM 60600-VERIFY-ALPHA-ASSIGNMENT

                 IF WSS-ALPHA-MTCH
                    MOVE WSH-CSLD-ID-MTCH(WSI-I) TO
                               WSD-CSLD-ID OF WSD-CS-PGM
                      WSH-FINAL-CSLD-ID
                        MOVE WSH-USR-ID-MTCH(WSI-I) TO
                      WSH-CUR-USR-ID
                       SET WSS-SKIP TO TRUE
                 MOVE SPACES TO WSH-AUTO-ASGN-USR-ID
                 END-IF
              ELSE
                 MOVE WSH-CSLD-ID-MTCH(WSI-I) TO
                          WSD-CSLD-ID OF WSD-CS-PGM
                    WSH-FINAL-CSLD-ID
                 MOVE WSH-USR-ID-MTCH(WSI-I) TO 
                 WSH-CUR-USR-ID
                 SET WSS-SKIP TO TRUE
              END-IF
                  END-IF
                ELSE
              SET WSS-SAME-CS-LNG-USR-LNG TO TRUE

              IF WSS-ALBRKDN
                       PERFORM 60600-VERIFY-ALPHA-ASSIGNMENT
     
                 IF WSS-ALPHA-MTCH
                    MOVE WSH-CSLD-ID-MTCH(WSI-I) TO
                    WSD-CSLD-ID OF WSD-CS-PGM
                    WSH-FINAL-CSLD-ID
                       MOVE WSH-USR-ID-MTCH(WSI-I) TO 
                    WSH-CUR-USR-ID
                    SET WSS-SKIP TO TRUE
                 MOVE SPACES TO WSH-AUTO-ASGN-USR-ID
                 END-IF
              ELSE
                       MOVE WSH-CSLD-ID-MTCH(WSI-I) TO 
                          WSD-CSLD-ID OF WSD-CS-PGM
                 WSH-FINAL-CSLD-ID
                MOVE WSH-USR-ID-MTCH(WSI-I) TO 
                 WSH-CUR-USR-ID
                SET WSS-SKIP TO TRUE
             END-IF
                END-IF
              END-PERFORM
5445A      ELSE
5445A         MOVE SPACES TO WSH-AUTO-ASGN-USR-ID
5445A         MOVE WSH-CSLD-ID-MTCH(1) TO
5445A              WSD-CSLD-ID OF WSD-CS-PGM
5445A              WSH-FINAL-CSLD-ID
5445A         MOVE WSH-USR-ID-MTCH(1) TO
5445A              WSH-CUR-USR-ID
5445A      END-IF

     
      ** If there was a match on language, but not on alpha,
      *  assign to that user
      ** If there was no match on language or alpha, 
      * assign to supervisor

       IF WSH-CUR-USR-ID = SPACES
         IF WSH-AUTO-ASGN-USR-ID <> SPACES
           MOVE WSH-CSLD-ID-MTCH(WSH-AUTO-ASGN-INDEX) TO
          WSD-CSLD-ID OF WSD-CS-PGM
          WSH-FINAL-CSLD-ID
           MOVE WSH-USR-ID-MTCH(WSH-AUTO-ASGN-INDEX) TO 
          WSH-CUR-USR-ID
           IF WSH-LANG-MTCH(WSH-AUTO-ASGN-INDEX) = WSC-NO
          IF WSH-CSLD-USR-ENG-MTCH(WSH-AUTO-ASGN-INDEX) = WSC-YES
            SET WSS-EN-USR-LNG-DIF-CS-LNG TO TRUE
          END-IF
           ELSE
          SET WSS-SAME-CS-LNG-USR-LNG TO TRUE
           END-IF
      * If it is a MASITE HLPG and it is the first time through
      * do not assign it to the county office even if there is
      * a caseload that can take it - AR process only
           IF  WSS-MASITE-HLPG
           AND NOT WSS-AR-COULD-NOT-ASSGN
           AND WSS-PROCESS-AR-ASSGN
      * If it is a MASITE HLPG and it is the first time through
      * and the app is from a MASITE office assign it 
            IF WSS-MASITE-OFFICE
               EXIT PARAGRAPH
            ELSE
               CONTINUE
            END-IF
           ELSE
               EXIT PARAGRAPH
           END-IF
         END-IF
       ELSE
      * If it is a MASITE HLPG and it is the first time through
      * do not assign it to the county office even if there is
      * a caseload that can take it - AR process only
         IF  WSS-MASITE-HLPG
         AND NOT WSS-AR-COULD-NOT-ASSGN
         AND WSS-PROCESS-AR-ASSGN
      * If it is a MASITE HLPG and it is the first time through
      * and the app is from a MASITE office assign it 
          IF WSS-MASITE-OFFICE
             EXIT PARAGRAPH
          ELSE
             CONTINUE
          END-IF
         ELSE
             EXIT PARAGRAPH
         END-IF
       END-IF
 

      * If there wasn't a match on language, or language and
      * alpha within the office.

      * If it's an MASite office, try to assign it to the applicant's
      * office of residence.  If there's more than one, set flag and
      * exit to let PB know to pop-up the window for them to select the
      * office of residence.

       IF  WSS-PROCESS-AR-ASSGN
       AND WSS-MASITE-OFFICE
         EVALUATE WSS-AR-STATUS-SW
           WHEN WSC-C
          PERFORM 69275-GET-SUPERVISOR-DATA
          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
               MOVE WSD-SUPV-USR-ID OF WSD-SE-USR-UNT-OFF
                 TO     WSH-CUR-USR-ID
               MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
                 WSD-CSLD-ID OF WSD-CS-PGM
                 WSH-FINAL-CSLD-ID
            WHEN WSC-NOT-FOUND
4676               IF WSS-MT-TYPES-ASGN
4676                  PERFORM 69283-GET-MT-XFR-CSLD
4676               ELSE
4676                  PERFORM 69280-GET-XFR-CSLD
4676               END-IF
                 END-EVALUATE 

           WHEN WSC-N   
                IF WSS-ONE-OFFICE
            MOVE WST-CS-PGM-UPD-DATA(WSI-FIN-CNT) TO
               WST-NONMA-UPDATE-DATA(WSI-NONMA-IDX)
            MOVE WSH-CUR-PGM-TYP-CD TO
               WST-NONMA-PGM-TYP-CD(WSI-NONMA-IDX)
5380            IF  WSS-MASITE-HLPG
5380              MOVE WSH-CUR-OFF-ID TO
5380               WST-NONMA-OFF-ID(WSI-NONMA-IDX)
5380            ELSE
              MOVE WSH-SAVE-APP-OFF TO
               WST-NONMA-OFF-ID(WSI-NONMA-IDX)
5380            END-IF
            MOVE WSH-HLPG-NM TO
               WST-NONMA-HLPG-NM(WSI-NONMA-IDX)
            SET WSS-SKIP-ASSGN TO TRUE
            ADD 1 TO WSI-NONMA-IDX  
            ADD 1 TO WSA-NONMA-CNT
               MOVE WSH-HOLD-USR-ID TO WSH-CUR-USR-ID
          ELSE
2349  *commented out the above unhandled condition.
2349  *if logic comes to this place then assign case load to transfer
2349  *caseload of the ma site office after checking for supervisor's
2349  *case load. Do it only for FM and CH . For other programs
2349              MOVE SPACES TO WSL-MISC-ERROR-TXT
2349              STRING
2349                'No caseload found for non masite pgm at masite '
2349                        DELIMITED BY SIZE
2349                 WSH-CUR-PGM-TYP-CD DELIMITED BY SIZE
2349                 ' program in office '
2349                 WSH-OFF-NM DELIMITED BY WSC-2-SPACES
2349              INTO WSL-MISC-ERROR-TXT
2349              END-STRING
2349              MOVE SPACES TO LNK-SQL-TEXT
2349              MOVE ZEROES              TO WSL-ERROR-VALUE
2349                                          LNK-SQL-CODE
2349              MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
2349              MOVE WSH-CUR-OFF-ID      TO WSL-ADDL-KEY-1
2349              MOVE LNK-AA0052C-USR-ID
2349                                       TO WSL-ADDL-KEY-2
2349              MOVE WSH-CUR-PGM-TYP-CD
2349                                       TO WSL-ADDL-KEY-3
2349              SET WSL-CS               TO TRUE
2349              SET WSL-INFORMATIONAL    TO TRUE
2349              MOVE SPACES TO WSL-CALWIN-ERROR-CODE
2349              MOVE ZEROES TO
2349                            LNK-AA0052C-CALWIN-ERROR-CD
2349                            LNK-AA0052C-CALWIN-ERROR-TEXT
2349                            WSL-ERROR-VALUE
2349                            LNK-SQL-CODE
2349              PERFORM 91000-ERROR
2349              MOVE SPACES TO WSL-MISC-ERROR-TXT
2349                             WSL-IDENTIFIER
3212  * Get applicant's county
3212              IF WSD-CNTY-CD OF WSD-INDV-ADR = SPACES
3212  * If applicant's address does not have a record with county in it
3212  * assign the program to the transfer caseload of MA Site office
3212                PERFORM 10116-GET-LOGGEDIN-USR-CNTY
3212                PERFORM 10159-GET-XFER-CSLD-MASITE
3212              ELSE
3212                MOVE WSD-CNTY-CD OF WSD-INDV-ADR   TO
3212                     WSH-CNTY-CD
3212                PERFORM 10158-GET-XFER-CSLD-CNTY
3212              END-IF
3212
3212              MOVE WSH-CUR-XFER-CSLD             TO
3212                                        WSD-CSLD-ID OF WSD-CS-PGM
3212                                        WSH-FINAL-CSLD-ID
2349  *           SET LNK-CA0001S-NEED-OFF-ID TO TRUE
2349  *           PERFORM 90000-CLOSE
             END-IF
           WHEN OTHER
               MOVE 'Invalid Status Switch'
                TO LNK-SQL-TEXT
                WSL-MISC-ERROR-TXT
             MOVE ZEROES     TO WSL-CALWIN-ERROR-CODE
                       LNK-AA0052C-CALWIN-ERROR-CD
             MOVE ZEROES     TO WSL-ERROR-VALUE
                  LNK-SQL-CODE
             MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
             SET LNK-CA0001S-FAILURE  TO TRUE
             SET WSL-FATAL            TO TRUE
             PERFORM 90000-CLOSE
              END-EVALUATE
       ELSE
      * If it's a MASITE HLPG assign to MASITE office only.
      * If more than one MASITE office or county, set flag to pop-
      * up the window in PB for them to select office or county/
      * office.  If it cannot be assigned to the MASITE office,
      * display an error to the user.  
           IF  WSS-PROCESS-AR-ASSGN
           AND WSS-MASITE-HLPG
            EVALUATE WSS-AR-STATUS-SW
               WHEN WSC-C
4676                 IF WSS-MT-TYPES-ASGN
4676                    PERFORM 69283-GET-MT-XFR-CSLD
4676                 ELSE
4676                    PERFORM  69280-GET-XFR-CSLD
4676                 END-IF

               WHEN WSC-N
               PERFORM 10250-GET-MASITE-CNTY
               IF WSS-ONE-MASITE-OFF
                  MOVE WST-CS-PGM-UPD-DATA(WSI-FIN-CNT) TO
                    WST-NONMA-UPDATE-DATA(WSI-NONMA-IDX)
                  MOVE WSH-CUR-PGM-TYP-CD TO
                                WST-NONMA-PGM-TYP-CD(WSI-NONMA-IDX)
                  MOVE WSH-MASITE-OFF TO
                    WST-NONMA-OFF-ID(WSI-NONMA-IDX)
                  MOVE WSH-HLPG-NM TO
                    WST-NONMA-HLPG-NM(WSI-NONMA-IDX)
                  SET  WSS-SKIP-ASSGN TO TRUE
                  ADD  1 TO WSI-NONMA-IDX
                  ADD  1 TO WSA-NONMA-CNT
                        MOVE WSH-HOLD-USR-ID TO WSH-CUR-USR-ID
               ELSE
2349                       MOVE SPACES TO WSL-MISC-ERROR-TXT
2349                       STRING
2349                        'No caseload found for '
2349                        DELIMITED BY SIZE
2349                        WSH-CUR-PGM-TYP-CD DELIMITED BY SIZE
2349                        ' program in office '
2349                        WSH-OFF-NM DELIMITED BY WSC-2-SPACES
2349                       INTO WSL-MISC-ERROR-TXT
2349                       END-STRING
2349                       MOVE SPACES TO LNK-SQL-TEXT
2349                       MOVE ZEROES              TO WSL-ERROR-VALUE
2349                                                   LNK-SQL-CODE
2349                       MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
2349                       MOVE WSH-CUR-OFF-ID      TO WSL-ADDL-KEY-1
2349                       MOVE LNK-AA0052C-USR-ID
2349                                                TO WSL-ADDL-KEY-2
2349                       MOVE WSH-CUR-PGM-TYP-CD
2349                                                TO WSL-ADDL-KEY-3
2349                       SET WSL-CS               TO TRUE
2349                       SET WSL-INFORMATIONAL    TO TRUE
2349                       MOVE SPACES TO WSL-CALWIN-ERROR-CODE
2349                       MOVE ZEROES TO
2349                                      LNK-AA0052C-CALWIN-ERROR-CD
2349                                      LNK-AA0052C-CALWIN-ERROR-TEXT
2349                                      WSL-ERROR-VALUE
2349                                      LNK-SQL-CODE
2349                       PERFORM 91000-ERROR
2349                       MOVE SPACES TO WSL-MISC-ERROR-TXT
2349                                    WSL-IDENTIFIER
                           SET LNK-CA0001S-NEED-MASITE-OFF TO TRUE
                           PERFORM 90000-CLOSE
               END-IF
             END-EVALUATE
              ELSE
                PERFORM 69275-GET-SUPERVISOR-DATA
                EVALUATE SQLCODE
                WHEN WSC-SQL-OK
                      MOVE WSD-SUPV-USR-ID OF WSD-SE-USR-UNT-OFF
                      TO     WSH-CUR-USR-ID
                   MOVE WSD-CSLD-ID OF WSD-SE-CSLD-PRM-USR TO
                      WSD-CSLD-ID OF WSD-CS-PGM
                      WSH-FINAL-CSLD-ID
                WHEN WSC-NOT-FOUND
4676                   IF WSS-MT-TYPES-ASGN
4676                      PERFORM 69283-GET-MT-XFR-CSLD
4676                   ELSE
4676                      PERFORM  69280-GET-XFR-CSLD
4676                   END-IF
                   END-EVALUATE
           END-IF
       END-IF
          .               
      ****************************************************************  G
      *** First update authorization data                               G
      ****************************************************************  G
       69253-1ST-UPD-AU-DATA.
        MOVE '69253-1ST-UPD-AU-DATA' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        INITIALIZE WSI-FIN-CNT
        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-FIN-CNT FROM 1 BY 1
        UNTIL WSI-FIN-CNT = WSC-26
           OR WSS-PROCESS-COMPLETE

           IF WST-CS-ID(WSI-FIN-CNT) NOT =  WSH-CUR-CS-ID
          SET WSS-PROCESS-COMPLETE TO TRUE
           ELSE

             SET WSS-1ST-UPDATE-CS-PGM TO TRUE

             PERFORM 69995-CALL-CS-PGM-INIT
                PERFORM 69840-GET-XFR-DTM
             MOVE WST-CS-ID(WSI-FIN-CNT)        TO
                      WSD-CS-ID OF WSD-CS-PGM
                      WSH-CUR-CS-ID
             MOVE WST-PGM-TYP-CD(WSI-FIN-CNT)        TO
                      WSD-PGM-TYP-CD OF WSD-CS-PGM
                      WSH-CUR-PGM-TYP-CD
             MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)        TO
                       WSD-EFF-BGN-DT  OF WSD-CS-PGM
             MOVE WST-UPD-DTM(WSI-FIN-CNT)        TO
                       LNK-CA0001S-UPD-DTM
             MOVE WST-FETCH-DTM(WSI-FIN-CNT)        TO
                      WSD-FETCH-DTM
             MOVE WSH-CURRENT-DTM    TO WSD-CSLD-XFR-DT OF WSD-CS-PGM
                MOVE WSC-AU                         TO
                      WSD-CSLD-XFR-RSN-CD OF WSD-CS-PGM

             MOVE WST-EFF-END-DT(WSI-FIN-CNT)
                           TO WSD-EFF-END-DT   OF WSD-CS-PGM

             IF WST-EFF-END-DT(WSI-FIN-CNT) <> WSC-HIGH-DT
             MOVE ZEROES            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             ELSE
             MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             MOVE SPACES            TO WSD-EFF-END-DT   OF WSD-CS-PGM
             END-IF

              MOVE ZEROES TO  WSD-EFF-BGN-DT-I       OF WSD-CS-PGM
                      WSD-PGM-TYP-CD-I            OF WSD-CS-PGM
                      WSD-CS-ID-I            OF WSD-CS-PGM
                      WSD-CSLD-XFR-DT-I       OF WSD-CS-PGM
                      WSD-CSLD-XFR-RSN-CD-I   OF WSD-CS-PGM
             MOVE -1        TO  WSD-OLD-EFF-BGN-DT-I    OF WSD-CS-PGM

             PERFORM 70000-UPDATE-CSLD-INFO

             MOVE WSD-UPD-DTM OF WSD-CS-PGM TO
              WST-UPD-DTM(WSI-FIN-CNT)

             PERFORM 69254-2ND-UPD-AU-DATA

           END-IF

        END-PERFORM
        .

      ****************************************************************  G
      *** Second update authorization data                              G
      ****************************************************************  G
       69254-2ND-UPD-AU-DATA.
        MOVE '69254-2ND-UPD-AU-DATA' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
        SET WSS-2ND-UPDATE-CS-PGM TO TRUE

        PERFORM 69830-GET-FETCH-DTM

        PERFORM 69995-CALL-CS-PGM-INIT

        MOVE WST-CS-ID(WSI-FIN-CNT)             TO
                 WSD-CS-ID OF WSD-CS-PGM
        MOVE WST-PGM-TYP-CD(WSI-FIN-CNT)        TO
                 WSD-PGM-TYP-CD OF WSD-CS-PGM
                    WSH-CUR-PGM-TYP-CD
        MOVE WSH-FINAL-CSLD-ID                  TO
                 WSD-CSLD-ID OF WSD-CS-PGM
                 WSH-CUR-CSLD-ID
        MOVE WSH-CURRENT-DT             TO
                 WSD-EFF-BGN-DT  OF WSD-CS-PGM
        MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)        TO
                 LNK-CA0001S-EFF-BGN-DT
        MOVE WST-UPD-DTM(WSI-FIN-CNT)           TO
                 LNK-CA0001S-UPD-DTM

        PERFORM 69835-GET-DIFF-IN-DT

           IF WSH-DIFF-IN-DT-NUM = ZEROES
           MOVE -1        TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
        ELSE
           MOVE ZEROES        TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
           MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)
                             TO WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
        END-IF

        MOVE WST-EFF-END-DT(WSI-FIN-CNT)
             TO WSD-EFF-END-DT   OF WSD-CS-PGM

        IF WST-EFF-END-DT(WSI-FIN-CNT) <> WSC-HIGH-DT
           MOVE ZEROES            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
        ELSE
           MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
           MOVE SPACES            TO WSD-EFF-END-DT   OF WSD-CS-PGM
        END-IF

        MOVE ZEROES TO  WSD-EFF-BGN-DT-I        OF WSD-CS-PGM
                     WSD-PGM-TYP-CD-I        OF WSD-CS-PGM
                     WSD-CS-ID-I                OF WSD-CS-PGM
                     WSD-CSLD-ID-I        OF WSD-CS-PGM

        MOVE -1     TO  WSD-CSLD-XFR-DT-I       OF WSD-CS-PGM
                         WSD-CSLD-XFR-RSN-CD-I   OF WSD-CS-PGM

      * This section will get the current caseload and caseload
      * worker which is needed to determine if we are to generate
      * some of the notices and interface trigger.  Since there
      * are potentially multiple pgm typ cds being reassigned, we
      * need to do this in each iteration of the loop.

        PERFORM 10305-GET-CUR-CSLD-ID
        PERFORM 10310-CHK-CSLD-EXIST
        MOVE WSH-CUR-CSLD-ID TO WSH-ORIG-CSLD-ID
        MOVE WSH-CSLD-WRKR TO WSH-ORIG-CSLD-WRKR
        MOVE WSH-FINAL-CSLD-ID TO WSH-CUR-CSLD-ID

        MOVE ZEROES TO  WSD-EFF-BGN-DT-I        OF WSD-CS-PGM

        PERFORM 70000-UPDATE-CSLD-INFO
        .

      ****************************************************************  G
      *** If initial assignment, use the case worker's usr id and cnty  G
      *** code and get their supervisor's first caseload in the same    G
      *** county.  If Mass Transfer or Authorization, use the usr id    G
      *** of who it is currently assigned to and their county code to   G
      *** get their supervisor's first caseload to avoid inadvertant    G
      *** inter-county transfers (DACR 5380).                           G
      ****************************************************************  G

       69275-GET-SUPERVISOR-DATA.

           MOVE '69275-GET-SUPERVISOR-DATA' TO WSL-PARA-NAME   
      *     DISPLAY WSL-PARA-NAME
      *     PERFORM 89999-DISPLAY-PARA
5380  * Move the correct information to hold variables to get the super.
5380  * caseload within the correct county

5380       IF WSS-AR-PROCESS-SINGLE-CS-PGM
5380          MOVE LNK-AA0052C-USR-ID       TO WSH-GET-SUPER-USR-ID
5380          MOVE LNK-AA0052C-COUNTY-CODE      TO WSH-GET-SUPER-CNTY-CD
5380        ELSE
5380          IF WSH-CSLD-CNTY-CD = SPACES
5380               PERFORM 30360-GET-CUR-OFF-ID
5380           END-IF
5380             IF WSH-CSLD-WRKR = SPACES
5380               PERFORM 10310-CHK-CSLD-EXIST
5380          END-IF
5380          MOVE WSH-CSLD-WRKR               TO WSH-GET-SUPER-USR-ID
5380          MOVE WSH-CSLD-CNTY-CD         TO WSH-GET-SUPER-CNTY-CD
5380        END-IF

           EXEC SQL
           SELECT
              A.SUPV_USR_ID
             ,B.CSLD_ID
           INTO
             :WSD-SE-USR-UNT-OFF.WSD-SUPV-USR-ID
                  ,:WSD-SE-CSLD-PRM-USR.WSD-CSLD-ID
           FROM
             SE_USR_UNT_OFF A
             ,SE_CSLD_PRM_USR B
             ,SE_CSLD C
             ,SE_OFF D
           WHERE
                A.USR_ID = RTRIM(:WSH-GET-SUPER-USR-ID)
            AND A.SUPV_USR_ID = B.USR_ID
            AND B.EFF_BGN_DT <=
             TO_DATE(:LNK-AA0052C-CALWIN-CURRENT-DT, 'YYYY-MM-DD')
            AND B.EFF_END_DT IS NULL
            AND B.CSLD_ID = C.CSLD_ID
            AND C.OFF_ID = D.OFF_ID
            AND D.CNTY_CD = :WSH-GET-SUPER-CNTY-CD
            AND ROWNUM = 1
           END-EXEC

      * Evaluate of SQL code moved to where the call happens to more
      * accurately depict error message.
        .


4676  ****************************************************************  
4676  *** If the HLPG couldn't be assigned to the office or the 
4676  *** supervisor of the user performing the assignment, try to 
4676  *** assign it to the Transfer caseload of the office first, and
4676  *** they don't have one, assign it randomly to any office in the
4676  *** same county.  This for all paths except mass transfer.     
4676  ****************************************************************  
4676
4676    69280-GET-XFR-CSLD.
4676
4676        MOVE '69280-GET-XFR-CSLD' TO WSL-PARA-NAME   
4676  *     DISPLAY WSL-PARA-NAME
4676  *        DISPLAY 'OFF ID = ' WSH-CUR-OFF-ID
4676  *    PERFORM 89999-DISPLAY-PARA
4676        SET WSS-XF-CSLD-NOT-FOUND TO TRUE
4676        IF  WSH-CUR-OFF-ID = ZEROES
4676  ******************************************************
4676  * Get the office where the HLPG is currently assigned.
4676  ******************************************************
4676           PERFORM 30360-GET-CUR-OFF-ID
4676        END-IF
4676
4676  ****************************************************************
4676  *** Get the transfer caseload in the current office to assign
4676  *** the HLPG to.  If none, write out an informational message
4676  *** that there was no transfer caseload for the current office.
4676  ****************************************************************
4676
           EXEC SQL
           SELECT 
              A.CSLD_ID
             ,B.USR_ID
           INTO
              :WSH-XFR-CSLD-ID
             ,:WSH-XFR-USR-ID
           FROM
              SE_CSLD A
             ,SE_CSLD_PRM_USR B
             ,SE_CSLD_PRM_USR_K C
             ,RT_OFF D
             ,SE_USR_UNT_OFF E
           WHERE
               A.OFF_ID = :WSH-CUR-OFF-ID
            AND A.OFF_ID = D.OFF_ID
            AND A.CSLD_MODE_CD = :WSC-XFR-CSLD-MODE
            AND A.CSLD_ID = B.CSLD_ID
            AND B.CSLD_ID = C.CSLD_ID
            AND B.EFF_BGN_DT = C.LTST_EFF_BGN_DT
            AND B.USR_ID = E.USR_ID
            AND E.OFF_ID = A.OFF_ID
           END-EXEC
4676
4676         EVALUATE SQLCODE
4676          WHEN WSC-SQL-OK
4676               SET WSS-XF-CSLD-FOUND TO TRUE
4676               DISPLAY 'ASSGND TO XFR CSLD IN OFF'
4676                 DISPLAY 'CSLD ID: ' WSH-XFR-CSLD-ID
4676               DISPLAY 'USR ID: ' WSH-XFR-USR-ID
4676               MOVE WSH-XFR-CSLD-ID TO
4676                    WSD-CSLD-ID OF WSD-CS-PGM
4676                     WSH-CUR-CSLD-ID
4676                       WSH-FINAL-CSLD-ID
4676               MOVE WSH-XFR-USR-ID TO
4676                    WSH-CUR-USR-ID
4676
4676          WHEN WSC-NOT-FOUND
4676               MOVE WSH-CUR-OFF-ID TO
4676                    WSH-OFF-ID-TO-GET-NM
4676               PERFORM 10315-GET-OFFICE-NM
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               STRING
4676               'No transfer caseload found ' 
4676                    DELIMITED BY SIZE
4676                  'in office '
4676                  WSH-OFF-NM DELIMITED BY WSC-2-SPACES
4676               INTO WSL-MISC-ERROR-TXT
4676               END-STRING
4676               MOVE SPACES TO LNK-SQL-TEXT
4676               MOVE 513     TO WSL-CALWIN-ERROR-CODE
4676                    LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE ZEROES     TO WSL-ERROR-VALUE
4676                    LNK-SQL-CODE
4676               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
4676               MOVE LNK-AA0052C-USR-ID
4676                 TO WSL-ADDL-KEY-2
4676               MOVE WSH-CUR-PGM-TYP-CD 
4676                 TO WSL-ADDL-KEY-3
4676               SET WSL-CS            TO TRUE
4676               SET WSL-INFORMATIONAL    TO TRUE
4676               PERFORM 91000-ERROR
4676
4676          WHEN OTHER
4676               MOVE SQLCODE     TO LNK-SQL-CODE
4676                WSL-ERROR-VALUE
4676               MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                   LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               MOVE 'ERROR SELECTING XFR CSLD FOR OFFICE'
4676                TO WSL-MISC-ERROR-TXT
4676                   LNK-SQL-TEXT
4676               SET LNK-CA0001S-FAILURE TO TRUE
4676               SET WSL-FATAL            TO TRUE
4676               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676               PERFORM 90000-CLOSE
4676        END-EVALUATE
4676
4676  ****************************************************************
4676  *** If there was no xfr caseload found in the office, then
4676  *** select any transfer caseload in the current county
4676  *** to assign to the HLPG.  If none are found, write out an 
4676  *** informational message stating that there were no transfer
4676  *** transfer caseloads in the current county.
4676  ****************************************************************
4676
4676         IF WSS-XF-CSLD-NOT-FOUND
4676           PERFORM 69285-GET-CUR-CNTY
4676           
           EXEC SQL
           SELECT
               DISTINCT(A.CSLD_ID)
              ,D.USR_ID
           INTO
              :WSH-XFR-CSLD-ID
             ,:WSH-XFR-USR-ID
           FROM SE_CSLD A
              ,SE_OFF B
              ,RT_CNTY C
              ,SE_CSLD_PRM_USR D
              ,SE_CSLD_PRM_USR_K E
              ,SE_USR_UNT_OFF F     
           WHERE
              C.CNTY_CD = :WSH-XFR-CNTY-CD
           AND C.CNTY_CD = B.CNTY_CD
           AND B.OFF_ID  = A.OFF_ID
           AND A.CSLD_MODE_CD = :WSC-XFR-CSLD-MODE
           AND A.CSLD_ID = D.CSLD_ID
           AND D.EFF_BGN_DT = E.LTST_EFF_BGN_DT
           AND D.USR_ID = F.USR_ID
           AND F.OFF_ID = A.OFF_ID
           AND ROWNUM = 1
           END-EXEC
4676
4676            EVALUATE SQLCODE
4676          WHEN WSC-SQL-OK
4676               SET WSS-XF-CSLD-FOUND TO TRUE
4676               DISPLAY 'ASSGND TO XFR CSLD IN CNTY'
4676                 DISPLAY 'CSLD ID: ' WSH-XFR-CSLD-ID
4676               DISPLAY 'USR ID: ' WSH-XFR-USR-ID
4676               MOVE WSH-XFR-CSLD-ID TO
4676                    WSD-CSLD-ID OF WSD-CS-PGM
4676                     WSH-CUR-CSLD-ID
4676                       WSH-FINAL-CSLD-ID
4676               MOVE WSH-XFR-USR-ID TO
4676                    WSH-CUR-USR-ID
4676
4676          WHEN WSC-NOT-FOUND
4676               MOVE WSH-XFR-CNTY-CD TO
4676                    WSH-CNTY-CD-TO-GET-NM 
4676               PERFORM 10318-GET-COUNTY-NM
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               STRING
4676               'No transfer caseload found ' 
4676                    DELIMITED BY SIZE
4676                  'in county '
4676                  WSH-CNTY-NM DELIMITED BY WSC-2-SPACES
4676               '.  Please contact your security '
4676               'administrator.'
4676               INTO WSL-MISC-ERROR-TXT
4676               END-STRING
4676               MOVE SPACES TO LNK-SQL-TEXT
4676               MOVE 513     TO WSL-CALWIN-ERROR-CODE
4676                    LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE ZEROES     TO WSL-ERROR-VALUE
4676                    LNK-SQL-CODE
4676               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
4676               MOVE LNK-AA0052C-USR-ID
4676                 TO WSL-ADDL-KEY-2
4676               MOVE WSH-CUR-PGM-TYP-CD 
4676                 TO WSL-ADDL-KEY-3
4676               SET WSL-CS            TO TRUE
4676               SET WSL-INFORMATIONAL    TO TRUE
4676               PERFORM 91000-ERROR
4676
4676          WHEN OTHER
4676               MOVE SQLCODE     TO LNK-SQL-CODE
4676                WSL-ERROR-VALUE
4676               MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                   LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               MOVE 'ERROR SELECTING XFR CSLD FOR COUNTY'
4676                TO WSL-MISC-ERROR-TXT
4676                   LNK-SQL-TEXT
4676               SET LNK-CA0001S-FAILURE TO TRUE
4676               SET WSL-FATAL            TO TRUE
4676               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676               PERFORM 90000-CLOSE
4676           END-EVALUATE
4676        END-IF
4676
4676  ****************************************************************
4676  *** If there was still no xfr caseload found in the county, then
4676  *** select any transfer caseload regardless of county or office
4676  *** to assign to the HLPG.  
4676  ****************************************************************
4676
4676       IF WSS-XF-CSLD-NOT-FOUND
           EXEC SQL
           SELECT 
              A.CSLD_ID
             ,B.USR_ID
           INTO
              :WSH-XFR-CSLD-ID
             ,:WSH-XFR-USR-ID
           FROM
              SE_CSLD A
             ,SE_CSLD_PRM_USR B
             ,SE_CSLD_PRM_USR_K C
           WHERE
              A.CSLD_MODE_CD = :WSC-XFR-CSLD-MODE
            AND A.CSLD_ID = B.CSLD_ID
            AND B.CSLD_ID = C.CSLD_ID
            AND B.EFF_BGN_DT = C.LTST_EFF_BGN_DT
            AND ROWNUM = 1
           END-EXEC
4676
4676            EVALUATE SQLCODE
4676          WHEN WSC-SQL-OK
4676               SET WSS-XF-CSLD-FOUND TO TRUE
4676               DISPLAY 'ASSGND TO XFR CSLD ANYWHERE'
4676                 DISPLAY 'CSLD ID: ' WSH-XFR-CSLD-ID
4676               DISPLAY 'USR ID: ' WSH-XFR-USR-ID
4676               MOVE WSH-XFR-CSLD-ID TO
4676                    WSD-CSLD-ID OF WSD-CS-PGM
4676                     WSH-CUR-CSLD-ID
4676                       WSH-FINAL-CSLD-ID
4676               MOVE WSH-XFR-USR-ID TO
4676                    WSH-CUR-USR-ID
4676
4676          WHEN OTHER
4676               MOVE SQLCODE     TO LNK-SQL-CODE
4676                WSL-ERROR-VALUE
4676               MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                   LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               MOVE 'ERROR SELECTING XFR CSLD FOR COUNTY'
4676                TO WSL-MISC-ERROR-TXT
4676                   LNK-SQL-TEXT
4676               SET LNK-CA0001S-FAILURE TO TRUE
4676               SET WSL-FATAL            TO TRUE
4676               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676               PERFORM 90000-CLOSE
4676           END-EVALUATE
4676        END-IF
4676        .

4676  ****************************************************************  
4676  *** If the HLPG couldn't be assigned to the office or the 
4676  *** supervisor of the user performing the assignment, try to 
4676  *** assign it to the Transfer caseload of the office first, and
4676  *** they don't have one, assign it randomly to any office in the
4676  *** same county.  This is for the mass transfer path only as it 
4676  *** will ensure that the transfer caseload selected isn't 
4676  *** assigned to the transfer from user.  
4676  ****************************************************************  
4676
4676    69283-GET-MT-XFR-CSLD.
4676
4676        MOVE '69283-GET-MT-XFR-CSLD' TO WSL-PARA-NAME   
4676  *     DISPLAY WSL-PARA-NAME
4676  *        DISPLAY 'OFF ID = ' WSH-CUR-OFF-ID
4676
4676        SET WSS-XF-CSLD-NOT-FOUND TO TRUE
4676        IF WSH-CUR-OFF-ID = ZEROES
4676  ******************************************************
4676  * Get the office where the HLPG is currently assigned.
4676  ******************************************************
4676           PERFORM 30360-GET-CUR-OFF-ID
4676        END-IF
4676
4676  ****************************************************************
4676  *** Get the transfer caseload in the current office to assign
4676  *** the HLPG to.  If none, write out an informational message
4676  *** that there was no transfer caseload for the current office.
4676  ****************************************************************
4676
           EXEC SQL
           SELECT 
              A.CSLD_ID
             ,B.USR_ID
          INTO
              :WSH-XFR-CSLD-ID
             ,:WSH-XFR-USR-ID
          FROM
              SE_CSLD A
             ,SE_CSLD_PRM_USR B
             ,SE_CSLD_PRM_USR_K C
             ,RT_OFF D
             ,SE_USR_UNT_OFF E
          WHERE
              A.OFF_ID = :WSH-CUR-OFF-ID  
          AND A.OFF_ID = D.OFF_ID  
          AND A.CSLD_MODE_CD = :WSC-XFR-CSLD-MODE
          AND A.CSLD_ID = B.CSLD_ID
          AND B.CSLD_ID = C.CSLD_ID
          AND B.EFF_BGN_DT = C.LTST_EFF_BGN_DT
          AND B.USR_ID <> RTRIM(:WSH-NOT-THIS-USR-ID)
          AND B.USR_ID = E.USR_ID
          AND E.OFF_ID = A.OFF_ID
           END-EXEC
4676
4676         EVALUATE SQLCODE
4676          WHEN WSC-SQL-OK
4676               SET WSS-XF-CSLD-FOUND TO TRUE
4676               DISPLAY 'ASSGND TO XFR CSLD IN OFF'
4676                 DISPLAY 'CSLD ID: ' WSH-XFR-CSLD-ID
4676               DISPLAY 'USR ID: ' WSH-XFR-USR-ID
4676               MOVE WSH-XFR-CSLD-ID TO
4676                    WSD-CSLD-ID OF WSD-CS-PGM
4676                     WSH-CUR-CSLD-ID
4676                       WSH-FINAL-CSLD-ID
4676               MOVE WSH-XFR-USR-ID TO
4676                    WSH-CUR-USR-ID
4676
4676          WHEN WSC-NOT-FOUND
4676               MOVE WSH-CUR-OFF-ID TO
4676                    WSH-OFF-ID-TO-GET-NM
4676               PERFORM 10315-GET-OFFICE-NM
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               STRING
4676               'No transfer caseload found ' 
4676                    DELIMITED BY SIZE
4676                  'in office '
4676                  WSH-OFF-NM DELIMITED BY WSC-2-SPACES
4676               INTO WSL-MISC-ERROR-TXT
4676               END-STRING
4676               MOVE SPACES TO LNK-SQL-TEXT
4676               MOVE 513     TO WSL-CALWIN-ERROR-CODE
4676                    LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE ZEROES     TO WSL-ERROR-VALUE
4676                    LNK-SQL-CODE
4676               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
4676               MOVE LNK-AA0052C-USR-ID
4676                 TO WSL-ADDL-KEY-2
4676               MOVE WSH-CUR-PGM-TYP-CD 
4676                 TO WSL-ADDL-KEY-3
4676               SET WSL-CS            TO TRUE
4676               SET WSL-INFORMATIONAL    TO TRUE
4676               PERFORM 91000-ERROR
4676
4676          WHEN OTHER
4676               MOVE SQLCODE     TO LNK-SQL-CODE
4676                WSL-ERROR-VALUE
4676               MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                   LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               MOVE 'ERROR SELECTING XFR CSLD FOR OFFICE'
4676                TO WSL-MISC-ERROR-TXT
4676                   LNK-SQL-TEXT
4676               SET LNK-CA0001S-FAILURE TO TRUE
4676               SET WSL-FATAL            TO TRUE
4676               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676               PERFORM 90000-CLOSE
4676        END-EVALUATE
4676
4676  ****************************************************************
4676  *** If there was no xfr caseload found in the office, then
4676  *** select any transfer caseload in the current county
4676  *** to assign to the HLPG.  If none are found, write out an 
4676  *** informational message stating that there were no transfer
4676  *** transfer caseloads in the current county.
4676  ****************************************************************
4676
4676         IF WSS-XF-CSLD-NOT-FOUND
4676           PERFORM 69285-GET-CUR-CNTY
4676           
           EXEC SQL
          SELECT 
               DISTINCT(A.CSLD_ID)
              ,D.USR_ID
          INTO
              :WSH-XFR-CSLD-ID
             ,:WSH-XFR-USR-ID
          FROM SE_CSLD A
              ,SE_OFF B
              ,RT_CNTY C
              ,SE_CSLD_PRM_USR D
              ,SE_CSLD_PRM_USR_K E
              ,SE_USR_UNT_OFF F     
          WHERE
              C.CNTY_CD = :WSH-XFR-CNTY-CD
          AND C.CNTY_CD = B.CNTY_CD
          AND B.OFF_ID  = A.OFF_ID
          AND A.CSLD_MODE_CD = :WSC-XFR-CSLD-MODE
          AND A.CSLD_ID = D.CSLD_ID
          AND D.EFF_BGN_DT = E.LTST_EFF_BGN_DT
          AND D.USR_ID <> RTRIM(:WSH-NOT-THIS-USR-ID)
          AND D.USR_ID = F.USR_ID
          AND F.OFF_ID = A.OFF_ID
          AND ROWNUM = 1
           END-EXEC
4676
4676            EVALUATE SQLCODE
4676          WHEN WSC-SQL-OK
4676               SET WSS-XF-CSLD-FOUND TO TRUE
4676               DISPLAY 'ASSGND TO XFR CSLD IN CNTY'
4676                 DISPLAY 'CSLD ID: ' WSH-XFR-CSLD-ID
4676               DISPLAY 'USR ID: ' WSH-XFR-USR-ID
4676               MOVE WSH-XFR-CSLD-ID TO
4676                    WSD-CSLD-ID OF WSD-CS-PGM
4676                     WSH-CUR-CSLD-ID
4676                       WSH-FINAL-CSLD-ID
4676               MOVE WSH-XFR-USR-ID TO
4676                    WSH-CUR-USR-ID
4676
4676          WHEN WSC-NOT-FOUND
4993  ************************************************************
4993  *  Skip over this assignment if it cannot be assigned within
4993  *  the current county
4993  ************************************************************
4993               SET WSS-SKIP-ASSGN TO TRUE
4993  *                 DISPLAY 'SET SKIP ASSIGNMENT SWITCH TO TRUE'
4993  ****************************************************************
4993  *  Set the MT-FAILURE switch to be checked at end of processing
4993  *  to set the CA0001S return value to failure after all MT's 
4993  *  have been processed.                 
4993  ****************************************************************
4993               SET WSS-MT-FAILURE TO TRUE
4993  *                 DISPLAY 'SET MT FAILURE SWITCH TO TRUE'
4676               MOVE WSH-XFR-CNTY-CD TO
4676                    WSH-CNTY-CD-TO-GET-NM 
4676               PERFORM 10318-GET-COUNTY-NM
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               STRING
4676               'Case ' WSH-CUR-CS-ID  
4676                    DELIMITED BY WSC-2-SPACES
4993               ' Program ' WSH-CUR-PGM-TYP-CD
4676                    DELIMITED BY WSC-2-SPACES
4676                  ' could not be transferred in '
4676                  WSH-CNTY-NM DELIMITED BY WSC-2-SPACES
4993               ' county under the current caseload setup.'
4676               '  Please contact your security '
4676               'administrator.'
4676               INTO WSL-MISC-ERROR-TXT
4676               END-STRING
4676               MOVE SPACES TO LNK-SQL-TEXT
4676               MOVE 513     TO WSL-CALWIN-ERROR-CODE
4676                    LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE ZEROES     TO WSL-ERROR-VALUE
4676                    LNK-SQL-CODE
4676               MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
4676               MOVE LNK-AA0052C-USR-ID
4676                 TO WSL-ADDL-KEY-2
4676               MOVE WSH-CUR-PGM-TYP-CD 
4676                 TO WSL-ADDL-KEY-3
4676               SET WSL-CS            TO TRUE
4676               SET WSL-INFORMATIONAL    TO TRUE
4676               PERFORM 91000-ERROR
4676
4676          WHEN OTHER
4676               MOVE SQLCODE     TO LNK-SQL-CODE
4676                WSL-ERROR-VALUE
4676               MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                   LNK-AA0052C-CALWIN-ERROR-CD
4676               MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4993                 MOVE SPACES TO WSL-MISC-ERROR-TXT
4676               MOVE 'ERROR SELECTING XFR CSLD FOR COUNTY'
4676                TO WSL-MISC-ERROR-TXT
4676                   LNK-SQL-TEXT
4676               SET LNK-CA0001S-FAILURE TO TRUE
4676               SET WSL-FATAL            TO TRUE
4676               MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676               MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676               PERFORM 90000-CLOSE
4676           END-EVALUATE
4676        END-IF
4676
4993  ***************************************************************
4993  * Code removed to move the case/program to the transfer csld  *
4993  * in any county.                                              *
4993  ***************************************************************
           .

4676  ****************************************************************  G
4676  *** Get current county based on office id                         G
4676  ****************************************************************  G
4676   69285-GET-CUR-CNTY.
4676        MOVE '69285-GET-CUR-CNTY' TO WSL-PARA-NAME
4676        DISPLAY WSL-PARA-NAME
4676  *    PERFORM 89999-DISPLAY-PARA
           EXEC SQL
            SELECT
               B.CNTY_CD
            INTO
             :WSH-XFR-CNTY-CD
            FROM
             SE_OFF A
               ,RT_CNTY B
            WHERE
             A.OFF_ID = :WSH-CUR-OFF-ID
            AND A.CNTY_CD = B.CNTY_CD
           END-EXEC
4676
4676        EVALUATE SQLCODE
4676            WHEN WSC-SQL-OK
4676          DISPLAY 'CNTY CD: ' WSH-XFR-CNTY-CD
4676             CONTINUE
4676
4676          WHEN OTHER
4676             MOVE SQLCODE     TO LNK-SQL-CODE
4676                 WSL-ERROR-VALUE
4676             MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
4676                LNK-AA0052C-CALWIN-ERROR-CD
4676             MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
4676             MOVE 'ERROR SELECTING XFR CSLD FOR COUNTY'
4676               TO WSL-MISC-ERROR-TXT
4676                 LNK-SQL-TEXT
4676             SET LNK-CA0001S-FAILURE TO TRUE
4676             SET WSL-FATAL            TO TRUE
4676              MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
4676             MOVE WSH-CUR-OFF-ID  TO WSL-ADDL-KEY-1
4676             PERFORM 90000-CLOSE
4676        END-EVALUATE
4676       .

      ****************************************************************  G
      *** SI assignment parameters                                      G
      ****************************************************************  G
       69300-SI-ASGN-PARAM.
        MOVE '69300-SI-ASGN-PARAM' TO WSL-PARA-NAME

      ** Set the Caseload, User ID and Program Type Array for the
      *      Output Parameters which is required for the Suggest User

        INITIALIZE LNK-CA0001S-SUGST-OUT-PARAM
               ,WSI-I

        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-FIN-CNT FROM 1 BY 1
            UNTIL WSI-FIN-CNT = WSC-51 
            OR WSS-PROCESS-COMPLETE

            IF WSH-CS-ID-MTCH(WSI-FIN-CNT) NOT = WSH-CUR-CS-ID
            SET WSS-PROCESS-COMPLETE TO TRUE
            ELSE
               INITIALIZE LNK-CA0001S-SUGST-CSLD-LST(WSI-FIN-CNT)
                  WSH-TEMP-USR-ID
                  WSH-TEMP-FULL-NAM
                  WSH-TEMP-OFF-NAM
                  WSH-TEMP-CSLD-NAM
                  WSH-TEMP-CSLD-ID

               IF (WSH-LANG-MTCH(WSI-FIN-CNT) = WSC-YES) OR

                (WSH-LANG-MTCH(WSI-FIN-CNT) = WSC-NO AND
                WSH-CSLD-USR-ENG-MTCH(WSI-FIN-CNT) = WSC-YES)

               ADD +1 TO WSI-I
               MOVE WSH-CSLD-ID-MTCH(WSI-FIN-CNT) TO
                    LNK-CA0001S-SUGST-OUT-CSLD-ID(WSI-I)
                    WSH-TEMP-CSLD-ID

               MOVE WSH-USR-ID-MTCH(WSI-FIN-CNT) TO
                    LNK-CA0001S-SUGST-OUT-USR-ID(WSI-I)
                    WSH-TEMP-USR-ID

               MOVE LNK-CA0001S-SUGST-DT TO
                    LNK-CA0001S-SUGST-OUT-DT(WSI-I)
               MOVE LNK-CA0001S-SUGST-TM TO
                    LNK-CA0001S-SUGST-OUT-TM(WSI-I)

      * Select concatenated name from user table
               EXEC SQL
                   SELECT
                    RPAD(
                    (A.LAST_NM      ||
                    ', '           ||
                    A.FIRST_NM      ||
                    ' '           ||
                    A.MI           ||
                    ' '           ||
                    A.NM_SUFX), 55,' ')
                    ,C.NM
                INTO
                  :WSH-TEMP-FULL-NAM
                    ,:WSH-TEMP-OFF-NAM
                FROM
                  SE_USR A
                    ,SE_USR_UNT_OFF B
                    ,SE_OFF C
                WHERE
                    A.USR_ID = RTRIM(:WSH-TEMP-USR-ID)
                AND B.USR_ID = A.USR_ID
                      AND B.PRM_SW = :WSC-YES
                AND C.OFF_ID = B.OFF_ID
               END-EXEC

               EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                 CONTINUE

               WHEN OTHER
                 MOVE SQLCODE     TO LNK-SQL-CODE
                            WSL-ERROR-VALUE
                       MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                       MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 MOVE 'ERROR SELECTING SE_USR, USR_UNT_OFF, OFF'
                         TO WSL-MISC-ERROR-TXT
                            LNK-SQL-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL            TO TRUE
                 MOVE WSH-TEMP-USR-ID    TO WSL-IDENTIFIER
                 SET WSL-USER            TO TRUE
                 PERFORM 90000-CLOSE
               END-EVALUATE

               MOVE WSH-TEMP-FULL-NAM TO
                    LNK-CA0001S-SUGST-OUT-USR-NAM(WSI-I)
               MOVE WSH-TEMP-OFF-NAM TO
                    LNK-CA0001S-SUGST-OUT-OFF-NM(WSI-I)
      * Select Name from Case load table
               EXEC SQL
                SELECT
                    NM
                INTO
                    :WSH-TEMP-CSLD-NAM
                FROM
                    SE_CSLD
                WHERE
                    CSLD_ID = :WSH-TEMP-CSLD-ID
               END-EXEC

                EVALUATE SQLCODE
                WHEN WSC-SQL-OK
                    CONTINUE

                WHEN OTHER
                    MOVE SQLCODE     TO LNK-SQL-CODE
                             WSL-ERROR-VALUE
                          MOVE WSC-513     TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                          MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                    MOVE 'ERROR SELECTING SE_CSLD'
                         TO WSL-MISC-ERROR-TXT
                            LNK-SQL-TEXT
                    SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL            TO TRUE
                 MOVE WSH-CUR-CS-ID       TO WSL-IDENTIFIER
                 MOVE WSH-TEMP-CSLD-ID       TO WSL-ADDL-KEY-1
                    PERFORM 90000-CLOSE
               END-EVALUATE


               MOVE WSH-TEMP-CSLD-NAM TO
                    LNK-CA0001S-SUGST-OUT-CSLD-NM(WSI-I)

               END-IF

               IF WSI-FIN-CNT = WSC-50 
                     MOVE '69300-SI-ASGN-PARAM'  TO WSL-PARA-NAME
                     MOVE WSC-MULTIPLE-ROWS-CLWIN
                                              TO WSL-CALWIN-ERROR-CODE
                     MOVE 'MAX 50 CASES REACHED FOR SUGGEST USER INQ'
                                              TO WSL-MISC-ERROR-TXT
                     SET WSL-CS                  TO TRUE
                     MOVE LNK-CA0001S-CS-ID      TO WSL-IDENTIFIER
                  SET WSL-INFORMATIONAL       TO TRUE
                     PERFORM 91000-ERROR
             END-IF
          END-IF
        END-PERFORM

        PERFORM 69830-GET-FETCH-DTM

        MOVE WSD-FETCH-DTM TO LNK-CA0001S-FETCH-DTM

        SET LNK-CA0001S-SUCCESS TO TRUE
        PERFORM 90000-CLOSE
        .

      ****************************************************************  G
      *** First update case program                                     G
      ****************************************************************  G
       69800-1ST-UPDATE-CS-PGM.
        MOVE '69800-1ST-UPDATE-CS-PGM' TO WSL-PARA-NAME

      * Update the Case Program entity with the Caseload Transfer Reason
      * code and Caseload Transfer Date in the Override Process

           SET WSS-1ST-UPDATE-CS-PGM TO TRUE
           PERFORM 69995-CALL-CS-PGM-INIT
           PERFORM 69840-GET-XFR-DTM
5076  * Get the fetch date time instead of using passed in one - it was
5076  * often prior to the upd dtm causing da softlock error
5076       PERFORM 69830-GET-FETCH-DTM

      ****************************************************************  
      ***  This if stmt will check the eff-bgn-dt of the record we 
      ***  are going back to for undo transfer to see if it's earlier
      ***  than the current date.  If it is, we move current date to
      ***  the eff-bgn-dt in order to treat the row properly so it is
      ***  displayed on the View Previous Transfers window.
      **************************************************************** 

          IF WSS-PROCESS-UNDO-XFER
           IF LNK-CA0001S-EFF-BGN-DT < WSH-CURRENT-DT
             MOVE WSH-CURRENT-DT TO LNK-CA0001S-EFF-BGN-DT
           END-IF
          END-IF

          MOVE WSH-CUR-CS-ID        TO WSD-CS-ID           OF WSD-CS-PGM
          MOVE WSH-CUR-PGM-TYP-CD   TO WSD-PGM-TYP-CD  OF WSD-CS-PGM
          MOVE LNK-CA0001S-OVR-RSN-CD
                                    TO WSD-CSLD-XFR-RSN-CD OF WSD-CS-PGM
          MOVE LNK-CA0001S-EFF-BGN-DT
                                    TO WSD-EFF-BGN-DT  OF WSD-CS-PGM
                                       WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
          MOVE WSH-CURRENT-DTM      TO WSD-CSLD-XFR-DT OF WSD-CS-PGM
5076  *        MOVE LNK-CA0001S-FETCH-DTM        TO WSD-FETCH-DTM

          IF LNK-CA0001S-EFF-END-DT <> WSC-HIGH-DT
            MOVE ZEROES        TO WSD-EFF-END-DT-I OF WSD-CS-PGM
            MOVE LNK-CA0001S-EFF-END-DT
                       TO WSD-EFF-END-DT   OF WSD-CS-PGM
          ELSE
            MOVE SPACES    TO WSD-EFF-END-DT       OF WSD-CS-PGM
            MOVE -1           TO WSD-EFF-END-DT-I OF WSD-CS-PGM
          END-IF


          MOVE ZEROES     TO WSD-CS-ID-I           OF WSD-CS-PGM
                             WSD-PGM-TYP-CD-I      OF WSD-CS-PGM
                             WSD-EFF-BGN-DT-I      OF WSD-CS-PGM
                             WSD-CSLD-XFR-RSN-CD-I OF WSD-CS-PGM
                             WSD-CSLD-XFR-DT-I      OF WSD-CS-PGM
                             WSD-OLD-EFF-BGN-DT-I  OF WSD-CS-PGM

          PERFORM 70000-UPDATE-CSLD-INFO
        . 

      ****************************************************************  G
      *** Second update case program                                    G
      ****************************************************************  G
       69825-2ND-UPDATE-CS-PGM.
          MOVE '69825-2ND-UPDATE-CS-PGM' TO WSL-PARA-NAME

      * Update the Case Program entity with the new Caseload ID
      * in the Override Process

          SET WSS-2ND-UPDATE-CS-PGM TO TRUE

          PERFORM 69830-GET-FETCH-DTM

          MOVE WSD-UPD-DTM OF WSD-CS-PGM TO LNK-CA0001S-UPD-DTM

          PERFORM 69995-CALL-CS-PGM-INIT

          MOVE WSH-CUR-CS-ID         TO WSD-CS-ID       OF WSD-CS-PGM
          MOVE WSH-CUR-PGM-TYP-CD  TO WSD-PGM-TYP-CD    OF WSD-CS-PGM

          EVALUATE LNK-CA0001S-CALL-FRM-CD
            WHEN WSC-OR
                  MOVE LNK-CA0001S-CSLD-ID TO 
                  WSD-CSLD-ID OF WSD-CS-PGM
            WHEN WSC-UT
                  MOVE LNK-CA0001S-ASSGN-TO-CSLD TO 
                  WSD-CSLD-ID OF WSD-CS-PGM
            WHEN WSC-CL
                  MOVE WSH-CLOSED-CSLD-ID TO
                  WSD-CSLD-ID OF WSD-CS-PGM
            WHEN WSC-PE
                  MOVE WSH-XFR-CSLD-ID    TO
                  WSD-CSLD-ID OF WSD-CS-PGM
            WHEN WSC-MA
                  MOVE WSH-XFR-CSLD-ID    TO
                  WSD-CSLD-ID OF WSD-CS-PGM
          END-EVALUATE

          MOVE WSH-CURRENT-DT  TO WSD-EFF-BGN-DT OF WSD-CS-PGM

          PERFORM 69835-GET-DIFF-IN-DT

          IF WSH-DIFF-IN-DT-NUM = ZEROES
            MOVE -1            TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
          ELSE
            MOVE ZEROES     TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
            MOVE LNK-CA0001S-EFF-BGN-DT
                      TO WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
          END-IF


          IF LNK-CA0001S-EFF-END-DT <> WSC-HIGH-DT
            MOVE ZEROES        TO WSD-EFF-END-DT-I OF WSD-CS-PGM
            MOVE LNK-CA0001S-EFF-END-DT
                               TO WSD-EFF-END-DT   OF WSD-CS-PGM
          ELSE
            MOVE SPACES    TO WSD-EFF-END-DT       OF WSD-CS-PGM
            MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
          END-IF

          MOVE ZEROES          TO WSD-CS-ID-I      OF WSD-CS-PGM
                                  WSD-PGM-TYP-CD-I OF WSD-CS-PGM
                                  WSD-EFF-BGN-DT-I OF WSD-CS-PGM
                                  WSD-CSLD-ID-I    OF WSD-CS-PGM

          MOVE -1              TO WSD-CSLD-XFR-RSN-CD-I
                                  WSD-CSLD-XFR-DT-I

          PERFORM 70000-UPDATE-CSLD-INFO

          MOVE WSD-UPD-DTM    OF WSD-CS-PGM TO LNK-CA0001S-UPD-DTM
          MOVE WSD-EFF-BGN-DT OF WSD-CS-PGM TO LNK-CA0001S-EFF-BGN-DT
          .

      ****************************************************************  G
      *** Get fetch datetime                                            G
      ****************************************************************  G
       69830-GET-FETCH-DTM.
          MOVE '69830-GET-FETCH-DTM' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Get the current Date time from System

            EXEC SQL
            SELECT
             TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
            INTO
             :WSD-FETCH-DTM
            FROM DUAL
            END-EXEC

          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE

            WHEN OTHER
             MOVE SQLCODE             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
                   MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING SYSDATE FROM DUAL'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             MOVE '69830-GET-FETCH-DTM'
                            TO WSL-PARA-NAME
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL         TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
          END-EVALUATE
        .

      ****************************************************************  G
      *** Get difference in date                                        G
      ****************************************************************  G
       69835-GET-DIFF-IN-DT.
      *   MOVE '69835-GET-DIFF-IN-DT' TO WSL-PARA-NAME

      * Get the difference in the current date and the effective begin
      * date so that a new temporal data is required or not

           EXEC SQL
            SELECT
             TO_NUMBER
             (
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD') -
             TO_DATE(:LNK-CA0001S-EFF-BGN-DT, 'YYYY-MM-DD')
             )
            INTO
             :WSH-DIFF-IN-DT-NUM
            FROM
             DUAL
           END-EXEC

          EVALUATE SQLCODE
            WHEN WSC-SQL-OK
             CONTINUE

            WHEN OTHER
             MOVE SQLCODE             TO LNK-SQL-CODE
                               WSL-ERROR-VALUE
                   MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE '69835-GET-DIFF-IN-DT'
                            TO WSL-PARA-NAME
             MOVE 'ERROR SELECTING DIFFERENCE IN DATE FROM DUAL'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             PERFORM 90000-CLOSE
          END-EVALUATE
        .

      ****************************************************************************
      ***
      *** Get the current date and time to be used for the transfer date and time
      ***
      ****************************************************************************

       69840-GET-XFR-DTM.
        MOVE '69840-GET-XFR-DTM' TO WSL-PARA-NAME
      ** Get the current date/time for the transfer date
      *    PERFORM 89999-DISPLAY-PARA
           EXEC SQL
               SELECT
                     TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
                INTO
                     :WSH-CURRENT-DTM
                FROM DUAL
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN OTHER
                   MOVE SQLCODE TO LNK-SQL-CODE, WSL-ERROR-VALUE
                   MOVE 513 TO WSL-CALWIN-ERROR-CODE
                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR SELECTING SYSDATE FROM DUAL'
                      TO WSL-MISC-ERROR-TXT, LNK-SQL-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Suggest Update Case program                                   G
      ****************************************************************  G
       69850-SU-UPDATE-CS-PGM.
        MOVE '69850-SU-UPDATE-CS-PGM' TO WSL-PARA-NAME

      *      Perform the Case assignment Suggest Update process

        PERFORM 69855-SU-SLCT-PGM-FOR-UPDT

      *  This doesn't need to be called, as it will always go through AR
      *  for initial assignment.  It will always be the 2nd time assigned.
      *
      *    PERFORM 69856-CHK-FIRST-TIME-ASGN

           SET WSS-NOT-FIRST-TIME-SU-ASGN TO TRUE

        PERFORM 69860-SU-UPDATE-CS-PGM-DATA

        IF  WSS-CNTY-PROC-LABOR-MTCH
      *            Check User has credit to same case in the intake month
            PERFORM 69220-UPDATE-CASE-WEIGHTS
        END-IF

        PERFORM 30315-CHK-CS-STS
        .

      ****************************************************************  G
      *** Suggest Update select program for update                      G
      ****************************************************************  G
       69855-SU-SLCT-PGM-FOR-UPDT.
        MOVE '69855-SU-SLCT-PGM-FOR-UPDT' TO WSL-PARA-NAME

           INITIALIZE WST-TABLES

      * Select all the programs of a case and the corresponding Case
      * Assignment Program

           EXEC SQL
           SELECT
             A.CS_ID
            ,A.PGM_TYP_CD
            ,TO_CHAR(A.EFF_BGN_DT,'YYYY-MM-DD')
            ,TO_CHAR(NVL(A.EFF_END_DT,F_HIGH_DT()),'YYYY-MM-DD')
            ,TO_CHAR(A.UPD_DTM, 'YYYY-MM-DD HH24:MI:SS')
            ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
            ,NVL(CSLD_ID, 0)
            ,PGM_STS_CD
           INTO
             :WST-CS-PGM-UPD-DATA
           FROM
             CS_PGM A
            ,RT_PGM P
          WHERE
             A.CS_ID        = :WSH-CUR-CS-ID
            AND A.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.PGM_CD        = A.PGM_TYP_CD
            AND P.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(P.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND P.CS_ASG_PGM        =
             (SELECT
                 Q.CS_ASG_PGM
              FROM
                 CS_PGM B
                ,RT_PGM Q
             WHERE
                 B.CS_ID            = :WSH-CUR-CS-ID
             AND B.PGM_TYP_CD   = :WSH-CUR-PGM-TYP-CD
             AND B.EFF_BGN_DT   <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(B.EFF_END_DT, F_HIGH_DT())     >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND Q.PGM_CD           = B.PGM_TYP_CD
             AND Q.EFF_BGN_DT   <=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             AND NVL(Q.EFF_END_DT, F_HIGH_DT())     >=
                 TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
             )
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
             IF WST-CS-ID(1) <> SPACES
                 MOVE ZEROES TO SQLCODE
             ELSE
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                       MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                                 LNK-SQL-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                       MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
                 MOVE 'ERROR IN SELECTING CS_PGM, RT_PGM '
                                TO WSL-MISC-ERROR-TXT
                                 LNK-SQL-TEXT
                 SET LNK-CA0001S-FAILURE     TO TRUE
                 SET WSL-CS          TO TRUE
                 MOVE WSH-CUR-CS-ID     TO WSL-IDENTIFIER
                 SET WSL-FATAL          TO TRUE
                 MOVE WSH-CUR-PGM-TYP-CD     TO WSL-ADDL-KEY-1
                 PERFORM 90000-CLOSE
             END-IF

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR IN SELECTING CS_PGM, RT_PGM '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE  TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              MOVE WSH-CUR-PGM-TYP-CD  TO WSL-ADDL-KEY-1
              SET WSL-FATAL          TO TRUE
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Check first time assignment                                   G
      ****************************************************************  G
       69856-CHK-FIRST-TIME-ASGN.
        MOVE '69856-CHK-FIRST-TIME-ASGN' TO WSL-PARA-NAME

      * Verify that the suggest update is the first time Update of
      * Caseload Id in Case Program

        SET WSS-FIRST-TIME-SU-ASGN TO TRUE
        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-FIN-CNT FROM 1 BY 1
        UNTIL WSS-NOT-FIRST-TIME-SU-ASGN
           OR WSI-FIN-CNT = WSC-26
           OR WSS-PROCESS-COMPLETE

              IF WST-CS-ID(WSI-FIN-CNT) NOT =  WSH-CUR-CS-ID
          SET WSS-PROCESS-COMPLETE TO TRUE
           ELSE
             IF WST-CSLD-ID(WSI-FIN-CNT) = ZEROES
            SET WSS-FIRST-TIME-SU-ASGN TO TRUE
             ELSE
            SET WSS-NOT-FIRST-TIME-SU-ASGN TO TRUE
             END-IF
           END-IF
        END-PERFORM

        INITIALIZE WSI-FIN-CNT
        .

      ****************************************************************  G
      *** Get Suggest User case assignment program                      G
      ****************************************************************  G
       69857-GET-SU-CS-ASG-PGM.
        MOVE '69857-GET-SU-CS-ASG-PGM' TO WSL-PARA-NAME

      * Get the Case Assignment program for the Program Type in the
      * Suggest User Update Process

           EXEC SQL
            SELECT
             Q.CS_ASG_PGM
            INTO
             :WSH-CUR-CS-ASG-PGM
            FROM
                    CS_PGM B
             ,RT_PGM Q
            WHERE
             B.CS_ID       = :WSH-CUR-CS-ID
            AND B.PGM_TYP_CD       = :WSH-CUR-PGM-TYP-CD
            AND B.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND Q.PGM_CD       = B.PGM_TYP_CD
            AND Q.EFF_BGN_DT       <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(Q.EFF_END_DT, F_HIGH_DT())   >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              CONTINUE

            WHEN OTHER
              MOVE SQLCODE          TO WSL-ERROR-VALUE
                    MOVE WSC-513             TO WSL-CALWIN-ERROR-CODE
                              LNK-SQL-CODE
                                          LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR IN SELECTING CS_PGM, RT_PGM '
                              TO WSL-MISC-ERROR-TXT
                              LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE  TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
              MOVE WSH-CUR-PGM-TYP-CD  TO WSL-ADDL-KEY-1
              SET WSL-FATAL          TO TRUE
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Get suggest update caseload user case language                G
      ****************************************************************  G
       69858-GET-SU-CSLD-USR-CS-LNG.
        MOVE '69858-GET-SU-CSLD-USR-CS-LNG' TO WSL-PARA-NAME

      * Verify the Suggested Caseload complies with the English or
      * Bilingual Language with the Caselanguage

        INITIALIZE WSH-CUR-USR-ID
                WSH-CR-USR-LANG-CD
                WSH-BILNGL-LANG-SW
      * Select User Id from Caseload primary user table
           EXEC SQL
            SELECT
             USR_ID
            INTO
            :WSH-CUR-USR-ID
            FROM
            SE_CSLD_PRM_USR
            WHERE
             CSLD_ID      = :WSH-CUR-CSLD-ID
            AND EFF_BGN_DT      <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
           END-EXEC

        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             CONTINUE

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
                   MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING USER FROM SE_CSLD_PRM_USR'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             MOVE WSH-CUR-CSLD-ID        TO WSL-ADDL-KEY-1
             SET WSL-FATAL        TO TRUE
             PERFORM 90000-CLOSE
        END-EVALUATE

      * Select Language Code and bilingual certification switch from
      * User Language table
           EXEC SQL
            SELECT
             A.LANG_CD
                  ,NVL(A.BILNGL_CERT_SW, :WSC-NO)
            INTO
             :WSH-CR-USR-LANG-CD
            ,:WSH-BILNGL-LANG-SW
            FROM
             SE_USR_LANG A
            ,CS B
            WHERE
             A.USR_ID        = RTRIM(:WSH-CUR-USR-ID)
            AND B.CS_ID        = :WSH-CUR-CS-ID
            AND B.EFF_BGN_DT        <=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT, 'YYYY-MM-DD')
            AND A.LANG_CD        = B.PRM_LANG_CD
           END-EXEC


        EVALUATE SQLCODE
           WHEN WSC-SQL-OK
             SET WSS-SAME-CS-LNG-USR-LNG TO TRUE

           WHEN WSC-NOT-FOUND
             SET WSS-EN-USR-LNG-DIF-CS-LNG TO TRUE
             MOVE WSC-ENGLISH-LANG-CD TO WSH-CR-USR-LANG-CD
             MOVE WSC-NO              TO WSH-BILNGL-LANG-SW
             MOVE ZEROES              TO SQLCODE

           WHEN OTHER
             MOVE SQLCODE             TO WSL-ERROR-VALUE
                               LNK-SQL-CODE
                   MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
             MOVE 'ERROR SELECTING LANGUAGE FROM SE_USR & CS'
                            TO WSL-MISC-ERROR-TXT
                               LNK-SQL-TEXT
             SET LNK-CA0001S-FAILURE TO TRUE
             SET WSL-FATAL        TO TRUE
             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             MOVE WSH-CUR-USR-ID        TO WSL-ADDL-KEY-1
             PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Give Suggest Usage language credit                            G
      ****************************************************************  G
       69859-GIVE-SU-WHAT-LANG-CR.
           MOVE '69859-GIVE-SU-WHAT-LANG-CR' TO WSL-PARA-NAME

      * Determine what kind of Language credit can be given to the user
      * during the first time assignment

        INITIALIZE WSS-GIVE-WHAT-LNG-CR-SW

        EVALUATE TRUE
            WHEN WSS-SAME-CS-LNG-USR-LNG
             IF  WSH-CR-USR-LANG-CD <> WSC-ENGLISH-LANG-CD AND
                       WSH-BILNGL-LANG-SW = WSC-YES

                 COMPUTE WSD-INTK-PGM-WGHT-FCTR =
                      (WSD-INTK-PGM-WGHT-FCTR *
                      WSH-BILNGL-CRDT-FCTR)
                 END-COMPUTE

                 SET WSS-GIVE-BILNGL-CRDT        TO TRUE

             END-IF

           WHEN WSS-EN-USR-LNG-DIF-CS-LNG
             COMPUTE WSD-INTK-PGM-WGHT-FCTR =
                  (WSD-INTK-PGM-WGHT-FCTR *
                  WSH-NON-ENG-CRDT-FCTR)
             END-COMPUTE

             SET WSS-GIVE-NON-ENGL-CRDT  TO TRUE
        END-EVALUATE
        .

      ****************************************************************  G
      *** SU update case program data 1ST Pass                          G
      ****************************************************************  G
       69860-SU-UPDATE-CS-PGM-DATA.
        MOVE '69860-SU-UPDATE-CS-PGM-DATA' TO WSL-PARA-NAME

      * Update the Case Program entity with the new Caseload ID

        INITIALIZE WSI-FIN-CNT
        SET WSS-PROCESS-NOT-COMPLETE TO TRUE

        PERFORM VARYING WSI-FIN-CNT FROM 1 BY 1
        UNTIL WSI-FIN-CNT = WSC-26
           OR WSS-PROCESS-COMPLETE

           IF WST-CS-ID(WSI-FIN-CNT) NOT =  WSH-CUR-CS-ID
          SET WSS-PROCESS-COMPLETE TO TRUE
           ELSE
             SET WSS-1ST-UPDATE-CS-PGM TO TRUE
             PERFORM 69995-CALL-CS-PGM-INIT
                PERFORM 69840-GET-XFR-DTM

             MOVE WST-CS-ID(WSI-FIN-CNT)        TO
                      WSD-CS-ID OF WSD-CS-PGM
                      WSH-CUR-CS-ID
             MOVE WST-PGM-TYP-CD(WSI-FIN-CNT)        TO
                      WSD-PGM-TYP-CD OF WSD-CS-PGM
                      WSH-CUR-PGM-TYP-CD
             MOVE WSC-SUG-USR-OVR-RSN
                       TO WSD-CSLD-XFR-RSN-CD OF WSD-CS-PGM
             MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)        TO
                      WSD-EFF-BGN-DT OF WSD-CS-PGM
                      WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
                      LNK-CA0001S-EFF-BGN-DT
             MOVE WSH-CURRENT-DTM TO WSD-CSLD-XFR-DT OF WSD-CS-PGM
             MOVE WST-UPD-DTM(WSI-FIN-CNT)        TO
                      LNK-CA0001S-UPD-DTM
             MOVE WST-FETCH-DTM(WSI-FIN-CNT)        TO
                      WSD-FETCH-DTM

             MOVE WST-EFF-END-DT(WSI-FIN-CNT)
                           TO WSD-EFF-END-DT   OF WSD-CS-PGM

             IF WST-EFF-END-DT(WSI-FIN-CNT) <> WSC-HIGH-DT
             MOVE ZEROES            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             ELSE
             MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
             MOVE SPACES            TO WSD-EFF-END-DT   OF WSD-CS-PGM
             END-IF

             MOVE ZEROES     TO WSD-CS-ID-I           OF WSD-CS-PGM
                          WSD-PGM-TYP-CD-I      OF WSD-CS-PGM
                          WSD-EFF-BGN-DT-I      OF WSD-CS-PGM
                          WSD-CSLD-XFR-RSN-CD-I OF WSD-CS-PGM
                          WSD-CSLD-XFR-DT-I      OF WSD-CS-PGM
                          WSD-OLD-EFF-BGN-DT-I  OF WSD-CS-PGM

             PERFORM 70000-UPDATE-CSLD-INFO

             PERFORM 69870-2ND-UPD-CS-PGM-SU

           END-IF

        END-PERFORM

        INITIALIZE WSI-FIN-CNT
        .

      ****************************************************************  G
      *** SU update case program 2ND Pass                               G
      ****************************************************************  G
       69870-2ND-UPD-CS-PGM-SU.
        MOVE '69870-2ND-UPD-CS-PGM-SU' TO WSL-PARA-NAME

        SET WSS-2ND-UPDATE-CS-PGM TO TRUE

           PERFORM 69830-GET-FETCH-DTM

        MOVE WSD-UPD-DTM OF WSD-CS-PGM TO LNK-CA0001S-UPD-DTM

        PERFORM 69995-CALL-CS-PGM-INIT

        MOVE WST-CS-ID(WSI-FIN-CNT)        TO
                  WSD-CS-ID OF WSD-CS-PGM
                  WSH-CUR-CS-ID
        MOVE WST-PGM-TYP-CD(WSI-FIN-CNT)        TO
                      WSD-PGM-TYP-CD OF WSD-CS-PGM
                      WSH-CUR-PGM-TYP-CD
        MOVE LNK-CA0001S-CSLD-ID     TO
               WSD-CSLD-ID OF WSD-CS-PGM
                WSH-FINAL-CSLD-ID
        MOVE WSH-CURRENT-DT               TO
               WSD-EFF-BGN-DT OF WSD-CS-PGM

        PERFORM 69835-GET-DIFF-IN-DT

        IF WSH-DIFF-IN-DT-NUM = ZEROES
          MOVE -1      TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
        ELSE
             MOVE WST-EFF-BGN-DT(WSI-FIN-CNT)        TO
                      WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM     
                MOVE ZEROES     TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
        END-IF

        MOVE WST-EFF-END-DT(WSI-FIN-CNT)
               TO WSD-EFF-END-DT   OF WSD-CS-PGM

        IF WST-EFF-END-DT(WSI-FIN-CNT) <> WSC-HIGH-DT
           MOVE ZEROES            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
        ELSE
            MOVE -1            TO WSD-EFF-END-DT-I OF WSD-CS-PGM
            MOVE SPACES            TO WSD-EFF-END-DT   OF WSD-CS-PGM
        END-IF

        MOVE ZEROES     TO WSD-CS-ID-I           OF WSD-CS-PGM
                     WSD-PGM-TYP-CD-I      OF WSD-CS-PGM
                     WSD-EFF-BGN-DT-I      OF WSD-CS-PGM
                     WSD-CSLD-ID-I      OF WSD-CS-PGM

        MOVE -1     TO WSD-CSLD-XFR-RSN-CD-I OF WSD-CS-PGM
                  WSD-CSLD-XFR-DT-I      OF WSD-CS-PGM

      * This section will get the current caseload and caseload
      * worker which is needed to determine if we are to generate
      * some of the notices and interface trigger.  Since there
      * are potentially multiple pgm typ cds being reassigned, we
      * need to do this in each iteration of the loop.

        PERFORM 10305-GET-CUR-CSLD-ID
        PERFORM 10310-CHK-CSLD-EXIST
        MOVE WSH-CUR-CSLD-ID TO WSH-ORIG-CSLD-ID
        MOVE WSH-CSLD-WRKR TO WSH-ORIG-CSLD-WRKR
        MOVE LNK-CA0001S-CSLD-ID TO WSH-CUR-CSLD-ID

        PERFORM 70000-UPDATE-CSLD-INFO

        MOVE WSD-UPD-DTM OF WSD-CS-PGM TO
          WST-UPD-DTM(WSI-FIN-CNT)
           .


      ****************************************************************  G
      *** Call Case program initialize                                  G
      ****************************************************************  G
       69995-CALL-CS-PGM-INIT.
        MOVE '69995-CALL-CS-PGM-INIT' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Call to the Data Access to initialize the variable of the Case
      * Program Entity variables

        CALL WSC-AA-DA-CS-PGM-INIT
        USING WSD-CS-PGM
          ,WSD-CS-PGM
        RETURNING DAS-RESPONSE
        END-CALL

        EVALUATE DAS-RETURN-STS
            WHEN WSC-DA-RETURN-OK
             CONTINUE
            WHEN WSC-DA-ERROR-RETURN
              MOVE LNK-SQL-CODE            TO WSL-ERROR-VALUE
              MOVE '69995-CALL-CS-PGM-INIT' TO WSL-PARA-NAME
                    MOVE WSC-514               TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE 'CS_PGM'
                      TO LNK-AA0052C-CALWIN-ERROR-TEXT
              STRING
                 LNK-SQL-TEXT
                  DELIMITED BY '  '
                 'ERROR INITIALIZING CS_PGM'
                  DELIMITED BY SIZE
              INTO WSL-MISC-ERROR-TXT
              END-STRING

              SET LNK-CA0001S-FAILURE    TO TRUE
              SET WSL-FATAL            TO TRUE
              MOVE WSH-CUR-CS-ID            TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        END-EVALUATE
        .

      ****************************************************************  G
      *** Update caseload information                                   G
      ****************************************************************  G
       70000-UPDATE-CSLD-INFO.
      *   MOVE '70000-UPDATE-CSLD-INFO' TO WSL-PARA-NAME
      *    DISPLAY WSL-PARA-NAME
      *    DISPLAY 'CASELOAD ID = ' WSH-CUR-CSLD-ID

      *        Populate the case program variables before calling the Data
      *        Access Layer.
     
        IF WSS-ASSGN

          MOVE LNK-AA0052C-USR-ID    
                    TO WSD-UPD-USR-ID       OF WSD-CS-PGM
          MOVE LNK-CA0001S-UPD-DTM
                    TO WSD-UPD-DTM       OF WSD-CS-PGM

          MOVE ZEROES     TO WSD-UPD-USR-ID-I OF WSD-CS-PGM
                                WSD-UPD-DTM-I     OF WSD-CS-PGM

          SET FILLERB OF WSD-CS-PGM  TO ADDRESS OF WSD-FETCH-DTM-A

          MOVE WSD-CS-ID      OF WSD-CS-PGM TO WSH-ERR-CS-ID
          MOVE WSD-PGM-TYP-CD OF WSD-CS-PGM TO WSH-ERR-PGM-TYP
                       WSH-HOLD-PGM-TYP-CD
          MOVE WSD-EFF-BGN-DT OF WSD-CS-PGM TO WSH-ERR-BGN-DT
          MOVE WSD-UPD-DTM    OF WSD-CS-PGM TO WSH-ERR-UPD-DTM
             MOVE WSD-FETCH-DTM                TO WSH-ERR-FTCH-DTM
          MOVE WSD-EFF-END-DT      OF WSD-CS-PGM TO WSH-ERR-END-DT

      * Make sure that the cur csld id variable is populated
          MOVE WSD-CSLD-ID    OF WSD-CS-PGM TO WSH-CUR-CSLD-ID

            DISPLAY 'CS-ID ' WSH-ERR-CS-ID
            DISPLAY 'PGM-TYP-CD ' WSH-ERR-PGM-TYP
            DISPLAY 'BGN-DT ' WSH-ERR-BGN-DT
            DISPLAY 'END-DT ' WSH-ERR-END-DT
            DISPLAY 'CSLD-ID ' WSH-CUR-CSLD-ID
         DISPLAY 'OLD EFF BGN DT ' WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
         DISPLAY 'OLD-EFFBGNDT-I ' WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
         DISPLAY 'END-DT-I ' WSD-EFF-END-DT-I OF WSD-CS-PGM
         DISPLAY 'EFF-BGN-DT-I ' WSD-EFF-BGN-DT-I OF WSD-CS-PGM


           PERFORM 70005-UPDATE-CS-PGM
        END-IF
        .

      ****************************************************************  G
      *** Update Case Program                                           G
      ****************************************************************  G
       70005-UPDATE-CS-PGM.
      *     MOVE '70005-UPDATE-CS-PGM' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      *        Call to the Data Access Layer, to update the Case Program
      *        Entity with the caseload information for the given case id
      *        and program type code.

        CALL WSC-AA-DA-UPDATE-CS-PGM
        USING  WSD-CS-PGM
           ,WSD-CS-PGM
        RETURNING DAS-RESPONSE
        END-CALL

        EVALUATE DAS-RETURN-STS
            WHEN WSC-DA-RETURN-OK
             SET LNK-CA0001S-SUCCESS TO TRUE
             INITIALIZE WSH-ERR-VAR
             PERFORM 80000-GENRT-TRIGGER
             CONTINUE

            WHEN WSC-DA-ERROR-RETURN
              MOVE LNK-SQL-CODE            TO WSL-ERROR-VALUE
                    MOVE WSC-514               TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE 'CS_PGM' TO LNK-AA0052C-CALWIN-ERROR-TEXT
              STRING
                 WSH-ERR-PGM-TYP        DELIMITED BY SIZE
                       WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-ERR-BGN-DT        DELIMITED BY SIZE
                       WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-ERR-END-DT        DELIMITED BY SIZE
                 WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-ERR-UPD-DTM        DELIMITED BY SIZE
                       WSC-ASTERISK        DELIMITED BY SIZE
                 WSH-ERR-FTCH-DTM        DELIMITED BY SIZE
                       WSC-ASTERISK        DELIMITED BY SIZE
                 LNK-SQL-TEXT        DELIMITED BY '  '
                 WSC-ASTERISK        DELIMITED BY SIZE
              INTO WSL-MISC-ERROR-TXT
              END-STRING

              MOVE WSL-MISC-ERROR-TXT  TO LNK-SQL-TEXT
5707              MOVE WSH-CUR-CS-ID TO WSL-IDENTIFIER
5707              MOVE WSH-CUR-OFF-ID TO WSL-ADDL-KEY-1
5707              MOVE LNK-AA0052C-USR-ID
5707                TO WSL-ADDL-KEY-2
5707              MOVE WSH-CUR-PGM-TYP-CD 
5707                TO WSL-ADDL-KEY-3
5707              SET WSL-CS            TO TRUE
5707              IF WSS-MT-TYPES-ASGN
5707                      ADD +1 TO WSH-MT-ERR-COUNT
5707                 SET WSS-MT-ERR TO TRUE
5707                  PERFORM 91000-ERROR
5707              ELSE
                  SET LNK-CA0001S-FAILURE  TO TRUE
                  INITIALIZE WSH-ERR-VAR
                  PERFORM 90000-CLOSE
5707              END-IF
        END-EVALUATE

      *  REMOVED PER CHANGE REQUEST 200000634 - MJP 01/27/03

      *    EXEC SQL
      *          COMMIT
      *    END-EXEC
        .

      ****************************************************************  G
      *** Open Peak Cursor                                              G
      ****************************************************************  G
cr3212 70100-OPEN-PEAK-CURSOR.

           MOVE '70100-OPEN-PEAK-CURSOR' TO WSL-PARA-NAME

           EXEC SQL
               OPEN CA0001S_PK_CS_PGM_CUR
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN OTHER
                    MOVE SQLCODE                TO LNK-SQL-CODE
                                                   WSL-ERROR-VALUE
                    MOVE WSC-510                TO WSL-CALWIN-ERROR-CODE
                                            LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE 'CA0001S_C10_CSLD_SPL_IND_CUR'
                      TO LNK-AA0052C-CALWIN-ERROR-TEXT
                    MOVE 'ERROR OPENING CA0001S_PK_CS_PGM_CUR'
                                                TO WSL-MISC-ERROR-TXT
                                                   LNK-SQL-TEXT
                    SET LNK-CA0001S-FAILURE TO TRUE
                    SET WSL-FATAL           TO TRUE
                    MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                    PERFORM 90000-CLOSE
           END-EVALUATE
           .


      ****************************************************************  G
      *** Fetch Peak Cursor                                             G
      ****************************************************************  G
cr3212 70200-FETCH-PEAK-CURSOR.

           MOVE '70200-FETCH-PEAK-CURSOR' TO WSL-PARA-NAME

           INITIALIZE                        WSH-CUR-PK-CS-ID
                                        WSH-CUR-PK-PGM-TYP-CD
                                            WSH-CUR-PK-APP-ID
                                        WSH-CUR-EFF-BGN-DT
                                        WSH-CUR-EFF-END-DT
                                           WSH-CUR-UPD-DTM
                                             WSD-FETCH-DTM

           EXEC SQL
               FETCH CA0001S_PK_CS_PGM_CUR
                INTO
                    :WSH-CUR-PK-CS-ID
                   ,:WSH-CUR-PK-PGM-TYP-CD
                   ,:WSH-CUR-PK-APP-ID
                   ,:WSH-CUR-EFF-BGN-DT
                   ,:WSH-CUR-EFF-END-DT
                   ,:WSH-CUR-UPD-DTM
                   ,:WSD-FETCH-DTM
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                 PERFORM 70400-PROCESS-PEAK-PROGRAMS
               WHEN WSC-NOT-FOUND
                 SET WSS-END-PK-CURSOR TO TRUE
               WHEN OTHER
                 MOVE SQLCODE                TO LNK-SQL-CODE
                                                WSL-ERROR-VALUE
                 MOVE WSC-511                TO WSL-CALWIN-ERROR-CODE
                                             LNK-AA0052C-CALWIN-ERROR-CD
                 MOVE 'ERROR FETCHING CA0001S_PK_CS_PGM_CUR'
                                             TO WSL-MISC-ERROR-TXT
                                                LNK-SQL-TEXT
                 MOVE 'CA0001S_PK_CS_PGM_CUR' TO
                                           LNK-AA0052C-CALWIN-ERROR-TEXT
                 SET LNK-CA0001S-FAILURE TO TRUE
                 SET WSL-FATAL           TO TRUE
                 MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                 PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Close Peak Cursor                                             G
      ****************************************************************  G
cr3212 70300-CLOSE-PEAK-CURSOR.

           MOVE '70300-CLOSE-PEAK-CURSOR' TO WSL-PARA-NAME

           EXEC SQL
               CLOSE CA0001S_PK_CS_PGM_CUR
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   CONTINUE
               WHEN OTHER
                   MOVE SQLCODE                TO LNK-SQL-CODE
                                                  WSL-ERROR-VALUE
                   MOVE WSC-512                TO WSL-CALWIN-ERROR-CODE
                                     LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'ERROR CLOSING CA0001S_PK_CSLD_PGM_CUR'
                                               TO WSL-MISC-ERROR-TXT
                                                  LNK-SQL-TEXT
                   MOVE 'CA0001S_PK_CS_PGM_CUR' TO
                        LNK-AA0052C-CALWIN-ERROR-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-FATAL           TO TRUE
                   MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                   PERFORM 90000-CLOSE
           END-EVALUATE
           .

      ****************************************************************  G
      *** Close Peak Cursor                                             G
      ****************************************************************  G
cr3212 70400-PROCESS-PEAK-PROGRAMS.

           MOVE '70400-PROCESS-PEAK-PROGRAMS' TO WSL-PARA-NAME

      *    If the program is MA program use a different logic
      *    Else use the current logic

2609       IF WSH-CUR-PK-PGM-TYP-CD = WSC-MA-TYP-CD
      *    For MA program, logged in user may / may not be available
      *    so assign it to the transfer caseload of MAXIMUS
2609             PERFORM 10154-GET-MAX-DH-XFER-CSLD
2609             MOVE    WSH-VENDOR-XFER-CSLD          TO
2609                     WSH-CUR-XFER-CSLD
      *    If the PEAK INBOX has a combo case with MA and some other
      *    program assign the caseload to the county of residence xfer
      *    caseload

                 SET     WSS-NON-COMBO                 TO TRUE

                 PERFORM 10850-DET-PEAK-COMBO

                 IF WSS-COMBO

                    IF WSH-CNTY-CD = SPACES
                       PERFORM 10860-GET-INDV-ADR-CNTY
                    END-IF

                    PERFORM 10158-GET-XFER-CSLD-CNTY

                 END-IF
           ELSE

             IF WSS-MASITE-OFFICE
      *when called for peak , off id is not passed . Determine the off
      *id
                 PERFORM 10116-GET-LOGGEDIN-USR-CNTY
                 MOVE WSH-MA-OFF-ID  TO WSH-CUR-OFF-ID
                 PERFORM 10159-GET-XFER-CSLD-MASITE
      *
      *      IF WSH-CUR-PGM-TYP-CD = WSC-LS-TYP-CD  OR
      *         WSH-CUR-PGM-TYP-CD = WSC-LT-TYP-CD  OR
      *         WSH-CUR-PGM-TYP-CD = WSC-MS-TYP-CD  OR
      *         WSH-CUR-PGM-TYP-CD = WSC-FM-TYP-CD  OR
      *         WSH-CUR-PGM-TYP-CD = WSC-CH-TYP-CD  OR
      *         WSH-CUR-PGM-TYP-CD = WSC-AM-TYP-CD
      *        PERFORM 10159-GET-XFER-CSLD-MASITE
      *      ELSE
      * Get applicant's county
      *        PERFORM 10113-GET-HOME-ADR-CNTY
      *        MOVE WSD-CNTY-CD OF WSD-INDV-ADR     TO
      *             WSH-CNTY-CD
      *        PERFORM 10158-GET-XFER-CSLD-CNTY
      *      END-IF
             ELSE
      * Get logged in user's county
                 PERFORM 10116-GET-LOGGEDIN-USR-CNTY
                 PERFORM 10158-GET-XFER-CSLD-CNTY
             END-IF
           END-IF

           PERFORM  70500-UPDATE-PEAK-PROGRAMS
           .
      ****************************************************************  G
      *** Update CS PGM for peak application                            G
      ****************************************************************  G
cr3212 70500-UPDATE-PEAK-PROGRAMS.

           MOVE '70500-UPDATE-PEAK-PROGRAMS' TO WSL-PARA-NAME

           SET  WSS-ASSGN  TO TRUE

           PERFORM 69995-CALL-CS-PGM-INIT

           MOVE WSH-CUR-PK-CS-ID                TO
                                            WSD-CS-ID OF WSD-CS-PGM
           MOVE WSH-CUR-PK-PGM-TYP-CD           TO
                                            WSD-PGM-TYP-CD OF WSD-CS-PGM
           MOVE WSH-CUR-EFF-BGN-DT           TO
                                            LNK-CA0001S-EFF-BGN-DT
           MOVE WSH-CUR-UPD-DTM              TO
                                            LNK-CA0001S-UPD-DTM
           MOVE WSD-FETCH-DTM                TO
                                            WSD-FETCH-DTM
           MOVE WSH-CURRENT-DT               TO
                                            WSD-EFF-BGN-DT OF WSD-CS-PGM
           MOVE WSH-CUR-XFER-CSLD            TO
                                            WSD-CSLD-ID OF WSD-CS-PGM

           PERFORM 69835-GET-DIFF-IN-DT

           IF WSH-DIFF-IN-DT-NUM = 0
              MOVE -1         TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
           ELSE
              MOVE ZEROES     TO WSD-OLD-EFF-BGN-DT-I OF WSD-CS-PGM
              MOVE LNK-CA0001S-EFF-BGN-DT
                              TO WSD-OLD-EFF-BGN-DT OF WSD-CS-PGM
           END-IF

           MOVE WSH-CUR-EFF-END-DT
                              TO WSD-EFF-END-DT   OF WSD-CS-PGM
           IF WSH-CUR-EFF-END-DT <> WSC-HIGH-DT
              MOVE ZEROES         TO WSD-EFF-END-DT-I OF WSD-CS-PGM
           ELSE
              MOVE -1             TO WSD-EFF-END-DT-I OF WSD-CS-PGM
              MOVE SPACES         TO WSD-EFF-END-DT   OF WSD-CS-PGM
           END-IF

           MOVE ZEROES TO  WSD-CSLD-ID-I           OF WSD-CS-PGM
                           WSD-EFF-BGN-DT-I        OF WSD-CS-PGM
                           WSD-PGM-TYP-CD-I        OF WSD-CS-PGM
                           WSD-CS-ID-I             OF WSD-CS-PGM

           PERFORM 70000-UPDATE-CSLD-INFO
           .
      ****************************************************************  G
      *** Commit the logical transaction                                G
      ****************************************************************  G
       75000-COMMIT.

        MOVE '75000-COMMIT' TO WSL-PARA-NAME

      * This commit is only to be used for Mass Transfer transactions.
      * DO NOT USE THIS FOR DIRECT CALLS FROM C SERVICES!!!!!!!!!!!!
     
           EXEC SQL
           COMMIT
           END-EXEC

           EVALUATE SQLCODE                                          
               WHEN WSC-SQL-OK                                       
                    CONTINUE                                         
               WHEN OTHER                                            
                    MOVE SQLCODE           TO WSL-ERROR-VALUE        
                    MOVE 514               TO WSL-CALWIN-ERROR-CODE
                    MOVE 'ERROR IN COMMIT' TO WSL-MISC-ERROR-TXT     
                    SET WSL-FATAL          TO TRUE
              SET LNK-CA0001S-FAILURE TO TRUE
              MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
                    PERFORM 90000-CLOSE
           END-EVALUATE 
           .

      ****************************************************************  G
      *** Rollback MT trans if error between 1st and 2nd update         G
      ****************************************************************  G
       75001-ROLLBACK.

        MOVE '75001-ROLLBACK' TO WSL-PARA-NAME

      * This is only to be used for Mass Transfer transactions.
      * DO NOT USE THIS FOR DIRECT CALLS FROM C SERVICES!!!!!!!!!!!!
     
           EXEC SQL
            ROLLBACK
           END-EXEC

           EVALUATE SQLCODE                                          
               WHEN WSC-SQL-OK                                       
                    CONTINUE                                         
               WHEN OTHER                                            
                    MOVE SQLCODE             TO WSL-ERROR-VALUE        
                    MOVE 514                 TO WSL-CALWIN-ERROR-CODE  
                    MOVE 'ERROR IN ROLLBACK' TO WSL-MISC-ERROR-TXT     
                    SET WSL-FATAL            TO TRUE
              SET LNK-CA0001S-FAILURE TO TRUE
              MOVE WSH-CUR-CS-ID          TO WSL-IDENTIFIER
                    PERFORM 90000-CLOSE
           END-EVALUATE 
           .

      ****************************************************************     G
      *** Generate Trigger/Notice                         G
      ****************************************************************     G
       80000-GENRT-TRIGGER.
        MOVE '80000-GENRT-TRIGGER' TO WSL-PARA-NAME

        IF WSS-PROCESS-CL-ASSGN
           NEXT SENTENCE
        ELSE
4882  *           PERFORM 80001-GENRT-NEW-USER-LTR
           PERFORM 80002-GENRT-ALERT-TRIGGER
           IF (WSS-WRKR-REASSGND AND
            WSS-2ND-UPDATE-CS-PGM AND
            WSS-INTERFACE-TRIGGER)
           PERFORM 80018-GENRT-MS88-TRIGGER
           END-IF
        END-IF
        .

      ****************************************************************     G
      *** Generate New User Letter                         G
      ****************************************************************     G
       80001-GENRT-NEW-USER-LTR.
      *     MOVE '80001-GENRT-NEW-USER-LTR' TO WSL-PARA-NAME
      *     DISPLAY WSL-PARA-NAME

      * Circumstances to suppress the new user letter
 
        IF LNK-CA0001S-LAST-XFER
          EXIT PARAGRAPH
        END-IF

        IF WSS-PROCESS-AR-ASSGN AND
           LNK-CA0001S-PGM-STS-CD = WSC-DENIED
          EXIT PARAGRAPH
        END-IF

        MOVE WSH-CUR-PGM-TYP-CD TO WSH-SUPPRESS-NEW-USR-LTR
        IF WSH-SUPPRESS-PGM-TYP
          EXIT PARAGRAPH
        END-IF

      * End circumstances to suppress the new user letter

        IF WSS-2ND-UPDATE-CS-PGM
           PERFORM 80010-CHK-CSLD-WRKR-REASSGND
        END-IF

        IF  (WSS-PROCESS-AR-ASSGN OR
           (WSS-WRKR-REASSGND AND
              WSS-2ND-UPDATE-CS-PGM))

            PERFORM 80005-GET-APP-CWIN

            INITIALIZE WSH-CC2100S-VARIABLES

            SET LNK-CC2100C-COR-SPDLTR  TO TRUE
            SET LNK-CC2100C-REF-CS-ID   TO TRUE
            SET LNK-CC2100C-BATCH        TO TRUE
            SET LNK-CC2100C-RPNT-N        TO TRUE
            SET LNK-CC2100C-SUPP-N        TO TRUE
            SET LNK-CC2100C-COREC-N        TO TRUE

            MOVE WSH-CUR-CS-ID        TO LNK-CC2100C-REF-ID
            MOVE WSH-CUR-PGM-TYP-CD        TO LNK-CC2100C-PGM-CD
            MOVE WSH-CURRENT-DT        TO LNK-CC2100C-EFFECTIVE-DT
                               LNK-CC2100C-PROCESS-DT

4623            MOVE WSC-CA0001             TO LNK-CC2100C-RSN-CD

            MOVE WSH-APP-CWIN        TO LNK-CC2100C-CWIN

      * Call subroutine CC2100S
                  CALL WSC-CC2100S
                       USING LNK-COMMON-PARMS
                        ,WSH-CC2100S-VARIABLES
                  END-CALL

                  IF LNK-CC2100C-FAIL
                  MOVE LNK-SQL-CODE       TO WSL-ERROR-VALUE
                  MOVE WSC-501            TO WSL-CALWIN-ERROR-CODE
                              LNK-AA0052C-CALWIN-ERROR-CD
                  STRING
                       'Error In CC*'
                       WSH-CUR-CS-ID            DELIMITED BY SIZE
                       WSC-ASTERISK            DELIMITED BY SIZE
  
                       WSH-CURRENT-DT            DELIMITED BY SIZE
                       WSC-ASTERISK            DELIMITED BY SIZE

                       WSC-CA0001            DELIMITED BY SIZE
                       WSC-ASTERISK            DELIMITED BY SIZE
                       LNK-AA0052C-CALWIN-ERROR-TEXT
                                      DELIMITED BY '  '
                   INTO WSL-MISC-ERROR-TXT
                   END-STRING

                   MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
                   MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
                   SET WSL-CS             TO TRUE
                   SET LNK-CA0001S-FAILURE TO TRUE
                   PERFORM 90000-CLOSE
                  END-IF
            END-IF
         .

      ****************************************************************  G
      *** Generate Alert trigger                                        G
      ****************************************************************  G
       80002-GENRT-ALERT-TRIGGER.
      * MOVE '80002-GENRT-ALERT-TRIGGER' TO WSL-PARA-NAME

        PERFORM 80003-DELETE-ALERT-TRIGGER

        IF LNK-CA0001S-LAST-XFER
          EXIT PARAGRAPH
        END-IF

      * Generate alert if a New Worker is assigned to the Case

        INITIALIZE WSH-AL0001S-VARIABLES

        SET LNK-AL0001S-CREATE        TO TRUE
        MOVE WSC-ALRT-124             TO LNK-AL0001S-ALRT-CD
        MOVE WSH-CURRENT-DT             TO LNK-AL0001S-ALRT-DT
        MOVE WSH-CUR-CS-ID             TO LNK-AL0001S-CS-ID
5372        MOVE WSH-CUR-PGM-TYP-CD        TO LNK-AL0001S-PGM-TYP-CD
      * Generate Alert
              CALL WSC-AL0001S
                  USING LNK-COMMON-PARMS
                    ,WSH-AL0001S-VARIABLES
              END-CALL

              IF LNK-AL0001S-NOT-SUCCESSFUL
                  MOVE LNK-SQL-CODE       TO WSL-ERROR-VALUE
               MOVE WSC-501            TO WSL-CALWIN-ERROR-CODE
                                   LNK-AA0052C-CALWIN-ERROR-CD
                  MOVE WSC-AL0001S TO LNK-AA0052C-CALWIN-ERROR-TEXT
                  MOVE 'ERROR CALLING ALERT SUBROUTINE DURING CREATE'
                                 TO WSL-MISC-ERROR-TXT
                                   LNK-SQL-TEXT
                  SET LNK-CA0001S-FAILURE TO TRUE
            SET WSL-FATAL           TO TRUE
            MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
                  PERFORM 90000-CLOSE
              END-IF
        .

      ****************************************************************  G
      *** Delete Alert trigger                                          G
      ****************************************************************  G
       80003-DELETE-ALERT-TRIGGER.
      * MOVE '80003-DELETE-ALERT-TRIGGER' TO WSL-PARA-NAME

        PERFORM 80004-GET-ALRT-DT

        IF WSS-DELETE-ALRT AND
           WSH-ALRT-DT NOT = WSH-CURRENT-DT
            INITIALIZE WSH-AL0001S-VARIABLES

            SET LNK-AL0001S-DELETE          TO TRUE
            MOVE WSC-ALRT-124           TO LNK-AL0001S-ALRT-CD
            MOVE WSH-ALRT-DT               TO LNK-AL0001S-ALRT-DT
            MOVE WSH-CUR-CS-ID          TO LNK-AL0001S-CS-ID
5372            MOVE WSH-CUR-PGM-TYP-CD TO LNK-AL0001S-PGM-TYP-CD
      * Generate Alert
                  CALL WSC-AL0001S
                   USING LNK-COMMON-PARMS
                     ,WSH-AL0001S-VARIABLES
                  END-CALL

                  IF LNK-AL0001S-NOT-SUCCESSFUL
                   MOVE LNK-SQL-CODE        TO WSL-ERROR-VALUE
                   MOVE WSC-501            TO WSL-CALWIN-ERROR-CODE
                                        LNK-AA0052C-CALWIN-ERROR-CD
                   MOVE 'AL0001S' TO LNK-AA0052C-CALWIN-ERROR-TEXT
                   MOVE 'ERROR CALLING ALERT SUBROUTINE DURING DELETE'
                                  TO WSL-MISC-ERROR-TXT
                                  LNK-SQL-TEXT
                   SET LNK-CA0001S-FAILURE TO TRUE
                   SET WSL-CS             TO TRUE
                   MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
             SET WSL-FATAL           TO TRUE
                   PERFORM 90000-CLOSE
                  END-IF
              END-IF
        .

      ****************************************************************  G
      *** Get alert date                                                G
      ****************************************************************  G
       80004-GET-ALRT-DT.
      *   MOVE '80004-GET-ALRT-DT' TO WSL-PARA-NAME

      * Select alert date
           EXEC SQL
            SELECT
             TO_CHAR(ALRT_DT, 'YYYY-MM-DD')
            INTO
             :WSH-ALRT-DT
            FROM
             AL_CS_ALRT
            WHERE
             CS_ID       = :WSH-CUR-CS-ID
5372            AND PGM_TYP_CD  = :WSH-CUR-PGM-TYP-CD
            AND ALRT_CD     = :WSC-ALRT-124
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-MULTIPLE-ROWS
                    SET WSS-DELETE-ALRT         TO TRUE

            WHEN WSC-NOT-FOUND
              SET WSS-DONT-DELETE-ALRT     TO TRUE

            WHEN OTHER
              MOVE SQLCODE         TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                    MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR SELECTING AL_CS_ALRT'
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-CS              TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              SET WSL-FATAL           TO TRUE
              PERFORM 90000-CLOSE

        END-EVALUATE
        .

      ****************************************************************  G
      *** Get the Application Cwin for the new user letter              G
      ****************************************************************  G
       80005-GET-APP-CWIN.
        MOVE '80005-GET-APP-CWIN' TO WSL-PARA-NAME

        INITIALIZE SQLCA
                WSH-APP-CWIN 

      * This select will pull the Head of Household CWIN to be sent on 
      * the interface trigger.  If for some reason there is no Head of
      * Household CWIN, set the flag so that no trigger is sent.

           EXEC SQL
            SELECT
                APP_CWIN
            INTO
            :WSH-APP-CWIN
            FROM
             CS
            WHERE
             CS_ID     = :WSH-CUR-CS-ID
            AND EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                   TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
              
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
              CONTINUE

            WHEN OTHER
              MOVE SQLCODE         TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                    MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR SELECTING APP-CWIN FROM CS'
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL          TO TRUE
              MOVE WSH-CUR-CS-ID      TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE

        END-EVALUATE
        .


      ****************************************************************  G
      *** Get the current caseload worker to see if reassigned          G
      ****************************************************************  G
       80010-CHK-CSLD-WRKR-REASSGND.
        MOVE '80010-CHK-CSLD-WRKR-REASSGND' TO WSL-PARA-NAME

      * Check to see if the original caseload worker is the same as the
      * updated caseload worker to determine whether a new user letter 
      * or an MS88 interface trigger needs to be created.

        PERFORM 80013-GET-HD-HH-CWIN

        IF WSH-HOLD-PGM-TYP-CD <> SPACES AND
              WSH-CUR-PGM-TYP-CD = SPACES
             MOVE WSH-HOLD-PGM-TYP-CD 
            TO WSH-CUR-PGM-TYP-CD
        END-IF

        IF WSH-CUR-CSLD-ID = ZEROES
           PERFORM 10305-GET-CUR-CSLD-ID
        END-IF

        PERFORM 10310-CHK-CSLD-EXIST

        MOVE WSH-CSLD-WRKR TO WSH-CUR-CSLD-WRKR

        IF WSH-CUR-CSLD-WRKR <> WSH-ORIG-CSLD-WRKR
           SET WSS-WRKR-REASSGND TO TRUE
        ELSE
           SET WSS-WRKR-NOT-REASSGND TO TRUE
           DISPLAY 'WRKR NOT REASSGND'
        END-IF
           .  


      ****************************************************************  G
      *** Get the Head of Household Cwin for the interface trigger      G
      ****************************************************************  G
       80013-GET-HD-HH-CWIN.
        MOVE '80013-GET-HD-HH-CWIN' TO WSL-PARA-NAME

        INITIALIZE SQLCA
                WSH-CWIN 

      * This select will pull the Head of Household CWIN to be sent on 
      * the interface trigger.  If for some reason there is no Head of
      * Household CWIN, set the flag so that no trigger is sent.

           EXEC SQL
            SELECT
             NVL(HD_HH_CWIN,0)
            INTO
             :WSH-CWIN
            FROM
             CS
            WHERE
             CS_ID     = :WSH-CUR-CS-ID
            AND EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND NVL(EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
              
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-NOT-FOUND
              IF WSH-CWIN = ZEROES
                 SET WSS-NO-INTERFACE-TRIGGER TO TRUE
                 DISPLAY 'Case ID has no HD_HH_CWIN '
                WSH-CUR-CS-ID
              ELSE
                 SET WSS-INTERFACE-TRIGGER TO TRUE
              END-IF

            WHEN OTHER
              MOVE SQLCODE         TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                    MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR SELECTING HD-HH-CWIN FROM CS'
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE     
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE

        END-EVALUATE
        .        


      ****************************************************************  G
      *** Generate interface trigger                                    G
      ****************************************************************  G
       80015-GENRT-INTERFACE-TRIGGER.
        MOVE '80015-GENRT-INTERFACE-TRIGGER' TO WSL-PARA-NAME

        DISPLAY 'Calling INV002S...'

      * Module used for all calls to INV002S
      * Call INV002S
           CALL WSC-INV002S
               USING LNK-COMMON-PARMS,
                        WSH-INV002S-VARIABLES
           END-CALL

           IF NOT LNK-INV002S-SUCCESS
              MOVE SQLCODE         TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                    MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR IN INTERFACE CALL TO INV002S'
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-CS              TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE
        ELSE
                 DISPLAY 'Good return from INV002S'
                 DISPLAY 'INV002S RTN STS: ' LNK-INV002S-RTN-STS
           END-IF
        . 
        .

      ****************************************************************
      *                                                              *
      * Set up data for MS88 Interface Trigger.                      *
      *                                                              *
      ****************************************************************
       80018-GENRT-MS88-TRIGGER.
           MOVE '80018-GENRT-MS88-TRIGGER' TO WSL-PARA-NAME

      * Generate Interface Trigger if the case is reassigned to another
      * worker.
       
        INITIALIZE WSH-INV002S-VARIABLES

        MOVE WSH-CUR-CS-ID            TO LNK-INV002S-CASE-ID
        MOVE WSH-CWIN            TO LNK-INV002S-CWIN-ID
        MOVE WSC-MS88-TRAN-TYPE     TO LNK-INV002S-TRAN-TYPE
        MOVE WSC-CASE-TYPE            TO LNK-INV002S-TRAN-MODE
        MOVE WSC-KEY-FIELD-C            TO LNK-INV002S-KEY-FIELD

        PERFORM 80015-GENRT-INTERFACE-TRIGGER
           .

      ****************************************************************  G
      *** Generate notice trigger                                       G
      ****************************************************************  G
       80020-GENRT-NOTICE-TRIGGER.
        MOVE '80020-GENRT-NOTICE-TRIGGER' TO WSL-PARA-NAME

      * Generate Notice Trigger

        PERFORM 80021-GET-CS-INDV-DIS-STS

        IF WSS-TRIGGER-NOTICE

      * Trigger MC0222 Oak, if the Medical Recipient's Disability is
      * Pending.

            INITIALIZE WSH-CC2100S-VARIABLES

            SET LNK-CC2100C-COR-FORM        TO TRUE
            SET LNK-CC2100C-REF-CS-ID   TO TRUE
            SET LNK-CC2100C-BATCH        TO TRUE
            SET LNK-CC2100C-RPNT-N        TO TRUE
            SET LNK-CC2100C-SUPP-N        TO TRUE
            SET LNK-CC2100C-COREC-N        TO TRUE

            MOVE WSH-CUR-CS-ID        TO LNK-CC2100C-REF-ID
            MOVE WSH-CC-TRGR-CWIN        TO LNK-CC2100C-CWIN
            MOVE WSC-MEDICAL             TO LNK-CC2100C-PGM-CD
            MOVE WSH-CURRENT-DT        TO LNK-CC2100C-EFFECTIVE-DT
                               LNK-CC2100C-PROCESS-DT
            MOVE WSC-T28PIPE             TO LNK-CC2100C-MISC-PARMS
4623           MOVE WSC-ZCA1S1             TO LNK-CC2100C-RSN-CD

      * Call subroutine CC2100S
      *            CALL WSC-CC2100S
      *              USING LNK-COMMON-PARMS
      *                ,WSH-CC2100S-VARIABLES
      *            END-CALL

      *            IF LNK-CC2100C-FAIL
      *             MOVE LNK-SQL-CODE        TO WSL-ERROR-VALUE
      *             MOVE WSC-501            TO WSL-CALWIN-ERROR-CODE
      *                                  LNK-AA0052C-CALWIN-ERROR-CD

      *             STRING
      *                 'Error In CC*'
      *                 WSH-CUR-CS-ID            DELIMITED BY SIZE
      *                 WSC-ASTERISK            DELIMITED BY SIZE

      *                 WSH-CURRENT-DT            DELIMITED BY SIZE
      *                 WSC-ASTERISK            DELIMITED BY SIZE
    
      *                 WSC-ZCA1S1            DELIMITED BY SIZE
      *                 WSC-ASTERISK            DELIMITED BY SIZE

      *                 WSC-T28PIPE            DELIMITED BY SIZE
      *                 WSC-ASTERISK            DELIMITED BY SIZE
      *                 LNK-AA0052C-CALWIN-ERROR-TEXT
      *                                DELIMITED BY '  '
      *             INTO WSL-MISC-ERROR-TXT
      *             END-STRING

      *             MOVE WSL-MISC-ERROR-TXT TO LNK-SQL-TEXT
      *             MOVE WSH-CUR-CS-ID        TO WSL-IDENTIFIER
      *             SET WSL-CS             TO TRUE
      *             SET LNK-CA0001S-FAILURE TO TRUE
      *             PERFORM 90000-CLOSE
      *            END-IF
      *        END-IF
        .
      ****************************************************************  G
      *** Get Case Individual disability status                         G
      ****************************************************************  G
       80021-GET-CS-INDV-DIS-STS.
           MOVE '80021-GET-CS-INDV-DIS-STS' TO WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Get the Medical Recipient Client whose Disability status is
      * Pending

        MOVE LNK-CA0001S-CS-ID          TO WSH-CUR-CS-ID
      * Select CWIN
           EXEC SQL
            SELECT
             C.CWIN
            INTO
             :WSH-CC-TRGR-CWIN
            FROM
             CS_PGM  A
            ,CS_INDV B
            ,INDV_DIS_DED_STS C
            WHERE
             A.CS_ID     = :WSH-CUR-CS-ID
            AND A.PGM_TYP_CD = :WSC-MEDICAL
            AND A.EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND B.CS_ID     = A.CS_ID
            AND B.EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND NVL(B.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND C.CWIN     = B.CWIN
            AND C.EFF_BGN_DT <=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
             TO_DATE(:WSH-CURRENT-DT , 'YYYY-MM-DD')
            AND C.DED_STS_CD = :WSC-PENDING
           END-EXEC

        EVALUATE SQLCODE
            WHEN WSC-SQL-OK
            WHEN WSC-MULTIPLE-ROWS
              SET WSS-TRIGGER-NOTICE        TO TRUE

            WHEN WSC-NOT-FOUND
              SET WSS-DONT-TRIGGER-NOTICE        TO TRUE

            WHEN OTHER
              MOVE SQLCODE         TO WSL-ERROR-VALUE
                                LNK-SQL-CODE
                    MOVE WSC-513            TO WSL-CALWIN-ERROR-CODE
                                         LNK-AA0052C-CALWIN-ERROR-CD
                    MOVE SPACES TO LNK-AA0052C-CALWIN-ERROR-TEXT
              MOVE 'ERROR SELECTING INDV_DIS_DED_STS'
                             TO WSL-MISC-ERROR-TXT
                                LNK-SQL-TEXT
              SET LNK-CA0001S-FAILURE TO TRUE
              SET WSL-FATAL         TO TRUE
              MOVE WSH-CUR-CS-ID         TO WSL-IDENTIFIER
              PERFORM 90000-CLOSE

        END-EVALUATE
        .

5277  ****************************************************************
5277  * End date special indicator processing to be shared with      *
5277  * program CA0002S.                                             *
5277  ****************************************************************
       COPY CA0005C.

      ****************************************************************  G
      *** For MASite processing only, this checks to see if any non-    G
      *** MA Site pgm typ cds that tabled initially.                    G
      ****************************************************************  G
       85000-CHECK-NONMA-PGM-CDS.

        MOVE '85000-CHECK-NONMA-PGM-CDS' TO WSL-PARA-NAME
      *        DISPLAY WSL-PARA-NAME
      *        DISPLAY 'COUNT = ' WSA-NONMA-CNT
      *    PERFORM 89999-DISPLAY-PARA
        IF WSS-PROCESS-AR-ASSGN
           IF WSA-NONMA-CNT > 0
           SET WSS-ASSGN TO TRUE
           SET WSI-NONMA-IDX TO 1
           SET WSS-AR-COULD-NOT-ASSGN TO TRUE
           PERFORM 85100-PROCESS-NONMA-PGM-CDS UNTIL
              WST-NONMA-OFF-ID(WSI-NONMA-IDX) = 0
           END-IF
        END-IF
           .

      ****************************************************************  G
      *** For MASite processing only, this will process the non-MASite  G
      *** pgm typ cds that were tabled initially.                       G
      ****************************************************************  G
       85100-PROCESS-NONMA-PGM-CDS.

        MOVE '85100-PROCESS-NONMA-PGM-CDS' TO WSL-PARA-NAME
      *        DISPLAY WSL-PARA-NAME
      *    PERFORM 89999-DISPLAY-PARA
      * Move the tabled data to the current fields 
          
        MOVE WST-NONMA-CS-ID(WSI-NONMA-IDX) TO 
               WSH-CUR-CS-ID
        MOVE WST-NONMA-PGM-TYP-CD(WSI-NONMA-IDX) TO 
               WSH-CUR-PGM-TYP-CD
        MOVE WST-NONMA-EFF-BGN-DT(WSI-NONMA-IDX) TO 
               WSH-CUR-EFF-BGN-DT
        MOVE WST-NONMA-EFF-END-DT(WSI-NONMA-IDX) TO 
               WSH-CUR-EFF-END-DT
        MOVE WST-NONMA-UPD-DTM(WSI-NONMA-IDX) TO 
               WSH-CUR-UPD-DTM
        MOVE WST-NONMA-FETCH-DTM(WSI-NONMA-IDX) TO 
               WSD-FETCH-DTM
        MOVE WST-NONMA-CSLD-ID(WSI-NONMA-IDX) TO 
               WSH-CUR-CSLD-ID
        MOVE WST-NONMA-PGM-STS-CD(WSI-NONMA-IDX) TO 
               WSH-CUR-PGM-STS-CD
        MOVE WST-NONMA-OFF-ID(WSI-NONMA-IDX) TO
               WSH-CUR-OFF-ID
        MOVE WST-NONMA-HLPG-NM(WSI-NONMA-IDX) TO
               WSH-HLPG-NM

4974  * Determine if the case has special indicators
4974        PERFORM 10320-CHK-CS-SPL-IND-EXIST
 
4974  * If the case has special indicators
4974        IF WSS-CS-SPL-IND-EXISTS
4974           DISPLAY 'Case has special indicators'
4974           PERFORM 10730-OPEN-C10-CURSOR
4974           PERFORM 10740-FETCH-C10-CURSOR

4974  * If there are caseloads with special indicators found
4974           IF WSS-NOT-END-C10-CURSOR
4974           DISPLAY 'Caseloads with spl inds found'
4974              SET WSS-USED-SPL-IND-CUR TO TRUE
4974           PERFORM 20205-AR-CS-PGM-LOGIC
4974              UNTIL WSS-END-C10-CURSOR

4974  * If there are no caseloads with special indicators found
4974           ELSE
4974           DISPLAY 'No Caseloads with spl inds found'
4974           SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
4974           PERFORM 10440-OPEN-C2-CURSOR
4974           PERFORM 10450-FETCH-C2-CURSOR
4974           PERFORM 20205-AR-CS-PGM-LOGIC
4974              UNTIL WSS-END-C2-CURSOR
4974           END-IF

4974  * If the case has no special indicators
4974        ELSE
4974           DISPLAY 'Case has no special indicators'
4974           SET WSS-NOT-USED-SPL-IND-CUR TO TRUE
            PERFORM 10440-OPEN-C2-CURSOR        
           PERFORM 10450-FETCH-C2-CURSOR
           PERFORM 20205-AR-CS-PGM-LOGIC
               UNTIL WSS-END-C2-CURSOR
4974        END-IF

        PERFORM 69000-SRCH-BEST-CSLD

           INITIALIZE WSH-CSLD-TBL-ARRAY
                      WSI-CSLD

        ADD 1 TO WSI-NONMA-IDX
           .

      ****************************************************************  G
      *** Call to Debug Para                                            G
      ****************************************************************  G
      *89999-DISPLAY-PARA.
      *    DISPLAY WSL-PARA-NAME
      *
      *    CALL 'aa_SvcDebugMessageVar' USING
      *         BY REFERENCE DBG-PROG-NAME,
      *         BY VALUE 1,
      *         BY VALUE 1,
      *         BY REFERENCE
      *         "PARA NAME: %.30s " & x"00",
      *         BY REFERENCE WSL-PARA-NAME
      *    END-CALL
      *    .
      *
      ****************************************************************  G
      *** Close Para                                                    G
      ****************************************************************  G
       90000-CLOSE.

      * Call to Error Log Subroutine in case case of any error otherwise
      * go back to the called Program

      *   COMMENTED OUT SO THAT ALL ERRORS IN INITIAL ASSIGNMENT RETURN
      *   FATAL ERROR AS WELL. - MJP - 01/16/2003

      *     IF LNK-CA0001S-CALL-FRM-CD = WSC-AR AND
      *         LNK-CA0001S-FAILURE
      *         SET LNK-CA0001S-SUCCESS TO TRUE
      *         SET WSL-INFORMATIONAL   TO TRUE
      *         PERFORM 91000-ERROR
      *     END-IF

5277        IF WSH-TEMP-RETURN-CD-FAILURE 
5277          SET LNK-CA0001S-FAILURE TO TRUE
5277        END-IF

           DISPLAY 'RETURN VALUE ' LNK-CA0001S-RETURN-CD 

        IF LNK-CA0001S-FAILURE OR
           LNK-CA0001S-NO-XFR 

            SET WSL-FATAL              TO TRUE
            SET LNK-AA0052C-FATAL         TO TRUE
            PERFORM 91000-ERROR
        END-IF

4993  *******************************************************************
4993  *  If any of the mass transfers fail because it couldn't assign it
4993  *  to someone within the county - set the return value to fail so
4993  *  that it will post the Mass Transfer failed alert, but we don't
4993  *  want to create another af_err_log entry, so it's set after
4993  *  the final call for errors.
4993  *******************************************************************
5707  *  If there were any mass transfer errors, set MT Failure to true
5707  *******************************************************************
5707        IF WSH-MT-ERR-COUNT > 0
5707          SET WSS-MT-FAILURE TO TRUE
5707        END-IF
5707
4993       IF WSS-MT-FAILURE
4993          SET LNK-CA0001S-FAILURE TO TRUE
4993        END-IF

        INITIALIZE WSH-HOLD-VARIABLES
                WST-TABLES
                WST-USR-ONGNG-CS-CR-DATA
                WSS-PROCESS-SNGL-CS-PGM
                WSS-PROCESS-TYPE-SW
                LNK-CA0001S-CALL-FRM-CD

        PERFORM 99999-GOBACK
        .

      ****************************************************************  G
      *** Error Para                                                    G
      ****************************************************************  G
       91000-ERROR.
      * Call Error Log Routine


        DISPLAY "ERROR MESSAGE: " WSL-MISC-ERROR-TXT
        DISPLAY "IN PARAGRAPH:  " WSL-PARA-NAME
        DISPLAY "ERROR CODE:  " WSL-ERROR-VALUE

        CALL WSC-AA0016S USING LNK-COMMON-PARMS
                     ,WSL-ERROR-LOG
        END-CALL
        .

      ****************************************************************  G
      *** Program Exit Para                                             G
      ****************************************************************  G
       99999-GOBACK.
        GOBACK
        .

